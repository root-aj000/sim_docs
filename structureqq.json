[
  {
    "filePath": "U:/sim/apps/sim/drizzle.config.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "drizzle-kit",
      "./lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/instrumentation-client.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "./lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/instrumentation-edge.ts",
    "functions": [
      "register"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "./lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/instrumentation-node.ts",
    "functions": [
      "initializeOpenTelemetry",
      "register"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@opentelemetry/api",
      "./lib/env",
      "./lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/instrumentation.ts",
    "functions": [
      "register"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/middleware.ts",
    "functions": [
      "handleRootPathRedirects",
      "handleInvitationRedirects",
      "handleWorkspaceInvitationAPI",
      "handleSecurityFiltering",
      "middleware"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "better-auth/cookies",
      "next/server",
      "./lib/environment",
      "./lib/logs/console/logger",
      "./lib/security/csp"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/next.config.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next",
      "./lib/env",
      "./lib/environment",
      "./lib/security/csp"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tailwind.config.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "tailwindcss"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/telemetry.config.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "./lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/trigger.config.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@trigger.dev/build/extensions/core",
      "@trigger.dev/sdk",
      "./lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/vitest.config.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "path",
      "@vitejs/plugin-react",
      "vite-tsconfig-paths",
      "vitest/config"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/vitest.setup.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@testing-library/jest-dom/vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/global-error.tsx",
    "functions": [
      "GlobalError"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/error"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/layout.tsx",
    "functions": [
      "RootLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next",
      "next-runtime-env",
      "@/components/branded-layout",
      "@/lib/branding/inject-theme",
      "@/lib/branding/metadata",
      "@/lib/logs/console/logger",
      "@/lib/posthog/provider",
      "@/app/globals.css",
      "@/lib/session/session-context",
      "@/app/theme-provider",
      "@/app/zoom-prevention"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/manifest.ts",
    "functions": [
      "manifest"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next",
      "@/lib/branding/branding"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/not-found.tsx",
    "functions": [
      "NotFound"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/components/ui/button",
      "@/lib/branding/branding",
      "@/app/(landing)/components/nav/nav",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/page.tsx",
    "functions": [
      "Page"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next",
      "@/app/(landing)/landing"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/sitemap.ts",
    "functions": [
      "sitemap"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/theme-provider.tsx",
    "functions": [
      "ThemeProvider"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/navigation",
      "next-themes",
      "next-themes"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/zoom-prevention.tsx",
    "functions": [
      "ZoomPrevention"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/background/knowledge-processing.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@trigger.dev/sdk",
      "@/lib/env",
      "@/lib/knowledge/documents/service",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/background/logs-webhook-delivery.ts",
    "functions": [
      "getRetryDelayWithJitter",
      "generateSignature"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "@trigger.dev/sdk",
      "drizzle-orm",
      "uuid",
      "@/lib/logs/console/logger",
      "@/lib/logs/types",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/background/schedule-execution.ts",
    "functions": [
      "calculateNextRunTime",
      "executeScheduleJob"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@trigger.dev/sdk",
      "croner",
      "drizzle-orm",
      "uuid",
      "@/lib/api-key/service",
      "@/lib/billing",
      "@/lib/billing/core/subscription",
      "@/lib/environment/utils",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/logging-session",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/lib/schedules/utils",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils",
      "@/executor",
      "@/serializer",
      "@/services/queue",
      "@/stores/workflows/server-utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/background/webhook-execution.ts",
    "functions": [
      "processTriggerFileOutputs",
      "executeWebhookJob",
      "executeWebhookJobInternal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "@trigger.dev/sdk",
      "drizzle-orm",
      "uuid",
      "@/lib/billing",
      "@/lib/environment/utils",
      "@/lib/execution/files",
      "@/lib/idempotency",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/logging-session",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/lib/utils",
      "@/lib/webhooks/attachment-processor",
      "@/lib/webhooks/utils",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils",
      "@/executor",
      "@/executor/types",
      "@/serializer",
      "@/stores/workflows/server-utils",
      "@/triggers"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/background/workflow-execution.ts",
    "functions": [
      "executeWorkflowJob"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "@trigger.dev/sdk",
      "drizzle-orm",
      "uuid",
      "@/lib/billing",
      "@/lib/environment/utils",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/logging-session",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils",
      "@/executor",
      "@/serializer",
      "@/stores/workflows/server-utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/blocks/registry"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/registry.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/blocks/blocks/agent",
      "@/blocks/blocks/airtable",
      "@/blocks/blocks/api",
      "@/blocks/blocks/api_trigger",
      "@/blocks/blocks/arxiv",
      "@/blocks/blocks/browser_use",
      "@/blocks/blocks/chat_trigger",
      "@/blocks/blocks/clay",
      "@/blocks/blocks/condition",
      "@/blocks/blocks/confluence",
      "@/blocks/blocks/discord",
      "@/blocks/blocks/elevenlabs",
      "@/blocks/blocks/evaluator",
      "@/blocks/blocks/exa",
      "@/blocks/blocks/file",
      "@/blocks/blocks/firecrawl",
      "@/blocks/blocks/function",
      "@/blocks/blocks/generic_webhook",
      "@/blocks/blocks/github",
      "@/blocks/blocks/gmail",
      "@/blocks/blocks/google",
      "@/blocks/blocks/google_calendar",
      "@/blocks/blocks/google_docs",
      "@/blocks/blocks/google_drive",
      "@/blocks/blocks/google_form",
      "@/blocks/blocks/google_sheets",
      "@/blocks/blocks/google_vault",
      "@/blocks/blocks/guardrails",
      "@/blocks/blocks/huggingface",
      "@/blocks/blocks/hunter",
      "@/blocks/blocks/image_generator",
      "@/blocks/blocks/input_trigger",
      "@/blocks/blocks/jina",
      "@/blocks/blocks/jira",
      "@/blocks/blocks/knowledge",
      "@/blocks/blocks/linear",
      "@/blocks/blocks/linkup",
      "@/blocks/blocks/manual_trigger",
      "@/blocks/blocks/mcp",
      "@/blocks/blocks/mem0",
      "@/blocks/blocks/memory",
      "@/blocks/blocks/microsoft_excel",
      "@/blocks/blocks/microsoft_planner",
      "@/blocks/blocks/microsoft_teams",
      "@/blocks/blocks/mistral_parse",
      "@/blocks/blocks/mongodb",
      "@/blocks/blocks/mysql",
      "@/blocks/blocks/notion",
      "@/blocks/blocks/onedrive",
      "@/blocks/blocks/openai",
      "@/blocks/blocks/outlook",
      "@/blocks/blocks/parallel",
      "@/blocks/blocks/perplexity",
      "@/blocks/blocks/pinecone",
      "@/blocks/blocks/postgresql",
      "@/blocks/blocks/qdrant",
      "@/blocks/blocks/reddit",
      "@/blocks/blocks/resend",
      "@/blocks/blocks/response",
      "@/blocks/blocks/router",
      "@/blocks/blocks/s3",
      "@/blocks/blocks/schedule",
      "@/blocks/blocks/serper",
      "@/blocks/blocks/sharepoint",
      "@/blocks/blocks/slack",
      "@/blocks/blocks/stagehand",
      "@/blocks/blocks/stagehand_agent",
      "@/blocks/blocks/starter",
      "@/blocks/blocks/supabase",
      "@/blocks/blocks/tavily",
      "@/blocks/blocks/telegram",
      "@/blocks/blocks/thinking",
      "@/blocks/blocks/translate",
      "@/blocks/blocks/twilio",
      "@/blocks/blocks/typeform",
      "@/blocks/blocks/vision",
      "@/blocks/blocks/wealthbox",
      "@/blocks/blocks/webhook",
      "@/blocks/blocks/whatsapp",
      "@/blocks/blocks/wikipedia",
      "@/blocks/blocks/workflow",
      "@/blocks/blocks/workflow_input",
      "@/blocks/blocks/x",
      "@/blocks/blocks/youtube",
      "@/blocks/blocks/zep",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/utils.ts",
    "functions": [
      "resolveOutputType"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/branded-layout.tsx",
    "functions": [
      "BrandedLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/branding/branding"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/icons.tsx",
    "functions": [
      "UsersIcon",
      "SettingsIcon",
      "SearchIcon",
      "Spinner",
      "AgentIcon",
      "ApiIcon",
      "ConditionalIcon",
      "AirplaneIcon",
      "WorkIcon",
      "WorkflowIcon",
      "WarnIcon",
      "UploadIcon",
      "TrashIcon",
      "StudentIcon",
      "SignalIcon",
      "SectionIcon",
      "ReminderIcon",
      "DatabaseIcon",
      "CrateIcon",
      "CookieIcon",
      "ErrorIcon",
      "ChromeIcon",
      "CalendarIcon",
      "MessagesIcon",
      "NotificationsIcon",
      "MailIcon",
      "CodeIcon",
      "ChartBarIcon",
      "AtomIcon",
      "ElevatorIcon",
      "DollarIcon",
      "CreditCardIcon",
      "BoatIcon",
      "CancelIcon",
      "BankIcon",
      "AmbulanceIcon",
      "ComponentIcon",
      "BrightIcon",
      "CrewAIIcon",
      "HubspotIcon",
      "SalesforceIcon",
      "FirecrawlIcon",
      "JinaAIIcon",
      "TranslateIcon",
      "SlackIcon",
      "GithubIcon",
      "SerperIcon",
      "TavilyIcon",
      "ConnectIcon",
      "YouTubeIcon",
      "PerplexityIcon",
      "NotionIcon",
      "GmailIcon",
      "GoogleDriveIcon",
      "xAIIcon",
      "xIcon",
      "GoogleSheetsIcon",
      "GoogleIcon",
      "DiscordIcon",
      "LinkedInIcon",
      "CrunchbaseIcon",
      "InputIcon",
      "StartIcon",
      "PineconeIcon",
      "OpenAIIcon",
      "ExaAIIcon",
      "RedditIcon",
      "AirtableIcon",
      "GoogleDocsIcon",
      "GoogleCalendarIcon",
      "SupabaseIcon",
      "WhatsAppIcon",
      "StripeIcon",
      "EyeIcon",
      "ConfluenceIcon",
      "TwilioIcon",
      "ImageIcon",
      "TypeformIcon",
      "DocumentIcon",
      "MistralIcon",
      "BrainIcon",
      "StagehandIcon",
      "BrowserUseIcon",
      "Mem0Icon",
      "ElevenLabsIcon",
      "LinkupIcon",
      "JiraIcon",
      "LinearIcon",
      "TelegramIcon",
      "ClayIcon",
      "MicrosoftIcon",
      "MicrosoftTeamsIcon",
      "OutlookIcon",
      "MicrosoftExcelIcon",
      "PackageSearchIcon",
      "HuggingFaceIcon",
      "ShieldCheckIcon",
      "WealthboxIcon",
      "WebhookIcon",
      "ScheduleIcon",
      "QdrantIcon",
      "ArxivIcon",
      "WikipediaIcon",
      "HunterIOIcon",
      "MicrosoftOneDriveIcon",
      "MicrosoftSharepointIcon",
      "MicrosoftPlannerIcon",
      "ParallelIcon",
      "PostgresIcon",
      "MySQLIcon",
      "OpenRouterIcon",
      "MongoDBIcon",
      "ServerIcon",
      "GoogleFormsIcon",
      "ZepIcon"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/contexts/socket-context.tsx",
    "functions": [
      "SocketProvider"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "socket.io-client",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/consts.ts",
    "functions": [
      "isValidBlockType",
      "isWorkflowBlockType"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/executor/index.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/blocks/types",
      "@/executor",
      "@/executor/__test-utils__/executor-mocks",
      "@/executor/consts"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/index.ts",
    "functions": [
      "trackWorkflowTelemetry"
    ],
    "classes": [
      "Executor"
    ],
    "exports": {},
    "imports": [
      "@/lib/block-path-calculator",
      "@/lib/logs/console/logger",
      "@/lib/logs/types",
      "@/blocks",
      "@/blocks/types",
      "@/executor/consts",
      "@/executor/handlers",
      "@/executor/loops/loops",
      "@/executor/parallels/parallels",
      "@/executor/parallels/utils",
      "@/executor/path/path",
      "@/executor/resolver/resolver",
      "@/executor/types",
      "@/executor/utils",
      "@/executor/utils/virtual-blocks",
      "@/serializer/types",
      "@/stores/execution/store",
      "@/stores/panel/console/store",
      "@/stores/settings/general/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/types",
      "@/blocks/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/utils.ts",
    "functions": [],
    "classes": [
      "StreamingResponseFormatProcessor"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-collaborative-workflow.ts",
    "functions": [
      "useCollaborativeWorkflow"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "reactflow",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/lib/workflows/block-outputs",
      "@/blocks",
      "@/blocks/utils",
      "@/contexts/socket-context",
      "@/hooks/use-undo-redo",
      "@/stores/operation-queue/store",
      "@/stores/panel/variables/store",
      "@/stores/undo-redo",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-debounce.ts",
    "functions": [
      "useDebounce"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-knowledge-base-tag-definitions.ts",
    "functions": [
      "useKnowledgeBaseTagDefinitions"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/knowledge/consts",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-knowledge.ts",
    "functions": [
      "useKnowledgeBase",
      "useKnowledgeBaseDocuments",
      "useKnowledgeBasesList",
      "useDocumentChunks"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "fuse.js",
      "@/lib/logs/console/logger",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-mcp-server-test.ts",
    "functions": [
      "isUrlBasedTransport",
      "useMcpServerTest",
      "getTestResultSummary",
      "isServerSafeToAdd"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger",
      "@/lib/mcp/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-mcp-tools.ts",
    "functions": [
      "useMcpTools",
      "useMcpToolExecution"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "@/lib/logs/console/logger",
      "@/lib/mcp/types",
      "@/lib/mcp/utils",
      "@/stores/mcp-servers/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-next-available-slot.ts",
    "functions": [
      "useNextAvailableSlot"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-stream-cleanup.ts",
    "functions": [
      "useStreamCleanup"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-subscription-state.ts",
    "functions": [
      "useSubscriptionState",
      "useUsageLimit"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/billing/constants",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-tag-definitions.ts",
    "functions": [
      "useTagDefinitions"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/knowledge/consts",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-tag-selection.ts",
    "functions": [
      "useTagSelection"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/hooks/use-collaborative-workflow"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-undo-redo.ts",
    "functions": [
      "useUndoRedo"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "reactflow",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/stores/operation-queue/store",
      "@/stores/undo-redo",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-user-permissions.ts",
    "functions": [
      "useUserPermissions"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/hooks/use-workspace-permissions"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/hooks/use-workspace-permissions.ts",
    "functions": [
      "useWorkspacePermissions"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@sim/db/schema",
      "@/lib/logs/console/logger",
      "@/stores/constants"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/auth-client.ts",
    "functions": [
      "useSession"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@better-auth/sso/client",
      "@better-auth/stripe/client",
      "better-auth/client/plugins",
      "better-auth/react",
      "@/lib/auth",
      "@/lib/env",
      "@/lib/environment",
      "@/lib/session/session-context",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/auth.ts",
    "functions": [
      "getSession"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@better-auth/sso",
      "@better-auth/stripe",
      "@sim/db",
      "@sim/db/schema",
      "better-auth",
      "better-auth/adapters/drizzle",
      "better-auth/next-js",
      "better-auth/plugins",
      "drizzle-orm",
      "next/headers",
      "stripe",
      "@/components/emails/render-email",
      "@/lib/billing",
      "@/lib/billing/authorization",
      "@/lib/billing/core/usage",
      "@/lib/billing/organization",
      "@/lib/billing/plans",
      "@/lib/billing/webhooks/enterprise",
      "@/lib/billing/webhooks/invoices",
      "@/lib/billing/webhooks/subscription",
      "@/lib/email/mailer",
      "@/lib/email/utils",
      "@/lib/email/validation",
      "@/lib/env",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "./sso/consts"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/block-path-calculator.ts",
    "functions": [],
    "classes": [
      "BlockPathCalculator"
    ],
    "exports": {},
    "imports": [
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/browser-storage.ts",
    "functions": [],
    "classes": [
      "BrowserStorage",
      "LandingPromptStorage"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/env.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@t3-oss/env-nextjs",
      "next-runtime-env",
      "zod"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/environment.ts",
    "functions": [
      "getCostMultiplier"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "./env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/naming.ts",
    "functions": [
      "generateIncrementalName",
      "generateWorkspaceName",
      "generateFolderName",
      "generateSubfolderName",
      "generateCreativeWorkflowName"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/stores/folders/store",
      "@/stores/organization/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/redis.ts",
    "functions": [
      "getRedisClient",
      "hasProcessedMessage",
      "markMessageAsProcessed",
      "acquireLock",
      "getLockValue",
      "releaseLock",
      "closeRedisConnection"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "ioredis",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/response-format.ts",
    "functions": [
      "extractFieldsFromSchema",
      "parseResponseFormatSafely",
      "extractFieldValues",
      "formatFieldValues",
      "extractBlockIdFromOutputId",
      "extractPathFromOutputId",
      "parseOutputContentSafely",
      "hasResponseFormatSelection",
      "getSelectedFieldNames",
      "traverseObjectPathInternal",
      "traverseObjectPath"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/theme-sync.ts",
    "functions": [
      "syncThemeToNextThemes",
      "getThemeFromNextThemes"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/use-forwarded-ref.ts",
    "functions": [
      "useForwardedRef"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/utils.ts",
    "functions": [
      "cn",
      "getEncryptionKey",
      "encryptSecret",
      "decryptSecret",
      "convertScheduleOptionsToCron",
      "getTimezoneAbbreviation",
      "formatDateTime",
      "formatDate",
      "formatTime",
      "formatDuration",
      "generatePassword",
      "getRotatingApiKey",
      "validateName",
      "isValidName",
      "encodeSSE",
      "getInvalidCharacters",
      "generateRequestId"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "clsx",
      "tailwind-merge",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/index.ts",
    "functions": [
      "sanitizeRequest",
      "isStreamingExecution",
      "isReadableStream",
      "executeProviderRequest"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/types",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/models.ts",
    "functions": [
      "getProviderModels",
      "getProviderDefaultModel",
      "getModelPricing",
      "getModelCapabilities",
      "getModelsWithTemperatureSupport",
      "getModelsWithTempRange01",
      "getModelsWithTempRange02",
      "getProvidersWithToolUsageControl",
      "getHostedModels",
      "getComputerUseModels",
      "supportsTemperature",
      "getMaxTemperature",
      "supportsToolUsageControl",
      "updateOllamaModels",
      "updateOpenRouterModels",
      "getEmbeddingModelPricing",
      "getModelsWithReasoningEffort",
      "getModelsWithVerbosity"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/icons"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/environment",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/utils.ts",
    "functions": [
      "updateOllamaProviderModels",
      "updateOpenRouterProviderModels",
      "getBaseModelProviders",
      "getAllModelProviders",
      "getProviderFromModel",
      "getProvider",
      "getProviderConfigFromModel",
      "getAllModels",
      "getAllProviderIds",
      "getProviderModels",
      "getProviderIcon",
      "generateStructuredOutputInstructions",
      "extractAndParseJSON",
      "transformCustomTool",
      "getCustomTools",
      "transformBlockTool",
      "calculateCost",
      "getModelPricing",
      "formatCost",
      "getHostedModels",
      "shouldBillModelUsage",
      "getApiKey",
      "prepareToolsWithUsageControl",
      "trackForcedToolUsage",
      "supportsTemperature",
      "getMaxTemperature",
      "supportsToolUsageControl",
      "prepareToolExecution"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/providers/anthropic",
      "@/providers/azure-openai",
      "@/providers/cerebras",
      "@/providers/deepseek",
      "@/providers/google",
      "@/providers/groq",
      "@/providers/mistral",
      "@/providers/models",
      "@/providers/ollama",
      "@/providers/openai",
      "@/providers/openrouter",
      "@/providers/types",
      "@/providers/xai",
      "@/stores/custom-tools/store",
      "@/stores/providers/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/scripts/process-docs.ts",
    "functions": [
      "processDocs",
      "main"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "path",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/chunkers",
      "@/lib/environment",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/serializer/index.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/providers/utils",
      "@/serializer/__test-utils__/test-workflows",
      "@/serializer/index",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/serializer/index.ts",
    "functions": [
      "shouldIncludeField"
    ],
    "classes": [
      "WorkflowValidationError",
      "Serializer"
    ],
    "exports": {},
    "imports": [
      "reactflow",
      "@/lib/block-path-calculator",
      "@/lib/logs/console/logger",
      "@/blocks",
      "@/blocks/types",
      "@/serializer/types",
      "@/stores/workflows/workflow/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/serializer/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/blocks/types",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/index.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "http",
      "vitest",
      "@/lib/logs/console/logger",
      "@/socket-server/config/socket",
      "@/socket-server/rooms/manager",
      "@/socket-server/routes/http"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "http",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/socket-server/config/socket",
      "@/socket-server/handlers",
      "@/socket-server/middleware/auth",
      "@/socket-server/rooms/manager",
      "@/socket-server/routes/http"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/constants.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/index.ts",
    "functions": [
      "initializeApplication",
      "isAppInitialized",
      "isDataInitialized",
      "handleBeforeUnload",
      "cleanupApplication",
      "clearUserData",
      "useAppInitialization",
      "useLoginInitialization",
      "reinitializeAfterLogin"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger",
      "@/stores/copilot/store",
      "@/stores/custom-tools/store",
      "@/stores/execution/store",
      "@/stores/panel/console/store",
      "@/stores/panel/variables/store",
      "@/stores/settings/environment/store",
      "@/stores/subscription/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/index.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/types",
      "@/tools/__test-utils__/test-tools",
      "@/tools/index",
      "@/tools/registry",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/index.ts",
    "functions": [
      "getDeepApiErrorMessage",
      "createTransformedErrorFromErrorInfo",
      "processFileOutputs",
      "executeTool",
      "isErrorResponse",
      "handleInternalRequest",
      "validateClientSideParams",
      "handleProxyRequest",
      "executeMcpTool"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/auth/internal",
      "@/lib/logs/console/logger",
      "@/lib/mcp/utils",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/executor/types",
      "@/tools/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/params.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/tools/params",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/params.ts",
    "functions": [
      "getBlockConfigurations",
      "getToolParametersConfig",
      "createLLMToolSchema",
      "createExecutionToolSchema",
      "mergeToolParameters",
      "filterSchemaForLLM",
      "validateToolParameters",
      "isPasswordParameter",
      "formatParameterLabel"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/registry.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/airtable",
      "@/tools/arxiv",
      "@/tools/browser_use",
      "@/tools/clay",
      "@/tools/confluence",
      "@/tools/discord",
      "@/tools/elevenlabs",
      "@/tools/exa",
      "@/tools/file",
      "@/tools/firecrawl",
      "@/tools/function",
      "@/tools/github",
      "@/tools/gmail",
      "@/tools/google",
      "@/tools/google_calendar",
      "@/tools/google_docs",
      "@/tools/google_drive",
      "@/tools/google_form",
      "@/tools/google_sheets",
      "@/tools/google_vault",
      "@/tools/guardrails",
      "@/tools/http",
      "@/tools/huggingface",
      "@/tools/hunter",
      "@/tools/jina",
      "@/tools/jira",
      "@/tools/knowledge",
      "@/tools/linear",
      "@/tools/linkup",
      "@/tools/mem0",
      "@/tools/memory",
      "@/tools/microsoft_excel",
      "@/tools/microsoft_planner",
      "@/tools/microsoft_teams",
      "@/tools/mistral",
      "@/tools/mongodb",
      "@/tools/mysql",
      "@/tools/notion",
      "@/tools/onedrive",
      "@/tools/openai",
      "@/tools/outlook",
      "@/tools/parallel",
      "@/tools/perplexity",
      "@/tools/pinecone",
      "@/tools/postgresql",
      "@/tools/qdrant",
      "@/tools/reddit",
      "@/tools/resend",
      "@/tools/s3",
      "@/tools/serper",
      "@/tools/sharepoint",
      "@/tools/slack",
      "@/tools/sms",
      "@/tools/stagehand",
      "@/tools/supabase",
      "@/tools/tavily",
      "@/tools/telegram",
      "@/tools/thinking",
      "@/tools/twilio",
      "@/tools/typeform",
      "@/tools/types",
      "@/tools/vision",
      "@/tools/wealthbox",
      "@/tools/whatsapp",
      "@/tools/wikipedia",
      "@/tools/workflow",
      "@/tools/x",
      "@/tools/youtube",
      "@/tools/zep"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/oauth/oauth"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/tools/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/utils.ts",
    "functions": [
      "formatRequestParams",
      "executeRequest",
      "formatParameterNameForError",
      "validateRequiredParametersAfterMerge",
      "createParamSchema",
      "getClientEnvVars",
      "createCustomToolRequestBody",
      "getTool",
      "getToolAsync",
      "createToolConfig",
      "getCustomTool"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/stores/custom-tools/store",
      "@/stores/settings/environment/store",
      "@/tools/registry",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/index.ts",
    "functions": [
      "getTrigger",
      "getTriggersByProvider",
      "getAllTriggers",
      "getTriggerIds",
      "isTriggerValid"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "./airtable",
      "./generic",
      "./github",
      "./gmail",
      "./googleforms/webhook",
      "./microsoftteams",
      "./outlook",
      "./slack",
      "./stripe/webhook",
      "./telegram",
      "./types",
      "./whatsapp"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/layout.tsx",
    "functions": [
      "isColorDark",
      "AuthLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/app/(landing)/components/nav/nav",
      "./components/auth-background"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/landing.tsx",
    "functions": [
      "Landing"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/dynamic",
      "@/app/(landing)/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/layout.tsx",
    "functions": [
      "LandingLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/changelog/layout.tsx",
    "functions": [
      "ChangelogLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/(landing)/components/nav/nav"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/changelog/page.tsx",
    "functions": [
      "ChangelogPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next",
      "./components/changelog-content"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/changelog.xml/route.ts",
    "functions": [
      "escapeXml",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/constants.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/fonts/inter.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/font/google"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/llms.txt/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/unsubscribe/page.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "./unsubscribe"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/unsubscribe/unsubscribe.tsx",
    "functions": [
      "UnsubscribeContent",
      "Unsubscribe"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui",
      "@/lib/branding/branding"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/layout.tsx",
    "functions": [
      "WorkspaceRootLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/auth-client",
      "@/contexts/socket-context"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/page.tsx",
    "functions": [
      "WorkspacePage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/components/ui/loading-agent",
      "@/lib/auth-client",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/agent.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/blocks/blocks/agent"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/agent.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/blocks/types",
      "@/providers/utils",
      "@/stores/providers/store",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/airtable.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/airtable/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/api_trigger.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/api.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/http/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/arxiv.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/arxiv/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/browser_use.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/browser_use/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/chat_trigger.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/clay.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/clay/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/condition.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/confluence.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/confluence/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/discord.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/discord/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/elevenlabs.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/elevenlabs/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/evaluator.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/providers/types",
      "@/providers/utils",
      "@/stores/providers/store",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/exa.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/exa/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/file.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/tools/file/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/firecrawl.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/firecrawl/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/function.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/execution/languages",
      "@/blocks/types",
      "@/tools/function/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/generic_webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/github.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/github/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/gmail.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/gmail/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/google_calendar.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/google_calendar/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/google_docs.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/google_docs/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/google_drive.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/google_drive/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/google_form.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/google_sheets.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/google_sheets/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/google_vault.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/google.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/google/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/guardrails.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/environment",
      "@/blocks/types",
      "@/providers/utils",
      "@/stores/providers/store",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/huggingface.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/huggingface/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/hunter.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/hunter/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/image_generator.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/openai/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/input_trigger.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/jina.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/jina/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/jira.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/jira/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/knowledge.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/linear.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/linear/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/linkup.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/linkup/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/manual_trigger.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/mcp.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/mcp/utils",
      "@/blocks/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/mem0.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/mem0/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/memory.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/microsoft_excel.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/microsoft_excel/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/microsoft_planner.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/microsoft_planner/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/microsoft_teams.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/microsoft_teams/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/mistral_parse.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/mistral/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/mongodb.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/mongodb/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/mysql.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/mysql/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/notion.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/notion/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/onedrive.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/onedrive/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/openai.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/outlook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/outlook/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/parallel.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/perplexity.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/perplexity/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/pinecone.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/pinecone/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/postgresql.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/postgresql/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/qdrant.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/qdrant/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/reddit.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/reddit/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/resend.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/resend/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/response.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/response/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/router.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/environment",
      "@/blocks/types",
      "@/providers/types",
      "@/providers/utils",
      "@/stores/providers/store",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/s3.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/s3/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/schedule.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/serper.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/serper/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/sharepoint.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/sharepoint/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/slack.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/slack/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/sms.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/sms/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/stagehand_agent.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/stagehand/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/stagehand.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/starter.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/supabase.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/tools/supabase/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/tavily.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/tavily/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/telegram.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/telegram/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/thinking.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/thinking/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/translate.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/environment",
      "@/blocks/types",
      "@/providers/utils",
      "@/stores/providers/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/twilio.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/twilio/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/typeform.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/typeform/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/vision.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/vision/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/wealthbox.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/wealthbox/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/whatsapp.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/whatsapp/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/wikipedia.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/wikipedia/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/workflow_input.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/workflow.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/x.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/x/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/youtube.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/youtube/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/blocks/blocks/zep.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/blocks/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/base-styles.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/batch-invitation-email.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "@/lib/branding/branding",
      "@/lib/urls/utils",
      "./base-styles",
      "./footer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/enterprise-subscription-email.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "date-fns",
      "@/lib/branding/branding",
      "@/lib/urls/utils",
      "./base-styles",
      "./footer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/footer.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "@/lib/branding/branding",
      "@/lib/environment",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/help-confirmation-email.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "date-fns",
      "@/lib/branding/branding",
      "@/lib/urls/utils",
      "./base-styles",
      "./footer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/invitation-email.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "date-fns",
      "@/lib/branding/branding",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "./base-styles",
      "./footer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/otp-verification-email.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "@/lib/branding/branding",
      "@/lib/urls/utils",
      "./base-styles",
      "./footer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/plan-welcome-email.tsx",
    "functions": [
      "PlanWelcomeEmail"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "@/components/emails/footer",
      "@/lib/branding/branding",
      "@/lib/urls/utils",
      "./base-styles"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/render-email.ts",
    "functions": [
      "renderOTPEmail",
      "renderPasswordResetEmail",
      "renderInvitationEmail",
      "renderBatchInvitationEmail",
      "renderHelpConfirmationEmail",
      "renderEnterpriseSubscriptionEmail",
      "renderUsageThresholdEmail",
      "getEmailSubject",
      "renderPlanWelcomeEmail"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "@/components/emails",
      "@/lib/branding/branding",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/reset-password-email.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "date-fns",
      "@/lib/branding/branding",
      "@/lib/urls/utils",
      "./base-styles",
      "./footer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/usage-threshold-email.tsx",
    "functions": [
      "UsageThresholdEmail"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "@/components/emails/footer",
      "@/lib/branding/branding",
      "@/lib/urls/utils",
      "./base-styles"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/emails/workspace-invitation.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@react-email/components",
      "@/lib/branding/branding",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "./base-styles",
      "./footer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/icons/document-icons.tsx",
    "functions": [
      "getDocumentIcon"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/alert-dialog.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-alert-dialog",
      "lucide-react",
      "@/components/ui/button",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/alert.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "class-variance-authority",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/avatar.tsx",
    "functions": [
      "AvatarIndicator",
      "AvatarStatus"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-avatar",
      "class-variance-authority",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/badge.tsx",
    "functions": [
      "Badge"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "class-variance-authority",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/breadcrumb.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-slot",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/button.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-slot",
      "class-variance-authority",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/card.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/checkbox.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-checkbox",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/code-block.tsx",
    "functions": [
      "CodeBlock"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/copy-button",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/collapsible.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@radix-ui/react-collapsible"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/color-picker.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react-colorful",
      "@/components/ui/button",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/popover",
      "@/lib/use-forwarded-ref",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/command.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-dialog",
      "cmdk",
      "lucide-react",
      "@/components/ui/dialog",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/copy-button.tsx",
    "functions": [
      "CopyButton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/dialog.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-dialog",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/dropdown-menu.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-dropdown-menu",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/env-var-dropdown.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "@/lib/utils",
      "@/stores/settings/environment/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/form.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-label",
      "@radix-ui/react-slot",
      "react-hook-form",
      "@/components/ui/label",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/formatted-text.tsx",
    "functions": [
      "formatDisplayText"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/stores/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/image-upload.tsx",
    "functions": [
      "ImageUpload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/image",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-image-upload"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/input-otp-form.tsx",
    "functions": [
      "OTPInputForm"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input-otp"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/input-otp.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "input-otp",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/input.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/label.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-label",
      "class-variance-authority",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/loading-agent.tsx",
    "functions": [
      "LoadingAgent"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/notice.tsx",
    "functions": [
      "Notice"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/popover.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-popover",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/progress.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-progress",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/radio-group.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-radio-group",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/scroll-area.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-scroll-area",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/search-highlight.tsx",
    "functions": [
      "SearchHighlight"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/select.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-select",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/separator.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-separator",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/sheet.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-dialog",
      "class-variance-authority",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/skeleton.tsx",
    "functions": [
      "Skeleton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/slider.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-slider",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/switch.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-switch",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/table.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/tabs.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-tabs",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/tag-dropdown.test.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/components/ui/tag-dropdown",
      "@/lib/response-format",
      "@/stores/workflows/workflow/types",
      "@/stores/workflows/workflow/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/tag-dropdown.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "zustand/shallow",
      "@/lib/response-format",
      "@/lib/utils",
      "@/lib/workflows/block-outputs",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/blocks",
      "@/blocks/types",
      "@/stores/panel/variables/store",
      "@/stores/panel/variables/types",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/textarea.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/toggle.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-toggle",
      "class-variance-authority",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/tool-call.tsx",
    "functions": [
      "ToolCallDetection",
      "ToolCallExecution",
      "ToolCallCompletion",
      "ToolCallGroupComponent",
      "ToolCallIndicator"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/collapsible",
      "@/lib/copilot/types",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/components/ui/tooltip.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-tooltip",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/__test-utils__/executor-mocks.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/__test-utils__/mock-dependencies.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/__test-utils__/test-executor.ts",
    "functions": [],
    "classes": [
      "TestExecutor"
    ],
    "exports": {},
    "imports": [
      "@/executor",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/handlers/agent/agent-handler",
      "@/executor/handlers/api/api-handler",
      "@/executor/handlers/condition/condition-handler",
      "@/executor/handlers/evaluator/evaluator-handler",
      "@/executor/handlers/function/function-handler",
      "@/executor/handlers/generic/generic-handler",
      "@/executor/handlers/loop/loop-handler",
      "@/executor/handlers/parallel/parallel-handler",
      "@/executor/handlers/response/response-handler",
      "@/executor/handlers/router/router-handler",
      "@/executor/handlers/trigger/trigger-handler",
      "@/executor/handlers/workflow/workflow-handler"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/loops/loops.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/__test-utils__/executor-mocks",
      "@/executor/consts",
      "@/executor/loops/loops",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/loops/loops.ts",
    "functions": [],
    "classes": [
      "LoopManager"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/executor/consts",
      "@/executor/types",
      "@/executor/utils/connections",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/parallels/parallels.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/__test-utils__/executor-mocks",
      "@/executor/consts",
      "@/executor/parallels/parallels",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/parallels/parallels.ts",
    "functions": [],
    "classes": [
      "ParallelManager"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/executor/parallels/utils",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/parallels/utils.ts",
    "functions": [],
    "classes": [
      "ParallelRoutingUtils"
    ],
    "exports": {},
    "imports": [
      "@/executor/consts",
      "@/executor/types",
      "@/executor/utils/connections",
      "@/executor/utils/virtual-blocks",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/path/path.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/path/path",
      "@/executor/routing/routing",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/path/path.ts",
    "functions": [],
    "classes": [
      "PathTracker"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/executor/consts",
      "@/executor/routing/routing",
      "@/executor/types",
      "@/executor/utils/connections",
      "@/executor/utils/virtual-blocks",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/resolver/resolver.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/blocks/index",
      "@/executor/consts",
      "@/executor/resolver/resolver",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/resolver/resolver.ts",
    "functions": [
      "resolvePropertyAccess"
    ],
    "classes": [
      "InputResolver"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/variables/variable-manager",
      "@/lib/workflows/references",
      "@/lib/workflows/triggers",
      "@/blocks/index",
      "@/executor/loops/loops",
      "@/executor/types",
      "@/serializer/types",
      "@/stores/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/routing/routing.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/routing/routing"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/routing/routing.ts",
    "functions": [],
    "classes": [
      "Routing"
    ],
    "exports": {},
    "imports": [
      "@/executor/consts"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/tests/executor-layer-validation.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor",
      "@/executor/consts",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/tests/multi-input-routing.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/index",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/tests/nested-router-condition.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/path/path",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/tests/parallel-activation-integration.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/routing/routing"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/tests/parallel-activation-regression.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/path/path",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/tests/parallel-handler-routing.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/handlers/parallel/parallel-handler",
      "@/executor/path/path",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/tests/router-parallel-execution.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/path/path",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/tests/router-workflow-execution.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/path/path",
      "@/executor/routing/routing",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/utils/connections.ts",
    "functions": [],
    "classes": [
      "ConnectionUtils"
    ],
    "exports": {},
    "imports": [
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/utils/file-tool-processor.ts",
    "functions": [],
    "classes": [
      "FileToolProcessor"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/workflows/execution-file-storage",
      "@/executor/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/utils/virtual-blocks.ts",
    "functions": [],
    "classes": [
      "VirtualBlockUtils"
    ],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/api-key/auth.ts",
    "functions": [
      "isEncryptedKey",
      "authenticateApiKey",
      "encryptApiKeyForStorage",
      "createApiKey",
      "decryptApiKeyFromStorage",
      "getApiKeyLast4",
      "getApiKeyDisplayFormat",
      "formatApiKeyForDisplay",
      "getEncryptedApiKeyLast4",
      "isValidApiKeyFormat"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/api-key/service",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/api-key/service.ts",
    "functions": [
      "authenticateApiKeyFromHeader",
      "updateApiKeyLastUsed",
      "getApiKeyOwnerUserId",
      "getApiEncryptionKey",
      "encryptApiKey",
      "decryptApiKey",
      "generateApiKey",
      "generateEncryptedApiKey",
      "isEncryptedApiKeyFormat",
      "isLegacyApiKeyFormat"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "nanoid",
      "@/lib/api-key/auth",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/auth/credential-access.ts",
    "functions": [
      "authorizeCredentialUse"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth/hybrid",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/auth/hybrid.ts",
    "functions": [
      "checkHybridAuth"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/api-key/service",
      "@/lib/auth",
      "@/lib/auth/internal",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/auth/internal.ts",
    "functions": [
      "generateInternalToken",
      "verifyInternalToken",
      "verifyCronAuth"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "jose",
      "next/server",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/authorization.ts",
    "functions": [
      "authorizeSubscriptionReference"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/constants.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/organization.ts",
    "functions": [
      "getUserOwnedOrganization",
      "createOrganizationWithOwner",
      "createOrganizationForTeamPlan",
      "syncSubscriptionUsageLimits"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/billing/core/usage",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/plans.ts",
    "functions": [
      "getPlans",
      "getPlanByName",
      "getPlanLimits"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/billing/subscriptions/utils",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/stripe-client.ts",
    "functions": [
      "hasValidStripeCredentials",
      "getStripeClient",
      "requireStripeClient"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "stripe",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/threshold-billing.ts",
    "functions": [
      "parseDecimal",
      "createAndFinalizeOverageInvoice",
      "checkAndBillOverageThreshold",
      "checkAndBillOrganizationOverageThreshold"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "stripe",
      "@/lib/billing/constants",
      "@/lib/billing/core/billing",
      "@/lib/billing/core/subscription",
      "@/lib/billing/stripe-client",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/branding/branding.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/branding/inject-theme.ts",
    "functions": [
      "isDarkBackground",
      "generateThemeCSS"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/branding/metadata.ts",
    "functions": [
      "generateBrandedMetadata",
      "generateStructuredData"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next",
      "@/lib/branding/branding",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/chunkers/docs-chunker.ts",
    "functions": [],
    "classes": [
      "DocsChunker"
    ],
    "exports": {},
    "imports": [
      "fs/promises",
      "path",
      "@/lib/embeddings/utils",
      "@/lib/logs/console/logger",
      "./text-chunker",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/chunkers/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/chunkers/json-yaml-chunker.ts",
    "functions": [
      "getTokenCount"
    ],
    "classes": [
      "JsonYamlChunker"
    ],
    "exports": {},
    "imports": [
      "js-yaml",
      "@/lib/logs/console/logger",
      "@/lib/tokenization",
      "@/lib/tokenization/estimators",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/chunkers/structured-data-chunker.ts",
    "functions": [],
    "classes": [
      "StructuredDataChunker"
    ],
    "exports": {},
    "imports": [
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/chunkers/text-chunker.ts",
    "functions": [],
    "classes": [
      "TextChunker"
    ],
    "exports": {},
    "imports": [
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/chunkers/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/api.ts",
    "functions": [
      "handleApiError",
      "sendStreamingMessage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/auth.ts",
    "functions": [
      "createUnauthorizedResponse",
      "createBadRequestResponse",
      "createNotFoundResponse",
      "createInternalServerErrorResponse",
      "createRequestId",
      "createShortRequestId",
      "createRequestTracker",
      "authenticateCopilotRequest",
      "authenticateCopilotRequestSessionOnly"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/api-key/service",
      "@/lib/auth",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/config.ts",
    "functions": [
      "validateProviderId",
      "parseFloatEnv",
      "parseIntEnv",
      "parseBooleanEnv",
      "applyEnvironmentOverrides",
      "getCopilotConfig",
      "getCopilotModel",
      "validateNumericValue",
      "validateCopilotConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/prompts",
      "@/lib/logs/console/logger",
      "@/providers/models",
      "@/providers/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/inline-tool-call.tsx",
    "functions": [
      "shouldShowRunSkipButtons",
      "handleRun",
      "handleSkip",
      "getDisplayName",
      "RunSkipButtons",
      "InlineToolCall"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "react-google-drive-picker",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/card",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/client/manager",
      "@/lib/copilot/tools/client/registry",
      "@/lib/env",
      "@/stores/copilot/store",
      "@/stores/copilot/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/process-contents.ts",
    "functions": [
      "processContexts",
      "processContextsServer",
      "escapeRegExp",
      "sanitizeMessageForDocs",
      "processPastChatFromDb",
      "processWorkflowFromDb",
      "processPastChat",
      "processPastChatViaApi",
      "processKnowledgeFromDb",
      "processBlockMetadata",
      "processTemplateFromDb",
      "processWorkflowBlockFromDb",
      "processExecutionLogFromDb"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/json-sanitizer",
      "@/stores/copilot/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/prompts.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/registry.ts",
    "functions": [
      "toolCallSSEFor"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zod"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/providers/types",
      "@/stores/copilot/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/utils.ts",
    "functions": [
      "checkInternalApiKey",
      "checkCopilotApiKey"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/email/mailer.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/email/mailer",
      "@/lib/email/unsubscribe"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/email/mailer.ts",
    "functions": [
      "hasEmailService",
      "sendEmail",
      "processEmailData",
      "sendWithResend",
      "sendWithAzure",
      "sendBatchEmails",
      "sendBatchWithResend"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@azure/communication-email",
      "resend",
      "@/lib/email/unsubscribe",
      "@/lib/email/utils",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/email/unsubscribe.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/email/mailer",
      "@/lib/email/unsubscribe"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/email/unsubscribe.ts",
    "functions": [
      "generateUnsubscribeToken",
      "verifyUnsubscribeToken",
      "isTransactionalEmail",
      "getEmailPreferences",
      "updateEmailPreferences",
      "isUnsubscribed",
      "unsubscribeFromAll",
      "resubscribe"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/email/mailer",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/email/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/email/utils.ts",
    "functions": [
      "getFromEmailAddress"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/env",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/email/validation.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "./validation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/email/validation.ts",
    "functions": [
      "validateEmailSyntax",
      "checkMXRecord",
      "isDisposableEmail",
      "hasInvalidPatterns",
      "validateEmail",
      "quickValidateEmail"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/embeddings/utils.ts",
    "functions": [
      "getEmbeddingConfig",
      "callEmbeddingAPI",
      "generateEmbeddings",
      "generateSearchEmbedding"
    ],
    "classes": [
      "EmbeddingAPIError"
    ],
    "exports": {},
    "imports": [
      "@/lib/env",
      "@/lib/knowledge/documents/utils",
      "@/lib/logs/console/logger",
      "@/lib/tokenization"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/environment/utils.ts",
    "functions": [
      "getEnvironmentVariableKeys",
      "getPersonalAndWorkspaceEnv",
      "getEffectiveDecryptedEnv"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/execution/constants.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/execution/e2b.ts",
    "functions": [
      "executeInE2B"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@e2b/code-interpreter",
      "@/lib/logs/console/logger",
      "./languages"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/execution/files.ts",
    "functions": [
      "processExecutionFile",
      "processExecutionFiles"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "uuid",
      "@/lib/logs/console/logger",
      "@/lib/workflows/execution-file-storage",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/execution/languages.ts",
    "functions": [
      "isValidCodeLanguage",
      "getLanguageDisplayName"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/csv-parser.ts",
    "functions": [],
    "classes": [
      "CsvParser"
    ],
    "exports": {},
    "imports": [
      "fs",
      "stream",
      "csv-parse",
      "@/lib/file-parsers/types",
      "@/lib/file-parsers/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/doc-parser.ts",
    "functions": [],
    "classes": [
      "DocParser"
    ],
    "exports": {},
    "imports": [
      "fs",
      "fs/promises",
      "@/lib/file-parsers/types",
      "@/lib/file-parsers/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/docx-parser.ts",
    "functions": [],
    "classes": [
      "DocxParser"
    ],
    "exports": {},
    "imports": [
      "fs/promises",
      "mammoth",
      "@/lib/file-parsers/types",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/html-parser.ts",
    "functions": [],
    "classes": [
      "HtmlParser"
    ],
    "exports": {},
    "imports": [
      "fs/promises",
      "cheerio",
      "@/lib/file-parsers/types",
      "@/lib/file-parsers/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/index.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "path",
      "vitest",
      "@/lib/file-parsers/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/index.ts",
    "functions": [
      "getParserInstances",
      "parseFile",
      "parseBuffer",
      "isSupportedFileType"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "fs",
      "path",
      "@/lib/file-parsers/types",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/json-parser.ts",
    "functions": [
      "parseJSON",
      "parseJSONBuffer",
      "getJsonDepth"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/md-parser.ts",
    "functions": [],
    "classes": [
      "MdParser"
    ],
    "exports": {},
    "imports": [
      "fs/promises",
      "@/lib/file-parsers/types",
      "@/lib/file-parsers/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/pdf-parser.ts",
    "functions": [],
    "classes": [
      "PdfParser"
    ],
    "exports": {},
    "imports": [
      "fs/promises",
      "pdf-parse",
      "@/lib/file-parsers/types",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/pptx-parser.ts",
    "functions": [],
    "classes": [
      "PptxParser"
    ],
    "exports": {},
    "imports": [
      "fs",
      "fs/promises",
      "@/lib/file-parsers/types",
      "@/lib/file-parsers/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/txt-parser.ts",
    "functions": [],
    "classes": [
      "TxtParser"
    ],
    "exports": {},
    "imports": [
      "fs/promises",
      "@/lib/file-parsers/types",
      "@/lib/file-parsers/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/utils.ts",
    "functions": [
      "sanitizeTextForUTF8",
      "sanitizeTextArray",
      "hasInvalidUTF8Characters"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/xlsx-parser.ts",
    "functions": [],
    "classes": [
      "XlsxParser"
    ],
    "exports": {},
    "imports": [
      "fs",
      "xlsx",
      "@/lib/file-parsers/types",
      "@/lib/file-parsers/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/file-parsers/yaml-parser.ts",
    "functions": [
      "parseYAML",
      "parseYAMLBuffer",
      "getYamlDepth"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "js-yaml",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/guardrails/validate_hallucination.ts",
    "functions": [
      "queryKnowledgeBase",
      "scoreHallucinationWithLLM",
      "validateHallucination"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/providers",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/guardrails/validate_json.ts",
    "functions": [
      "validateJson"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/guardrails/validate_pii.ts",
    "functions": [
      "validatePII",
      "executePythonPIIDetection"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "child_process",
      "fs",
      "path",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/guardrails/validate_regex.ts",
    "functions": [
      "validateRegex"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/idempotency/cleanup.ts",
    "functions": [
      "cleanupExpiredIdempotencyKeys",
      "getIdempotencyKeyStats"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/idempotency/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/idempotency/service.ts",
    "functions": [],
    "classes": [
      "IdempotencyService"
    ],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "@/lib/redis"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/consts.ts",
    "functions": [
      "getSlotsForFieldType"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/service.ts",
    "functions": [
      "getKnowledgeBases",
      "createKnowledgeBase",
      "updateKnowledgeBase",
      "getKnowledgeBaseById",
      "deleteKnowledgeBase"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/knowledge/types",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/events.ts",
    "functions": [
      "emitWorkflowExecutionCompleted"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "uuid",
      "@/lib/logs/console/logger",
      "@/lib/logs/types",
      "@/background/logs-webhook-delivery"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/query-parser.ts",
    "functions": [
      "parseQuery",
      "parseFilter",
      "queryToApiParams"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/search-suggestions.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "./search-suggestions"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/search-suggestions.ts",
    "functions": [],
    "classes": [
      "SearchSuggestions"
    ],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/logs/hooks/use-autocomplete"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/types.ts",
    "functions": [],
    "classes": [
      "LogsServiceError"
    ],
    "exports": {},
    "imports": [
      "reactflow",
      "@/executor/types",
      "@/stores/workflows/registry/types",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/mcp/client.ts",
    "functions": [],
    "classes": [
      "McpClient"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/mcp/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/mcp/middleware.ts",
    "functions": [
      "validateMcpAuth",
      "checkPermissionLevel",
      "getPermissionErrorMessage",
      "withMcpAuth",
      "getParsedBody"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/hybrid",
      "@/lib/logs/console/logger",
      "@/lib/mcp/utils",
      "@/lib/permissions/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/mcp/service.ts",
    "functions": [
      "setupMcpServiceCleanup"
    ],
    "classes": [
      "McpService"
    ],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/environment",
      "@/lib/environment/utils",
      "@/lib/logs/console/logger",
      "@/lib/mcp/client",
      "@/lib/mcp/types",
      "@/lib/mcp/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/mcp/types.ts",
    "functions": [],
    "classes": [
      "McpError",
      "McpConnectionError",
      "McpTimeoutError"
    ],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/mcp/url-validator.ts",
    "functions": [
      "validateMcpServerUrl",
      "isIPv4",
      "isIPv6"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/mcp/utils.ts",
    "functions": [
      "createMcpErrorResponse",
      "createMcpSuccessResponse",
      "validateStringParam",
      "validateRequiredFields",
      "categorizeError",
      "createMcpToolId",
      "parseMcpToolId"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/mcp/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/oauth/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/oauth/oauth.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/oauth/oauth"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/oauth/oauth.ts",
    "functions": [
      "getServiceByProviderAndId",
      "getServiceIdFromScopes",
      "getProviderIdFromServiceId",
      "parseProvider",
      "getProviderAuthConfig",
      "buildAuthRequest",
      "refreshOAuthToken"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/icons",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/permissions/utils.test.ts",
    "functions": [
      "createMockChain"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@sim/db",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/permissions/utils.ts",
    "functions": [
      "getUserEntityPermissions",
      "hasAdminPermission",
      "getUsersWithPermissions",
      "hasWorkspaceAdminAccess",
      "getManageableWorkspaces"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/posthog/provider.tsx",
    "functions": [
      "PostHogProvider"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "posthog-js",
      "posthog-js/react",
      "../env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/schedules/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/schedules/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/schedules/utils.ts",
    "functions": [
      "validateCronExpression",
      "getSubBlockValue",
      "parseTimeString",
      "getScheduleTimeValues",
      "createDateWithTimezone",
      "generateCronExpression",
      "calculateNextRunTime",
      "getTimezoneAbbreviation"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "croner",
      "cronstrue",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/security/csp.ts",
    "functions": [
      "getHostnameFromUrl",
      "buildCSPString",
      "generateRuntimeCSP",
      "getMainCSPPolicy",
      "getWorkflowExecutionCSPPolicy",
      "addCSPSource",
      "removeCSPSource"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "../env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/security/input-validation.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "./input-validation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/security/input-validation.ts",
    "functions": [
      "validatePathSegment",
      "validateUUID",
      "validateAlphanumericId",
      "validateNumericId",
      "validateEnum",
      "validateHostname",
      "validateFileExtension",
      "sanitizeForLogging",
      "validateMicrosoftGraphId",
      "validateJiraCloudId",
      "validateJiraIssueKey",
      "validateExternalUrl",
      "validateImageUrl",
      "validateProxyUrl"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/session/session-context.tsx",
    "functions": [
      "SessionProvider"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "posthog-js",
      "@/lib/auth-client"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/sim-agent/client.ts",
    "functions": [],
    "classes": [
      "SimAgentClient"
    ],
    "exports": {},
    "imports": [
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/sim-agent/constants",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/sim-agent/constants.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/sim-agent/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "./client"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/sim-agent/utils.ts",
    "functions": [
      "generateChatTitle"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "openai",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/sms/service.ts",
    "functions": [
      "sendSMS",
      "sendSingleSMS",
      "sendBatchSMS"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "twilio",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/sso/consts.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/subscription/upgrade.ts",
    "functions": [
      "useSubscriptionUpgrade"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/stores/organization"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/telemetry/tracer.ts",
    "functions": [
      "getTracer",
      "createOTelSpanFromTraceSpan",
      "createOTelSpansForWorkflowExecution",
      "traceBlockExecution",
      "trackPlatformEvent"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@opentelemetry/api",
      "@/lib/logs/console/logger",
      "@/lib/logs/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/tokenization/calculators.ts",
    "functions": [
      "calculateStreamingCost",
      "calculateTokenizationCost",
      "createCostResultFromProviderData"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/tokenization/errors",
      "@/lib/tokenization/estimators",
      "@/lib/tokenization/types",
      "@/lib/tokenization/utils",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/tokenization/constants.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/tokenization/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/tokenization/errors.ts",
    "functions": [
      "createTokenizationError"
    ],
    "classes": [
      "TokenizationError"
    ],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/tokenization/estimators.ts",
    "functions": [
      "getEncoding",
      "getAccurateTokenCount",
      "truncateToTokenLimit",
      "getTokenCountsForBatch",
      "getTotalTokenCount",
      "batchByTokenLimit",
      "clearEncodingCache",
      "estimateTokenCount",
      "estimateOpenAITokens",
      "estimateAnthropicTokens",
      "estimateGoogleTokens",
      "estimateGenericTokens",
      "estimateInputTokens",
      "estimateOutputTokens"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "js-tiktoken",
      "@/lib/logs/console/logger",
      "@/lib/tokenization/constants",
      "@/lib/tokenization/types",
      "@/lib/tokenization/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/tokenization/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/tokenization/streaming.ts",
    "functions": [
      "processStreamingBlockLog",
      "getModelForBlock",
      "processStreamingBlockLogs"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/tokenization/calculators",
      "@/lib/tokenization/constants",
      "@/lib/tokenization/utils",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/tokenization/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/tokenization/utils.ts",
    "functions": [
      "getProviderConfig",
      "getProviderForTokenization",
      "isTokenizableBlockType",
      "hasRealTokenData",
      "hasRealCostData",
      "extractTextContent",
      "createTextPreview",
      "validateTokenizationInput",
      "formatTokenCount",
      "logTokenizationDetails"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/tokenization/constants",
      "@/lib/tokenization/errors",
      "@/lib/tokenization/types",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/file-utils.ts",
    "functions": [
      "getContentType",
      "isSupportedFileType",
      "isImageFileType",
      "bufferToBase64",
      "createFileContent",
      "getFileExtension",
      "getMimeTypeFromExtension"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/setup.server.ts",
    "functions": [
      "ensureUploadsDirectory"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "fs",
      "fs/promises",
      "path",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/uploads/setup"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/setup.ts",
    "functions": [
      "getStorageProvider",
      "isUsingCloudStorage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/storage-client.ts",
    "functions": [
      "uploadFile",
      "downloadFile",
      "deleteFile",
      "getPresignedUrl",
      "getPresignedUrlWithConfig",
      "getStorageProvider",
      "isUsingCloudStorage",
      "getServePathPrefix"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/uploads/blob/blob-client",
      "@/lib/uploads/s3/s3-client",
      "@/lib/uploads/setup"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/validation.ts",
    "functions": [
      "validateFileType",
      "isSupportedExtension",
      "getSupportedMimeTypes"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "path"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/urls/utils.ts",
    "functions": [
      "getBaseUrl",
      "getBaseDomain",
      "getEmailDomain"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/env",
      "@/lib/environment"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/variables/variable-manager.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/variables/variable-manager"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/variables/variable-manager.ts",
    "functions": [],
    "classes": [
      "VariableManager"
    ],
    "exports": {},
    "imports": [
      "@/stores/panel/variables/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/webhooks/attachment-processor.ts",
    "functions": [],
    "classes": [
      "WebhookAttachmentProcessor"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/workflows/execution-file-storage",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/webhooks/gmail-polling-service.ts",
    "functions": [
      "pollGmailWebhooks",
      "fetchNewEmails",
      "searchEmails",
      "getEmailDetails",
      "filterEmailsByLabels",
      "processEmails",
      "markEmailAsRead",
      "updateWebhookLastChecked",
      "updateWebhookData"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "nanoid",
      "@/lib/idempotency/service",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/app/api/auth/oauth/utils",
      "@/tools/gmail/types",
      "@/tools/gmail/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/webhooks/outlook-polling-service.ts",
    "functions": [
      "convertHtmlToPlainText",
      "pollOutlookWebhooks",
      "fetchNewOutlookEmails",
      "filterEmailsByFolder",
      "processOutlookEmails",
      "downloadOutlookAttachments",
      "markOutlookEmailAsRead",
      "updateWebhookLastChecked"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "html-to-text",
      "nanoid",
      "@/lib/idempotency",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/webhooks/processor.ts",
    "functions": [
      "parseWebhookBody",
      "handleProviderChallenges",
      "findWebhookAndWorkflow",
      "verifyProviderAuth",
      "checkRateLimits",
      "checkUsageLimits",
      "queueWebhookExecution"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@trigger.dev/sdk",
      "drizzle-orm",
      "next/server",
      "@/lib/api-key/service",
      "@/lib/billing",
      "@/lib/billing/core/subscription",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/webhooks/utils",
      "@/background/webhook-execution",
      "@/services/queue"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/webhooks/test-tokens.ts",
    "functions": [
      "signTestWebhookToken",
      "verifyTestWebhookToken"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "jose",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/webhooks/utils.ts",
    "functions": [
      "handleWhatsAppVerification",
      "handleSlackChallenge",
      "validateSlackSignature",
      "formatTeamsGraphNotification",
      "formatWebhookInput",
      "validateMicrosoftTeamsSignature",
      "verifyProviderWebhook",
      "fetchAndProcessAirtablePayloads",
      "configureGmailPolling",
      "configureOutlookPolling"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/webhooks/webhook-helpers.ts",
    "functions": [
      "createTeamsSubscription",
      "deleteTeamsSubscription",
      "createTelegramWebhook",
      "deleteTelegramWebhook"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/block-outputs.ts",
    "functions": [
      "getBlockOutputs",
      "hasInputFormat",
      "getBlockOutputPaths",
      "getBlockOutputType"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/blocks",
      "@/blocks/types",
      "@/triggers"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/credential-resolver.ts",
    "functions": [
      "resolveCredentialsForWorkflow",
      "resolveCredentialForSubBlock",
      "needsCredentialResolution"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/oauth/oauth",
      "@/blocks/index",
      "@/blocks/types",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/custom-tools-persistence.ts",
    "functions": [
      "extractCustomToolsFromWorkflowState",
      "persistCustomToolsToDatabase",
      "extractAndPersistCustomTools"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/db-helpers.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/db-helpers.ts",
    "functions": [
      "blockExistsInDeployment",
      "loadDeployedWorkflowState",
      "loadWorkflowFromNormalizedTables",
      "saveWorkflowToNormalizedTables",
      "workflowExistsInNormalizedTables",
      "migrateWorkflowToNormalizedTables"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "drizzle-orm",
      "reactflow",
      "@/lib/logs/console/logger",
      "@/lib/workflows/validation",
      "@/stores/workflows/workflow/types",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/execution-file-storage.ts",
    "functions": [
      "uploadExecutionFile",
      "downloadExecutionFile",
      "generateExecutionFileDownloadUrl",
      "deleteExecutionFile"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/uploads/blob/blob-client",
      "@/lib/uploads/s3/s3-client",
      "@/lib/uploads/setup",
      "@/executor/types",
      "./execution-files",
      "./execution-files"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/execution-files-server.ts",
    "functions": [
      "getExecutionFiles",
      "storeExecutionFiles",
      "addExecutionFile",
      "getExpiredFiles",
      "cleanupExpiredFileMetadata"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "./execution-files"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/execution-files.ts",
    "functions": [
      "generateExecutionFileKey",
      "generateExecutionPrefix",
      "generateFileId",
      "isFileExpired",
      "getFileExpirationDate"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/json-sanitizer.ts",
    "functions": [
      "isSensitiveSubBlock",
      "sanitizeConditions",
      "sanitizeTools",
      "sanitizeSubBlocks",
      "extractConnectionsForBlock",
      "sanitizeForCopilot",
      "sanitizeForExport"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "reactflow",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/references.ts",
    "functions": [
      "isLikelyReferenceSegment",
      "extractReferencePrefixes"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/stores/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/state-builder.ts",
    "functions": [
      "buildWorkflowStateForTemplate"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/stores/workflows/registry/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/streaming.ts",
    "functions": [
      "createStreamingResponse"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/trigger-utils.ts",
    "functions": [
      "getAllTriggerBlocks",
      "hasTriggerCapability",
      "getTriggersForSidebar",
      "getBlocksForSidebar",
      "getTriggerDisplayName"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/blocks",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/triggers.ts",
    "functions": [],
    "classes": [
      "TriggerUtils"
    ],
    "exports": {},
    "imports": [
      "@/blocks"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/utils.ts",
    "functions": [
      "mapWorkflowRow",
      "getWorkflowById",
      "getWorkflowAccessContext",
      "updateWorkflowRunCounts",
      "sanitizeToolsForComparison",
      "sanitizeInputFormatForComparison",
      "normalizeValue",
      "normalizedStringify",
      "hasWorkflowChanged",
      "stripCustomToolPrefix",
      "validateWorkflowPermissions"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/urls/utils",
      "@/executor/types",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/validation.ts",
    "functions": [
      "isValidCustomToolSchema",
      "sanitizeAgentToolsInBlocks",
      "validateWorkflowState",
      "validateToolReference"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/blocks/registry",
      "@/stores/workflows/workflow/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/anthropic/index.ts",
    "functions": [
      "createReadableStreamFromAnthropicStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@anthropic-ai/sdk",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/tools",
      "../models",
      "../types",
      "../utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/azure-openai/index.ts",
    "functions": [
      "createReadableStreamFromAzureOpenAIStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "openai",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/cerebras/index.ts",
    "functions": [
      "createReadableStreamFromCerebrasStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@cerebras/cerebras_cloud_sdk",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/cerebras/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/providers/deepseek/index.ts",
    "functions": [
      "createReadableStreamFromDeepseekStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "openai",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/google/index.ts",
    "functions": [
      "createReadableStreamFromGeminiStream",
      "cleanSchemaForGemini",
      "extractTextContent",
      "extractFunctionCall",
      "convertToGeminiFormat"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/groq/index.ts",
    "functions": [
      "createReadableStreamFromGroqStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "groq-sdk",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/mistral/index.ts",
    "functions": [
      "createReadableStreamFromMistralStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "openai",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/ollama/index.ts",
    "functions": [
      "createReadableStreamFromOllamaStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "openai",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/ollama/types",
      "@/providers/types",
      "@/providers/utils",
      "@/stores/providers/store",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/ollama/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/providers/openai/index.ts",
    "functions": [
      "createReadableStreamFromOpenAIStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "openai",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/openrouter/index.ts",
    "functions": [
      "createReadableStreamFromOpenAIStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "openai",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/providers/xai/index.ts",
    "functions": [
      "createReadableStreamFromXAIStream"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "openai",
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/providers/models",
      "@/providers/types",
      "@/providers/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/serializer/__test-utils__/test-workflows.ts",
    "functions": [
      "createMinimalWorkflowState",
      "createConditionalWorkflowState",
      "createLoopWorkflowState",
      "createComplexWorkflowState",
      "createAgentWithToolsWorkflowState",
      "createInvalidWorkflowState",
      "createInvalidSerializedWorkflow",
      "createMissingMetadataWorkflow"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "reactflow",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/serializer/tests/dual-validation.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/serializer/index",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/services/queue/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/services/queue/RateLimiter.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/services/queue/RateLimiter",
      "@/services/queue/types",
      "@sim/db"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/services/queue/RateLimiter.ts",
    "functions": [],
    "classes": [
      "RateLimiter"
    ],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/billing/core/subscription",
      "@/lib/logs/console/logger",
      "@/services/queue/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/services/queue/types.ts",
    "functions": [],
    "classes": [
      "RateLimitError"
    ],
    "exports": {},
    "imports": [
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/config/socket.ts",
    "functions": [
      "getAllowedOrigins",
      "createSocketIOServer"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "http",
      "socket.io",
      "@/lib/env",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/database/operations.ts",
    "functions": [
      "insertAutoConnectEdge",
      "isSubflowBlockType",
      "updateSubflowNodeList",
      "getWorkflowState",
      "persistWorkflowOperation",
      "handleBlockOperationTx",
      "handleEdgeOperationTx",
      "handleSubflowOperationTx",
      "handleVariableOperationTx"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db",
      "drizzle-orm",
      "drizzle-orm/postgres-js",
      "postgres",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/workflows/db-helpers"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/handlers/connection.ts",
    "functions": [
      "setupConnectionHandlers"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/socket-server/handlers/workflow",
      "@/socket-server/middleware/auth",
      "@/socket-server/rooms/manager"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/handlers/index.ts",
    "functions": [
      "setupAllHandlers"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/socket-server/handlers/connection",
      "@/socket-server/handlers/operations",
      "@/socket-server/handlers/presence",
      "@/socket-server/handlers/subblocks",
      "@/socket-server/handlers/variables",
      "@/socket-server/handlers/workflow",
      "@/socket-server/middleware/auth",
      "@/socket-server/rooms/manager"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/handlers/operations.ts",
    "functions": [
      "setupOperationsHandlers"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zod",
      "@/lib/logs/console/logger",
      "@/socket-server/database/operations",
      "@/socket-server/handlers/workflow",
      "@/socket-server/middleware/auth",
      "@/socket-server/middleware/permissions",
      "@/socket-server/rooms/manager",
      "@/socket-server/validation/schemas"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/handlers/presence.ts",
    "functions": [
      "setupPresenceHandlers"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/socket-server/handlers/workflow",
      "@/socket-server/middleware/auth",
      "@/socket-server/rooms/manager"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/handlers/subblocks.ts",
    "functions": [
      "setupSubblocksHandlers",
      "flushSubblockUpdate"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "@/socket-server/handlers/workflow",
      "@/socket-server/middleware/auth",
      "@/socket-server/rooms/manager"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/handlers/variables.ts",
    "functions": [
      "setupVariablesHandlers",
      "flushVariableUpdate"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "@/socket-server/handlers/workflow",
      "@/socket-server/middleware/auth",
      "@/socket-server/rooms/manager"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/handlers/workflow.ts",
    "functions": [
      "setupWorkflowHandlers"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/socket-server/database/operations",
      "@/socket-server/middleware/auth",
      "@/socket-server/middleware/permissions",
      "@/socket-server/rooms/manager"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/middleware/auth.ts",
    "functions": [
      "authenticateSocket"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "socket.io",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/middleware/permissions.ts",
    "functions": [
      "checkRolePermission",
      "verifyWorkspaceMembership",
      "verifyWorkflowAccess"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/rooms/manager.ts",
    "functions": [],
    "classes": [
      "RoomManager"
    ],
    "exports": {},
    "imports": [
      "@sim/db/schema",
      "@sim/db/schema",
      "drizzle-orm",
      "drizzle-orm/postgres-js",
      "postgres",
      "socket.io",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/routes/http.ts",
    "functions": [
      "createHttpHandler"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "http",
      "@/socket-server/rooms/manager"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/tests/socket-server.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "http",
      "socket.io",
      "socket.io-client",
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/socket-server/validation/schemas.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zod"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/copilot/constants.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/copilot/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/copilot/preview-store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "./constants",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/copilot/store.ts",
    "functions": [
      "ensureClientToolInstance",
      "resolveToolDisplay",
      "isRejectedState",
      "isReviewState",
      "isBackgroundState",
      "abortAllInProgressTools",
      "normalizeMessagesForUI",
      "createUserMessage",
      "createStreamingMessage",
      "createErrorMessage",
      "validateMessagesForLLM",
      "createOptimizedContentBlocks",
      "updateStreamingMessage",
      "parseSSEStream"
    ],
    "classes": [
      "ObjectPool",
      "StringBuilder"
    ],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/copilot/api",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/client/blocks/get-blocks-and-tools",
      "@/lib/copilot/tools/client/blocks/get-blocks-metadata",
      "@/lib/copilot/tools/client/blocks/get-trigger-blocks",
      "@/lib/copilot/tools/client/examples/get-examples-rag",
      "@/lib/copilot/tools/client/examples/get-operations-examples",
      "@/lib/copilot/tools/client/examples/get-trigger-examples",
      "@/lib/copilot/tools/client/gdrive/list-files",
      "@/lib/copilot/tools/client/gdrive/read-file",
      "@/lib/copilot/tools/client/google/gdrive-request-access",
      "@/lib/copilot/tools/client/manager",
      "@/lib/copilot/tools/client/other/checkoff-todo",
      "@/lib/copilot/tools/client/other/make-api-request",
      "@/lib/copilot/tools/client/other/mark-todo-in-progress",
      "@/lib/copilot/tools/client/other/oauth-request-access",
      "@/lib/copilot/tools/client/other/plan",
      "@/lib/copilot/tools/client/other/search-documentation",
      "@/lib/copilot/tools/client/other/search-online",
      "@/lib/copilot/tools/client/registry",
      "@/lib/copilot/tools/client/user/get-environment-variables",
      "@/lib/copilot/tools/client/user/get-oauth-credentials",
      "@/lib/copilot/tools/client/user/set-environment-variables",
      "@/lib/copilot/tools/client/workflow/edit-workflow",
      "@/lib/copilot/tools/client/workflow/get-global-workflow-variables",
      "@/lib/copilot/tools/client/workflow/get-user-workflow",
      "@/lib/copilot/tools/client/workflow/get-workflow-console",
      "@/lib/copilot/tools/client/workflow/get-workflow-from-name",
      "@/lib/copilot/tools/client/workflow/list-user-workflows",
      "@/lib/copilot/tools/client/workflow/run-workflow",
      "@/lib/copilot/tools/client/workflow/set-global-workflow-variables",
      "@/lib/logs/console/logger",
      "@/stores/copilot/types",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/copilot/tools.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/copilot/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/client/base-tool"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/copilot-training/store.ts",
    "functions": [
      "captureWorkflowSnapshot"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/lib/workflows/json-sanitizer",
      "@/lib/workflows/training/compute-edit-sequence",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/custom-tools/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/stores/custom-tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/custom-tools/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/execution/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "@/stores/execution/types",
      "@/stores/settings/general/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/execution/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/folders/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/knowledge/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/mcp-servers/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/mcp-servers/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/mcp/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/operation-queue/store.ts",
    "functions": [
      "registerEmitFunctions",
      "useOperationQueue"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/organization/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/organization/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/auth-client",
      "@/lib/billing/subscriptions/utils",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/stores/organization/types",
      "@/stores/organization/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/organization/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/organization/utils.ts",
    "functions": [
      "calculateSeatUsage",
      "generateSlug",
      "validateSlug",
      "validateEmail"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/email/validation",
      "@/stores/organization/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/stores/panel/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/providers/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "@/lib/logs/console/logger",
      "@/providers/utils",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/providers/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/sidebar/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/subscription/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/billing/constants",
      "@/lib/logs/console/logger",
      "@/stores/subscription/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/subscription/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/undo-redo/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/undo-redo/store.ts",
    "functions": [
      "getStackKey",
      "isOperationApplicable"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "reactflow",
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/stores/workflows/workflow/types",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/undo-redo/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "reactflow",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/undo-redo/utils.ts",
    "functions": [
      "createOperationEntry",
      "createInverseOperation",
      "operationToCollaborativePayload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflow-diff/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflow-diff/store.ts",
    "functions": [
      "createBatchedUpdater"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/copilot/tools/client/manager",
      "@/lib/logs/console/logger",
      "@/lib/workflows/diff",
      "@/lib/workflows/validation",
      "@/serializer",
      "../workflows/registry/store",
      "../workflows/subblock/store",
      "../workflows/workflow/store",
      "../workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/index.ts",
    "functions": [
      "getWorkflowWithValues",
      "getBlockWithValues",
      "getAllWorkflowsWithValues"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/server-utils.ts",
    "functions": [
      "mergeSubblockState",
      "mergeSubblockStateAsync"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/utils.ts",
    "functions": [
      "normalizeBlockName",
      "getUniqueBlockName",
      "mergeSubblockState",
      "mergeSubblockStateAsync"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/__test-utils__/mock-data.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/__test-utils__/test-tools.ts",
    "functions": [
      "createMockFetch",
      "createErrorFetch",
      "mockEnvironmentVariables",
      "mockOAuthTokenRequest"
    ],
    "classes": [
      "ToolTester"
    ],
    "exports": {},
    "imports": [
      "vitest",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/airtable/create_records.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/airtable/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/airtable/get_record.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/airtable/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/airtable/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/airtable/create_records",
      "@/tools/airtable/get_record",
      "@/tools/airtable/list_records",
      "@/tools/airtable/update_multiple_records",
      "@/tools/airtable/update_record"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/airtable/list_records.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/airtable/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/airtable/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/airtable/update_multiple_records.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/airtable/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/airtable/update_record.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/airtable/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/arxiv/get_author_papers.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/arxiv/types",
      "@/tools/arxiv/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/arxiv/get_paper.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/arxiv/types",
      "@/tools/arxiv/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/arxiv/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/arxiv/get_author_papers",
      "@/tools/arxiv/get_paper",
      "@/tools/arxiv/search"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/arxiv/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/arxiv/types",
      "@/tools/arxiv/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/arxiv/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/arxiv/utils.ts",
    "functions": [
      "parseArxivXML",
      "extractTotalResults",
      "extractXmlValue",
      "extractXmlAttribute",
      "extractAuthors",
      "extractPdfLink",
      "extractCategories",
      "cleanText"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/arxiv/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/browser_use/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/browser_use/run_task"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/browser_use/run_task.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/browser_use/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/browser_use/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/clay/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/clay/populate"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/clay/populate.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/clay/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/clay/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/confluence/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/confluence/retrieve",
      "@/tools/confluence/update"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/confluence/retrieve.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/confluence/types",
      "@/tools/confluence/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/confluence/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/confluence/update.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/confluence/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/confluence/utils.ts",
    "functions": [
      "getConfluenceCloudId",
      "decodeHtmlEntities",
      "stripHtmlTags",
      "transformPageData"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/discord/get_messages.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/discord/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/discord/get_server.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/discord/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/discord/get_user.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/discord/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/discord/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/discord/get_messages",
      "@/tools/discord/get_server",
      "@/tools/discord/get_user",
      "@/tools/discord/send_message"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/discord/send_message.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/discord/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/discord/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/elevenlabs/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/elevenlabs/tts"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/elevenlabs/tts.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/elevenlabs/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/elevenlabs/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/exa/answer.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/exa/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/exa/find_similar_links.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/exa/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/exa/get_contents.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/exa/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/exa/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/exa/answer",
      "@/tools/exa/find_similar_links",
      "@/tools/exa/get_contents",
      "@/tools/exa/research",
      "@/tools/exa/search"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/exa/research.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/exa/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/exa/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/exa/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/exa/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/file/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/file/parser"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/file/parser.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/file/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/file/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/firecrawl/crawl.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/firecrawl/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/firecrawl/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/firecrawl/crawl",
      "@/tools/firecrawl/scrape",
      "@/tools/firecrawl/search"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/firecrawl/scrape.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/firecrawl/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/firecrawl/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/firecrawl/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/firecrawl/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/function/execute.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/execution/constants",
      "@/tools/__test-utils__/test-tools",
      "@/tools/function/execute"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/function/execute.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/execution/constants",
      "@/lib/execution/languages",
      "@/tools/function/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/function/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/function/execute"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/function/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/execution/languages",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/github/comment.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/github/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/github/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/github/comment",
      "@/tools/github/latest_commit",
      "@/tools/github/pr",
      "@/tools/github/repo_info"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/github/latest_commit.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/github/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/github/pr.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/github/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/github/repo_info.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/github/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/github/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/gmail/draft.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/gmail/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/gmail/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/gmail/draft",
      "@/tools/gmail/read",
      "@/tools/gmail/search",
      "@/tools/gmail/send"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/gmail/read.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/gmail/types",
      "@/tools/gmail/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/gmail/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/gmail/types",
      "@/tools/gmail/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/gmail/send.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/gmail/types",
      "@/tools/gmail/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/gmail/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/gmail/utils.ts",
    "functions": [
      "processMessage",
      "processMessageForSummary",
      "extractMessageBody",
      "extractAttachmentInfo",
      "downloadAttachments",
      "createMessagesSummary"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/gmail/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google/search"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_calendar/create.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_calendar/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_calendar/get.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_calendar/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_calendar/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_calendar/create",
      "@/tools/google_calendar/get",
      "@/tools/google_calendar/invite",
      "@/tools/google_calendar/list",
      "@/tools/google_calendar/quick_add"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_calendar/invite.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_calendar/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_calendar/list.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_calendar/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_calendar/quick_add.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_calendar/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_calendar/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_calendar/update.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_calendar/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_docs/create.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/google_docs/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_docs/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_docs/create",
      "@/tools/google_docs/read",
      "@/tools/google_docs/write"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_docs/read.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_docs/types",
      "@/tools/google_docs/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_docs/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_docs/utils.ts",
    "functions": [
      "extractTextFromDocument"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_docs/write.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_docs/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_drive/create_folder.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_drive/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_drive/get_content.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/google_drive/types",
      "@/tools/google_drive/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_drive/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_drive/create_folder",
      "@/tools/google_drive/get_content",
      "@/tools/google_drive/list",
      "@/tools/google_drive/upload"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_drive/list.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_drive/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_drive/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_drive/upload.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/google_drive/types",
      "@/tools/google_drive/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_drive/utils.ts",
    "functions": [
      "handleSheetsFormat"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_form/get_responses.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_form/types",
      "@/tools/google_form/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_form/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_form/get_responses"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_form/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_form/utils.ts",
    "functions": [
      "buildListResponsesUrl",
      "buildGetResponseUrl"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_sheets/append.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_sheets/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_sheets/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_sheets/append",
      "@/tools/google_sheets/read",
      "@/tools/google_sheets/update",
      "@/tools/google_sheets/write"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_sheets/read.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_sheets/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_sheets/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_sheets/update.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_sheets/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_sheets/write.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_sheets/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/create_matters_export.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_vault/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/create_matters_holds.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_vault/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/create_matters.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/download_export_file.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/list_matters_export.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_vault/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/list_matters_holds.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/google_vault/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/list_matters.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/google_vault/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/guardrails/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/guardrails/validate.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/http/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/http/request"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/http/request.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/tools/__test-utils__/mock-data",
      "@/tools/__test-utils__/test-tools",
      "@/tools/http/request"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/http/request.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/http/types",
      "@/tools/http/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/http/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/http/utils.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/huggingface/chat.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/huggingface/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/huggingface/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/huggingface/chat"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/huggingface/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/hunter/companies_find.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/hunter/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/hunter/discover.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/hunter/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/hunter/domain_search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/hunter/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/hunter/email_count.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/hunter/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/hunter/email_finder.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/hunter/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/hunter/email_verifier.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/hunter/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/hunter/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/hunter/companies_find",
      "@/tools/hunter/discover",
      "@/tools/hunter/domain_search",
      "@/tools/hunter/email_count",
      "@/tools/hunter/email_finder",
      "@/tools/hunter/email_verifier"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/hunter/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jina/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/jina/read_url"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jina/read_url.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/jina/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jina/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jira/bulk_read.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/jira/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jira/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/jira/bulk_read",
      "@/tools/jira/retrieve",
      "@/tools/jira/update",
      "@/tools/jira/write"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jira/retrieve.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/jira/types",
      "@/tools/jira/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jira/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jira/update.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/jira/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jira/utils.ts",
    "functions": [
      "getJiraCloudId"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/jira/write.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/jira/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/knowledge/create_document.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/knowledge/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/knowledge/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/knowledge/create_document",
      "@/tools/knowledge/search",
      "@/tools/knowledge/upload_chunk"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/knowledge/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/knowledge/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/knowledge/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/knowledge/upload_chunk.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/knowledge/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/linear/create_issue.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/linear/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/linear/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/linear/create_issue",
      "@/tools/linear/read_issues"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/linear/read_issues.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/linear/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/linear/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/linkup/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/linkup/search"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/linkup/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/linkup/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/linkup/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mem0/add_memories.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mem0/get_memories.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mem0/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mem0/add_memories",
      "@/tools/mem0/get_memories",
      "@/tools/mem0/search_memories"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mem0/search_memories.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mem0/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mem0/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/memory/add.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/memory/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/memory/delete.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/memory/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/memory/get_all.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/memory/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/memory/get.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/memory/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/memory/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/memory/add",
      "@/tools/memory/delete",
      "@/tools/memory/get",
      "@/tools/memory/get_all"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/memory/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_excel/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_excel/read",
      "@/tools/microsoft_excel/table_add",
      "@/tools/microsoft_excel/write"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_excel/read.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_excel/types",
      "@/tools/microsoft_excel/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_excel/table_add.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_excel/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_excel/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_excel/utils.ts",
    "functions": [
      "trimTrailingEmptyRowsAndColumns"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_excel/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_excel/write.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_excel/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_planner/create_task.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/microsoft_planner/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_planner/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_planner/create_task",
      "@/tools/microsoft_planner/read_task"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_planner/read_task.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/microsoft_planner/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_planner/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_teams/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_teams/read_channel",
      "@/tools/microsoft_teams/read_chat",
      "@/tools/microsoft_teams/write_channel",
      "@/tools/microsoft_teams/write_chat"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_teams/read_channel.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/microsoft_teams/types",
      "@/tools/microsoft_teams/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_teams/read_chat.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_teams/types",
      "@/tools/microsoft_teams/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_teams/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_teams/utils.ts",
    "functions": [
      "transformAttachment",
      "extractMessageAttachments",
      "fetchHostedContentsForChatMessage",
      "fetchHostedContentsForChannelMessage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/microsoft_teams/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_teams/write_channel.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_teams/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/microsoft_teams/write_chat.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/microsoft_teams/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mistral/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mistral/parser"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mistral/parser.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/tools/mistral/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mistral/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mongodb/delete.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mongodb/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mongodb/execute.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mongodb/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mongodb/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mongodb/insert.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mongodb/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mongodb/query.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mongodb/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mongodb/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mongodb/update.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mongodb/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mysql/delete.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mysql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mysql/execute.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mysql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mysql/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mysql/insert.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mysql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mysql/query.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mysql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mysql/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/mysql/update.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/mysql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/create_database.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/create_page.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/create_database",
      "@/tools/notion/create_page",
      "@/tools/notion/query_database",
      "@/tools/notion/read",
      "@/tools/notion/read_database",
      "@/tools/notion/search",
      "@/tools/notion/update_page",
      "@/tools/notion/write"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/query_database.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/types",
      "@/tools/notion/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/read_database.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/read.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/types",
      "@/tools/notion/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/update_page.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/utils.ts",
    "functions": [
      "formatPropertyValue",
      "extractTitle",
      "extractTitleFromItem"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/notion/write.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/notion/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/onedrive/create_folder.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/onedrive/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/onedrive/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/onedrive/create_folder",
      "@/tools/onedrive/list",
      "@/tools/onedrive/upload"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/onedrive/list.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/onedrive/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/onedrive/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/onedrive/upload.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/onedrive/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/openai/embeddings.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/openai/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/openai/image.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/tools/openai/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/openai/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/openai/embeddings",
      "@/tools/openai/image"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/openai/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/outlook/draft.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/outlook/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/outlook/forward.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/outlook/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/outlook/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/outlook/draft",
      "@/tools/outlook/forward",
      "@/tools/outlook/read",
      "@/tools/outlook/send"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/outlook/read.ts",
    "functions": [
      "downloadAttachments"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/outlook/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/outlook/send.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/outlook/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/outlook/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/parallel/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/parallel/search"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/parallel/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/parallel/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/parallel/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/perplexity/chat.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/perplexity/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/perplexity/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/perplexity/chat"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/perplexity/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/pinecone/fetch.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/pinecone/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/pinecone/generate_embeddings.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/pinecone/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/pinecone/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/pinecone/fetch",
      "@/tools/pinecone/generate_embeddings",
      "@/tools/pinecone/search_text",
      "@/tools/pinecone/search_vector",
      "@/tools/pinecone/upsert_text"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/pinecone/search_text.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/pinecone/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/pinecone/search_vector.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/pinecone/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/pinecone/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/pinecone/upsert_text.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/pinecone/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/postgresql/delete.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/postgresql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/postgresql/execute.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/postgresql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/postgresql/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "./delete",
      "./execute",
      "./insert",
      "./query",
      "./update"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/postgresql/insert.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/postgresql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/postgresql/query.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/postgresql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/postgresql/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/postgresql/update.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/postgresql/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/qdrant/fetch_points.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/qdrant/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/qdrant/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/qdrant/fetch_points",
      "@/tools/qdrant/search_vector",
      "@/tools/qdrant/upsert_points"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/qdrant/search_vector.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/qdrant/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/qdrant/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/qdrant/upsert_points.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/qdrant/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/qdrant/utils.ts",
    "functions": [
      "requestQdrant"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/reddit/get_comments.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/reddit/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/reddit/get_posts.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/reddit/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/reddit/hot_posts.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/reddit/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/reddit/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/reddit/get_comments",
      "@/tools/reddit/get_posts",
      "@/tools/reddit/hot_posts"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/reddit/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/resend/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/resend/send"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/resend/send.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/resend/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/resend/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/response/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/s3/get_object.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@/tools/s3/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/s3/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/s3/get_object"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/s3/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/s3/utils.ts",
    "functions": [
      "encodeS3PathComponent",
      "getSignatureKey",
      "parseS3Uri",
      "generatePresignedUrl"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/serper/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/serper/search"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/serper/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/serper/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/serper/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/add_list_items.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/sharepoint/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/create_list.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/sharepoint/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/create_page.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/sharepoint/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/get_list.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/sharepoint/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/sharepoint/add_list_items",
      "@/tools/sharepoint/create_list",
      "@/tools/sharepoint/create_page",
      "@/tools/sharepoint/get_list",
      "@/tools/sharepoint/list_sites",
      "@/tools/sharepoint/read_page",
      "@/tools/sharepoint/update_list"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/list_sites.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/sharepoint/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/read_page.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/sharepoint/types",
      "@/tools/sharepoint/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/update_list.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/sharepoint/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sharepoint/utils.ts",
    "functions": [
      "stripHtmlTags",
      "extractTextFromCanvasLayout",
      "cleanODataMetadata"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/sharepoint/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/slack/canvas.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/slack/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/slack/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/slack/canvas",
      "@/tools/slack/message",
      "@/tools/slack/message_reader"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/slack/message_reader.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/slack/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/slack/message.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/slack/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/slack/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sms/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/sms/send"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sms/send.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/sms/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/sms/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/stagehand/agent.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/stagehand/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/stagehand/extract.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/stagehand/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/stagehand/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/stagehand/agent",
      "@/tools/stagehand/extract"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/stagehand/types.ts",
    "functions": [
      "jsonSchemaToZod"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zod",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/supabase/delete.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/supabase/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/supabase/get_row.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/supabase/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/supabase/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/supabase/delete",
      "@/tools/supabase/get_row",
      "@/tools/supabase/insert",
      "@/tools/supabase/query",
      "@/tools/supabase/update",
      "@/tools/supabase/upsert"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/supabase/insert.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/supabase/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/supabase/query.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/supabase/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/supabase/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/supabase/update.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/supabase/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/supabase/upsert.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/supabase/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/tavily/extract.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/tavily/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/tavily/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/tavily/extract",
      "@/tools/tavily/search"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/tavily/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/tavily/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/tavily/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/delete_message.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/telegram/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/telegram/delete_message",
      "@/tools/telegram/message",
      "@/tools/telegram/send_animation",
      "@/tools/telegram/send_audio",
      "@/tools/telegram/send_photo",
      "@/tools/telegram/send_video"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/message.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/telegram/types",
      "@/tools/telegram/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/send_animation.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/telegram/types",
      "@/tools/telegram/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/send_audio.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/telegram/types",
      "@/tools/telegram/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/send_photo.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/telegram/types",
      "@/tools/telegram/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/send_video.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/telegram/types",
      "@/tools/telegram/utils",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/telegram/utils.ts",
    "functions": [
      "convertMarkdownToHTML"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/thinking/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/thinking/tool"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/thinking/tool.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/thinking/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/thinking/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/twilio/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/twilio/send_sms"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/twilio/send_sms.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/twilio/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/twilio/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/typeform/files.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/typeform/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/typeform/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/typeform/files",
      "@/tools/typeform/insights",
      "@/tools/typeform/responses"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/typeform/insights.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/typeform/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/typeform/responses.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/typeform/types",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/typeform/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/vision/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/vision/tool"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/vision/tool.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/vision/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/vision/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/wealthbox/read_contact",
      "@/tools/wealthbox/read_note",
      "@/tools/wealthbox/read_task",
      "@/tools/wealthbox/write_contact",
      "@/tools/wealthbox/write_note",
      "@/tools/wealthbox/write_task"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/read_contact.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/types",
      "@/tools/wealthbox/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/read_note.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/types",
      "@/tools/wealthbox/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/read_task.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/wealthbox/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/utils.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/write_contact.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/wealthbox/types",
      "@/tools/wealthbox/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/write_note.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/wealthbox/types",
      "@/tools/wealthbox/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wealthbox/write_task.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/wealthbox/types",
      "@/tools/wealthbox/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/whatsapp/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/whatsapp/send_message"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/whatsapp/send_message.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/whatsapp/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/whatsapp/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wikipedia/content.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/wikipedia/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wikipedia/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/wikipedia/content",
      "@/tools/wikipedia/random",
      "@/tools/wikipedia/search",
      "@/tools/wikipedia/summary"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wikipedia/random.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/wikipedia/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wikipedia/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/wikipedia/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wikipedia/summary.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/wikipedia/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/wikipedia/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/workflow/executor.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/types",
      "@/tools/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/workflow/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/tools/workflow/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/x/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/x/read",
      "@/tools/x/search",
      "@/tools/x/user",
      "@/tools/x/write"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/x/read.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/x/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/x/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/types",
      "@/tools/x/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/x/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/x/user.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/tools/types",
      "@/tools/x/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/x/write.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/x/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/youtube/channel_info.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/youtube/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/youtube/comments.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/youtube/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/youtube/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/youtube/channel_info",
      "@/tools/youtube/comments",
      "@/tools/youtube/playlist_items",
      "@/tools/youtube/search",
      "@/tools/youtube/video_details"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/youtube/playlist_items.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/youtube/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/youtube/search.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/youtube/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/youtube/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/youtube/video_details.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/youtube/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/add_messages.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/add_user.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/create_thread.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/delete_thread.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/get_context.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/get_messages.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/get_threads.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/get_user_threads.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/get_user.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types",
      "@/tools/zep/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/zep/add_messages",
      "@/tools/zep/add_user",
      "@/tools/zep/create_thread",
      "@/tools/zep/delete_thread",
      "@/tools/zep/get_context",
      "@/tools/zep/get_messages",
      "@/tools/zep/get_threads",
      "@/tools/zep/get_user",
      "@/tools/zep/get_user_threads"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/tools/zep/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/airtable/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/airtable/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/generic/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/generic/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/github/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/github/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/gmail/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/gmail/poller.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/triggers/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/googleforms/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/microsoftteams/chat_webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/triggers/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/microsoftteams/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/microsoftteams/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/outlook/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/outlook/poller.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/triggers/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/slack/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/slack/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/stripe/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/stripe/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/telegram/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/telegram/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/whatsapp/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/triggers/whatsapp/webhook.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/components/auth-background-svg.tsx",
    "functions": [
      "AuthBackgroundSVG"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/components/auth-background.tsx",
    "functions": [
      "AuthBackground"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/utils",
      "./auth-background-svg"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/components/oauth-provider-checker.tsx",
    "functions": [
      "getOAuthProviderStatus"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/env",
      "@/lib/environment"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/components/social-login-buttons.tsx",
    "functions": [
      "SocialLoginButtons"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/icons",
      "@/components/ui/button",
      "@/lib/auth-client",
      "@/app/fonts/inter"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/components/sso-login-button.tsx",
    "functions": [
      "SSOLoginButton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/navigation",
      "@/components/ui/button",
      "@/lib/env",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/login/login-form.tsx",
    "functions": [
      "LoginPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/link",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/lib/auth-client",
      "@/lib/email/validation",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/app/(auth)/components/social-login-buttons",
      "@/app/(auth)/components/sso-login-button",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/login/page.tsx",
    "functions": [
      "LoginPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/(auth)/components/oauth-provider-checker",
      "@/app/(auth)/login/login-form"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/reset-password/page.tsx",
    "functions": [
      "ResetPasswordContent",
      "ResetPasswordPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/link",
      "next/navigation",
      "@/lib/logs/console/logger",
      "@/app/(auth)/reset-password/reset-password-form",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/reset-password/reset-password-form.tsx",
    "functions": [
      "RequestResetForm",
      "SetNewPasswordForm"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/lib/utils",
      "@/app/fonts/inter"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/signup/page.tsx",
    "functions": [
      "SignupPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/env",
      "@/app/(auth)/components/oauth-provider-checker",
      "@/app/(auth)/signup/signup-form"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/signup/signup-form.tsx",
    "functions": [
      "SignupFormContent",
      "SignupPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/link",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/lib/auth-client",
      "@/lib/email/validation",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/(auth)/components/social-login-buttons",
      "@/app/(auth)/components/sso-login-button",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/sso/page.tsx",
    "functions": [
      "SSOPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/navigation",
      "@/lib/env",
      "./sso-form"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/sso/sso-form.tsx",
    "functions": [
      "SSOForm"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/link",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/lib/auth-client",
      "@/lib/email/validation",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/verify/page.tsx",
    "functions": [
      "VerifyPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/email/mailer",
      "@/lib/environment",
      "@/app/(auth)/verify/verify-content"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/verify/use-verification.ts",
    "functions": [
      "useVerification"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/lib/auth-client",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(auth)/verify/verify-content.tsx",
    "functions": [
      "VerificationForm",
      "VerificationFormFallback",
      "VerifyContent"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/input-otp",
      "@/lib/utils",
      "@/app/(auth)/verify/use-verification",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/actions/github.ts",
    "functions": [
      "getFormattedGitHubStars"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/blog/layout.tsx",
    "functions": [
      "BlogLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/(landing)/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/blog/page.tsx",
    "functions": [
      "BlogPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/navigation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/(landing)/components/background/background",
      "@/app/(landing)/components/footer/footer",
      "@/app/(landing)/components/hero/hero",
      "@/app/(landing)/components/integrations/integrations",
      "@/app/(landing)/components/landing-pricing/landing-pricing",
      "@/app/(landing)/components/landing-templates/landing-templates",
      "@/app/(landing)/components/legal-layout",
      "@/app/(landing)/components/nav/nav",
      "@/app/(landing)/components/structured-data",
      "@/app/(landing)/components/testimonials/testimonials"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/legal-layout.tsx",
    "functions": [
      "LegalLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/environment",
      "@/app/(landing)/components/footer/footer",
      "@/app/(landing)/components/nav/nav",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/structured-data.tsx",
    "functions": [
      "StructuredData"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/privacy/page.tsx",
    "functions": [
      "PrivacyPolicy"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/link",
      "@/lib/env",
      "@/app/(landing)/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/terms/page.tsx",
    "functions": [
      "TermsOfService"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/link",
      "@/lib/env",
      "@/app/(landing)/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/__test-utils__/utils.ts",
    "functions": [
      "createMockRequest",
      "mockExecutionDependencies",
      "mockTriggerDevSdk",
      "mockWorkflowAccessValidation",
      "getMockedDependencies",
      "mockScheduleStatusDb",
      "mockScheduleExecuteDb",
      "mockAuth",
      "mockCommonSchemas",
      "mockDrizzleOrm",
      "mockKnowledgeSchemas",
      "mockConsoleLogger",
      "setupCommonApiMocks",
      "mockUuid",
      "mockCryptoUuid",
      "mockFileSystem",
      "mockEncryption",
      "createStorageProviderMocks",
      "setupComprehensiveTestMocks",
      "createMockDatabase",
      "createAuthApiMocks",
      "mockWorkflowUtils",
      "setupKnowledgeMocks",
      "setupFileApiMocks",
      "setupAuthApiMocks",
      "setupKnowledgeApiMocks",
      "setupApiTestMocks",
      "mockUploadUtils",
      "createMockTransaction"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/billing/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/billing/core/billing",
      "@/lib/billing/core/organization",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "uuid",
      "zod",
      "@/lib/auth",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/app/api/chat/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/utils.ts",
    "functions": [
      "checkWorkflowAccessForChatCreation",
      "checkChatAccess",
      "addCorsHeaders",
      "OPTIONS",
      "validateChatAuth",
      "processChatFiles"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/environment",
      "@/lib/execution/files",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/environment/route.ts",
    "functions": [
      "POST",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/stores/settings/environment/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/utils.ts",
    "functions": [
      "getContentType",
      "isS3Path",
      "isBlobPath",
      "isCloudPath",
      "extractStorageKey",
      "extractS3Key",
      "extractBlobKey",
      "extractFilename",
      "sanitizeFilename",
      "findLocalFile",
      "getSecureFileHeaders",
      "encodeFilenameForHeader",
      "createFileResponse",
      "createErrorResponse",
      "createSuccessResponse",
      "createOptionsResponse"
    ],
    "classes": [
      "FileNotFoundError",
      "InvalidRequestError"
    ],
    "exports": {},
    "imports": [
      "fs",
      "path",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/uploads/setup"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/folders/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/folders/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/github-stars/route.ts",
    "functions": [
      "formatStarCount",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/help/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/components/emails",
      "@/lib/auth",
      "@/lib/email/mailer",
      "@/lib/email/utils",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/knowledge/service",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/utils.test.ts",
    "functions": [
      "resetDatasets"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/embeddings/utils",
      "@/lib/knowledge/documents/service",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/utils.ts",
    "functions": [
      "checkKnowledgeBaseAccess",
      "checkKnowledgeBaseWriteAccess",
      "checkDocumentWriteAccess",
      "checkDocumentAccess",
      "checkChunkAccess"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/logs/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/memory/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/organizations/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/billing/organization",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/providers/route.ts",
    "functions": [
      "POST",
      "sanitizeToolCalls",
      "sanitizeToolCall",
      "sanitizeObject"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/executor/types",
      "@/providers",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/proxy/route.ts",
    "functions": [
      "GET",
      "POST",
      "OPTIONS"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/internal",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/tools",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/schedules/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/schedules/route.ts",
    "functions": [
      "hasValidScheduleConfig",
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/schedules/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/telemetry/route.ts",
    "functions": [
      "validateTelemetryData",
      "safeStringValue",
      "createSafeAttributes",
      "forwardToCollector",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/env",
      "@/lib/environment",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/templates/route.ts",
    "functions": [
      "sanitizeWorkflowState",
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "uuid",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/usage/route.ts",
    "functions": [
      "GET",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth",
      "@/lib/billing",
      "@/lib/billing/core/organization",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/v1/auth.ts",
    "functions": [
      "authenticateV1Request"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/api-key/service",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/v1/middleware.ts",
    "functions": [
      "checkRateLimit",
      "createRateLimitResponse"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/billing/core/subscription",
      "@/lib/logs/console/logger",
      "@/services/queue/RateLimiter",
      "./auth"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/wand-generate/route.ts",
    "functions": [
      "safeStringify",
      "updateUserStatsForWand",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "openai",
      "@/lib/billing/threshold-billing",
      "@/lib/env",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/route.ts",
    "functions": [
      "GET",
      "POST",
      "createAirtableWebhookSubscription"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "nanoid",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/middleware.ts",
    "functions": [
      "validateWorkflowAccess"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/api-key/auth",
      "@/lib/api-key/service",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/utils.ts",
    "functions": [
      "createErrorResponse",
      "createSuccessResponse",
      "verifyWorkspaceMembership"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/route.ts",
    "functions": [
      "GET",
      "POST",
      "createDefaultWorkspace",
      "createWorkspace",
      "migrateExistingWorkflows",
      "ensureWorkflowsHaveWorkspace"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/changelog/components/changelog-content.tsx",
    "functions": [
      "extractMentions",
      "ChangelogContent"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "next/link",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne",
      "./timeline-list"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/changelog/components/timeline-list.tsx",
    "functions": [
      "sanitizeContent",
      "stripContributors",
      "isContributorsLabel",
      "stripPrReferences",
      "cleanMarkdown",
      "extractMentions",
      "ChangelogList"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react-markdown",
      "@/components/ui/avatar",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne",
      "./changelog-content"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/[identifier]/chat.tsx",
    "functions": [
      "fileToBase64",
      "createAudioStreamHandler",
      "throttle",
      "ChatClient"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "uuid",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/(landing)/actions/github",
      "@/app/chat/components",
      "@/app/chat/constants",
      "@/app/chat/hooks"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/[identifier]/page.tsx",
    "functions": [
      "ChatPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/chat/[identifier]/chat"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/hooks/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/hooks/use-audio-streaming.ts",
    "functions": [
      "useAudioStreaming"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/hooks/use-chat-streaming.ts",
    "functions": [
      "useChatStreaming"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger",
      "@/app/chat/components/message/message",
      "@/app/chat/constants"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/fonts/soehne/soehne.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/font/local"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/invite/[id]/invite.tsx",
    "functions": [
      "Invite"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/app/invite/[id]/utils",
      "@/app/invite/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/invite/[id]/page.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/invite/[id]/invite"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/invite/[id]/utils.ts",
    "functions": [
      "getErrorMessage"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/invite/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/invite/components/layout.tsx",
    "functions": [
      "InviteLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/(landing)/components/nav/nav"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/invite/components/status-card.tsx",
    "functions": [
      "InviteStatusCard"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/loading-agent",
      "@/lib/branding/branding",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/error.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/error"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/global-error.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/error"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/layout.tsx",
    "functions": [
      "WorkspaceLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/providers/providers",
      "@/app/workspace/[workspaceId]/w/components/sidebar/sidebar"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/page.tsx",
    "functions": [
      "WorkspacePage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/navigation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/agent/agent-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/environment",
      "@/blocks",
      "@/executor/consts",
      "@/executor/handlers/agent/agent-handler",
      "@/executor/types",
      "@/providers",
      "@/providers/utils",
      "@/serializer/types",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/agent/agent-handler.ts",
    "functions": [
      "collectBlockData"
    ],
    "classes": [
      "AgentBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/mcp/utils",
      "@/lib/urls/utils",
      "@/blocks",
      "@/blocks/types",
      "@/executor/consts",
      "@/executor/handlers/agent/types",
      "@/executor/types",
      "@/providers",
      "@/providers/utils",
      "@/serializer/types",
      "@/tools",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/agent/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/api/api-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/__test-utils__/mock-dependencies",
      "vitest",
      "@/executor/consts",
      "@/executor/handlers/api/api-handler",
      "@/executor/types",
      "@/serializer/types",
      "@/tools",
      "@/tools/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/api/api-handler.ts",
    "functions": [],
    "classes": [
      "ApiBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/executor/consts",
      "@/executor/types",
      "@/serializer/types",
      "@/tools",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/condition/condition-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/__test-utils__/mock-dependencies",
      "vitest",
      "@/executor/consts",
      "@/executor/handlers/condition/condition-handler",
      "@/executor/path/path",
      "@/executor/resolver/resolver",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/condition/condition-handler.ts",
    "functions": [],
    "classes": [
      "ConditionBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/executor/consts",
      "@/executor/path/path",
      "@/executor/resolver/resolver",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/evaluator/evaluator-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/__test-utils__/mock-dependencies",
      "vitest",
      "@/executor/consts",
      "@/executor/handlers/evaluator/evaluator-handler",
      "@/executor/types",
      "@/providers/utils",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/evaluator/evaluator-handler.ts",
    "functions": [],
    "classes": [
      "EvaluatorBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/blocks/types",
      "@/executor/consts",
      "@/executor/types",
      "@/providers/utils",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/function/function-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/execution/constants",
      "@/executor/consts",
      "@/executor/handlers/function/function-handler",
      "@/executor/types",
      "@/serializer/types",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/function/function-handler.ts",
    "functions": [
      "collectBlockData"
    ],
    "classes": [
      "FunctionBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/execution/constants",
      "@/lib/execution/languages",
      "@/lib/logs/console/logger",
      "@/executor/consts",
      "@/executor/types",
      "@/serializer/types",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/generic/generic-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/__test-utils__/mock-dependencies",
      "vitest",
      "@/executor/consts",
      "@/executor/handlers/generic/generic-handler",
      "@/executor/types",
      "@/serializer/types",
      "@/tools",
      "@/tools/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/generic/generic-handler.ts",
    "functions": [],
    "classes": [
      "GenericBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/blocks/index",
      "@/executor/types",
      "@/serializer/types",
      "@/tools",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/loop/loop-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/handlers/loop/loop-handler",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/loop/loop-handler.ts",
    "functions": [],
    "classes": [
      "LoopBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/executor/consts",
      "@/executor/path/path",
      "@/executor/resolver/resolver",
      "@/executor/routing/routing",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/parallel/parallel-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/__test-utils__/executor-mocks",
      "@/executor/consts",
      "@/executor/handlers/parallel/parallel-handler",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/parallel/parallel-handler.ts",
    "functions": [],
    "classes": [
      "ParallelBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/executor/consts",
      "@/executor/parallels/utils",
      "@/executor/path/path",
      "@/executor/resolver/resolver",
      "@/executor/routing/routing",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/response/response-handler.ts",
    "functions": [],
    "classes": [
      "ResponseBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/blocks/types",
      "@/executor/consts",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/router/router-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/__test-utils__/mock-dependencies",
      "vitest",
      "@/blocks/blocks/router",
      "@/executor/consts",
      "@/executor/handlers/router/router-handler",
      "@/executor/path/path",
      "@/executor/types",
      "@/providers/utils",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/router/router-handler.ts",
    "functions": [],
    "classes": [
      "RouterBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/blocks/blocks/router",
      "@/blocks/types",
      "@/executor/consts",
      "@/executor/path/path",
      "@/executor/types",
      "@/providers/utils",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/trigger/trigger-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/__test-utils__/mock-dependencies",
      "vitest",
      "@/executor/handlers/trigger/trigger-handler",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/trigger/trigger-handler.ts",
    "functions": [],
    "classes": [
      "TriggerBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/workflow/workflow-handler.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/executor/consts",
      "@/executor/handlers/workflow/workflow-handler",
      "@/executor/types",
      "@/serializer/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/executor/handlers/workflow/workflow-handler.ts",
    "functions": [],
    "classes": [
      "WorkflowBlockHandler"
    ],
    "exports": {},
    "imports": [
      "@/lib/auth/internal",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/lib/logs/types",
      "@/lib/urls/utils",
      "@/blocks/types",
      "@/executor",
      "@/executor/consts",
      "@/executor/types",
      "@/serializer",
      "@/serializer/types",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/calculations/usage-monitor.ts",
    "functions": [
      "checkUsageStatus",
      "checkAndNotifyUsage",
      "checkServerSideUsageLimits"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/billing/core/billing",
      "@/lib/billing/core/usage",
      "@/lib/environment",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/core/billing.ts",
    "functions": [
      "getOrganizationSubscription",
      "getPlanPricing",
      "calculateUserOverage",
      "calculateSubscriptionOverage",
      "getSimplifiedBillingSummary",
      "getDefaultBillingSummary"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/billing/core/subscription",
      "@/lib/billing/core/usage",
      "@/lib/billing/subscriptions/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/core/organization.ts",
    "functions": [
      "getOrganizationSubscription",
      "roundCurrency",
      "getOrganizationBillingData",
      "updateOrganizationUsageLimit",
      "getOrganizationBillingSummary",
      "isOrganizationOwnerOrAdmin"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/billing/core/billing",
      "@/lib/billing/subscriptions/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/core/subscription.ts",
    "functions": [
      "getHighestPrioritySubscription",
      "isProPlan",
      "isTeamPlan",
      "isEnterprisePlan",
      "hasExceededCostLimit",
      "getUserSubscriptionState",
      "sendPlanWelcomeEmail"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/billing/subscriptions/utils",
      "@/lib/billing/types",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/core/usage.ts",
    "functions": [
      "handleNewUser",
      "getUserUsageData",
      "getUserUsageLimitInfo",
      "initializeUserUsageLimit",
      "updateUserUsageLimit",
      "getUserUsageLimit",
      "checkUsageStatus",
      "syncUsageLimitsFromSubscription",
      "getTeamUsageLimits",
      "getEffectiveCurrentPeriodCost",
      "calculateBillingProjection",
      "maybeSendUsageThresholdEmail"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/components/emails/render-email",
      "@/lib/billing/core/subscription",
      "@/lib/billing/subscriptions/utils",
      "@/lib/billing/types",
      "@/lib/email/mailer",
      "@/lib/email/unsubscribe",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/subscriptions/utils.ts",
    "functions": [
      "getFreeTierLimit",
      "getProTierLimit",
      "getTeamTierLimitPerSeat",
      "getEnterpriseTierLimitPerSeat",
      "checkEnterprisePlan",
      "checkProPlan",
      "checkTeamPlan",
      "getPerUserMinimumLimit",
      "canEditUsageLimit"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/billing/constants",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/types/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/validation/seat-management.ts",
    "functions": [
      "validateSeatAvailability",
      "getOrganizationSeatInfo",
      "validateBulkInvitations",
      "updateOrganizationSeats",
      "validateMemberRemoval",
      "getOrganizationSeatAnalytics"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/billing/core/billing",
      "@/lib/email/validation",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/webhooks/enterprise.ts",
    "functions": [
      "isEnterpriseMetadata",
      "handleManualEnterpriseSubscription"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "stripe",
      "@/components/emails/render-email",
      "@/lib/email/mailer",
      "@/lib/email/utils",
      "@/lib/logs/console/logger",
      "../types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/webhooks/invoices.ts",
    "functions": [
      "parseDecimal",
      "getBilledOverageForSubscription",
      "resetUsageForSubscription",
      "handleInvoicePaymentSucceeded",
      "handleInvoicePaymentFailed",
      "handleInvoiceFinalized"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "stripe",
      "@/lib/billing/core/billing",
      "@/lib/billing/stripe-client",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/billing/webhooks/subscription.ts",
    "functions": [
      "handleSubscriptionCreated",
      "handleSubscriptionDeleted"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/billing/core/billing",
      "@/lib/billing/stripe-client",
      "@/lib/logs/console/logger",
      "./invoices"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/auth/permissions.ts",
    "functions": [
      "verifyWorkflowAccess",
      "createPermissionError"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/chunks/service.ts",
    "functions": [
      "queryChunks",
      "createChunk",
      "batchChunkOperation",
      "updateChunk",
      "deleteChunk"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/embeddings/utils",
      "@/lib/knowledge/chunks/types",
      "@/lib/logs/console/logger",
      "@/lib/tokenization/estimators"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/chunks/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/documents/document-processor.ts",
    "functions": [
      "processDocument",
      "parseDocument",
      "handleFileForOCR",
      "downloadFileWithTimeout",
      "downloadFileForBase64",
      "validateCloudConfig",
      "processOCRContent",
      "validateOCRConfig",
      "extractPageContent",
      "makeOCRRequest",
      "parseWithAzureMistralOCR",
      "parseWithMistralOCR",
      "parseWithFileParser",
      "parseDataURI",
      "parseHttpFile"
    ],
    "classes": [
      "APIError"
    ],
    "exports": {},
    "imports": [
      "@/lib/chunkers",
      "@/lib/env",
      "@/lib/file-parsers",
      "@/lib/knowledge/documents/utils",
      "@/lib/logs/console/logger",
      "@/lib/uploads",
      "@/lib/uploads/setup",
      "@/tools/mistral/parser"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/documents/queue.ts",
    "functions": [],
    "classes": [
      "DocumentProcessingQueue"
    ],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/redis"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/documents/service.ts",
    "functions": [
      "withTimeout",
      "getDocumentQueue",
      "getProcessingConfig",
      "processDocumentTags",
      "processDocumentsWithQueue",
      "processDocumentsWithConcurrencyControl",
      "processBatchWithConcurrency",
      "processDocumentAsync",
      "isTriggerAvailable",
      "processDocumentsWithTrigger",
      "createDocumentRecords",
      "getDocuments",
      "createSingleDocument",
      "bulkDocumentOperation",
      "markDocumentAsFailedTimeout",
      "retryDocumentProcessing",
      "updateDocument",
      "deleteDocument"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "@trigger.dev/sdk",
      "drizzle-orm",
      "@/lib/embeddings/utils",
      "@/lib/env",
      "@/lib/knowledge/consts",
      "@/lib/knowledge/documents/document-processor",
      "@/lib/knowledge/tags/service",
      "@/lib/logs/console/logger",
      "@/lib/redis",
      "@/background/knowledge-processing",
      "./queue",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/documents/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/documents/utils.ts",
    "functions": [
      "hasStatus",
      "isRetryableError",
      "retryWithExponentialBackoff",
      "fetchWithRetry"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/tags/service.ts",
    "functions": [
      "validateTagSlot",
      "getNextAvailableSlot",
      "getDocumentTagDefinitions",
      "getTagDefinitions",
      "createOrUpdateTagDefinitionsBulk",
      "getTagDefinitionById",
      "updateTagValuesInDocumentsAndChunks",
      "cleanupUnusedTagDefinitions",
      "deleteAllTagDefinitions",
      "deleteTagDefinition",
      "createTagDefinition",
      "updateTagDefinition",
      "getTagUsage",
      "getTagUsageStats"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/knowledge/consts",
      "@/lib/knowledge/tags/types",
      "@/lib/knowledge/types",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/knowledge/tags/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/console/logger.ts",
    "functions": [
      "createLogger"
    ],
    "classes": [
      "Logger"
    ],
    "exports": {},
    "imports": [
      "chalk",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/execution/logger.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/logs/execution/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/execution/logger.ts",
    "functions": [],
    "classes": [
      "ExecutionLogger"
    ],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "uuid",
      "@/lib/billing/core/subscription",
      "@/lib/billing/core/usage",
      "@/lib/billing/threshold-billing",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/logs/events",
      "@/lib/logs/execution/snapshot/service",
      "@/lib/logs/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/execution/logging-factory.ts",
    "functions": [
      "createTriggerObject",
      "createEnvironmentObject",
      "loadWorkflowStateForExecution",
      "calculateCostSummary"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/billing/constants",
      "@/lib/logs/types",
      "@/lib/workflows/db-helpers"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/execution/logging-session.ts",
    "functions": [],
    "classes": [
      "LoggingSession"
    ],
    "exports": {},
    "imports": [
      "@/lib/billing/constants",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/logger",
      "@/lib/logs/execution/logging-factory",
      "@/lib/logs/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/blob/blob-client.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/blob/blob-client.ts",
    "functions": [
      "getBlobServiceClient",
      "sanitizeFilenameForMetadata",
      "uploadToBlob",
      "getPresignedUrl",
      "getPresignedUrlWithConfig",
      "downloadFromBlob",
      "deleteFromBlob",
      "streamToBuffer",
      "initiateMultipartUpload",
      "getMultipartPartUrls",
      "completeMultipartUpload",
      "abortMultipartUpload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@azure/storage-blob",
      "@/lib/logs/console/logger",
      "@/lib/uploads/setup"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/blob/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/s3/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/s3/s3-client.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/uploads/s3/s3-client.ts",
    "functions": [
      "getS3Client",
      "sanitizeFilenameForMetadata",
      "uploadToS3",
      "getPresignedUrl",
      "getPresignedUrlWithConfig",
      "downloadFromS3",
      "downloadFromS3WithConfig",
      "deleteFromS3",
      "initiateS3MultipartUpload",
      "getS3MultipartPartUrls",
      "completeS3MultipartUpload",
      "abortS3MultipartUpload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@aws-sdk/client-s3",
      "@aws-sdk/s3-request-presigner",
      "@/lib/env",
      "@/lib/uploads/setup"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/autolayout/containers.ts",
    "functions": [
      "layoutContainers"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/stores/workflows/workflow/types",
      "./layering",
      "./positioning",
      "./types",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/autolayout/incremental.ts",
    "functions": [
      "adjustForNewBlock",
      "compactHorizontally"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/stores/workflows/workflow/types",
      "./types",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/autolayout/index.ts",
    "functions": [
      "applyAutoLayout",
      "adjustForNewBlock"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/stores/workflows/workflow/types",
      "./containers",
      "./incremental",
      "./layering",
      "./positioning",
      "./types",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/autolayout/layering.ts",
    "functions": [
      "assignLayers",
      "groupByLayer"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/stores/workflows/workflow/types",
      "./types",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/autolayout/positioning.ts",
    "functions": [
      "calculatePositions",
      "resolveOverlaps"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "./types",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/autolayout/targeted.ts",
    "functions": [
      "applyTargetedLayout",
      "layoutGroup",
      "computeLayoutPositions",
      "getBounds",
      "updateContainerDimensions",
      "hasPosition",
      "transferBlockHeights"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/stores/workflows/workflow/types",
      "./layering",
      "./positioning",
      "./types",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/autolayout/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/autolayout/utils.ts",
    "functions": [
      "resolveNumeric",
      "isContainerType",
      "getContainerMetrics",
      "getRegularBlockMetrics",
      "getBlockMetrics",
      "prepareBlockMetrics",
      "createBoundingBox",
      "boxesOverlap",
      "getBlocksByParent",
      "isStarterBlock"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/workflows/triggers",
      "@/stores/workflows/workflow/types",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/diff/diff-engine.ts",
    "functions": [
      "getParentId",
      "buildEdgeKey",
      "groupBlocksByParent",
      "buildAdjacency",
      "expandImpactedBlocks",
      "computeStructuralLayoutImpact",
      "hasBlockChanged",
      "computeFieldDiff"
    ],
    "classes": [
      "WorkflowDiffEngine"
    ],
    "exports": {},
    "imports": [
      "reactflow",
      "uuid",
      "@/lib/logs/console/logger",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/types",
      "./types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/diff/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/diff/types.ts",
    "functions": [
      "hasDiffStatus"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/diff/use-workflow-diff.ts",
    "functions": [
      "useWorkflowDiff"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types",
      "./diff-engine"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/workflows/training/compute-edit-sequence.ts",
    "functions": [
      "flattenBlocks",
      "extractAllEdgesFromBlocks",
      "computeEditSequence",
      "extractInputValues",
      "extractConnections",
      "computeBlockChanges",
      "computeInputDelta",
      "formatEditSequence"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/workflows/json-sanitizer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/logs/filters/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/logs/filters/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/chat/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "uuid",
      "zustand",
      "zustand/middleware",
      "@/stores/panel/chat/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/chat/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/console/store.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/stores/panel/console/store",
      "@/stores/panel/console/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/console/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/utils",
      "@/executor/types",
      "@/stores/panel/console/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/console/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/variables/store.ts",
    "functions": [
      "validateVariable",
      "migrateStringToPlain"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/stores/panel/variables/types",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/panel/variables/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/settings/environment/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "@/lib/logs/console/logger",
      "@/stores/constants",
      "@/stores/settings/environment/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/settings/environment/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/settings/general/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/lib/theme-sync",
      "@/stores/settings/general/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/settings/general/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/json/importer.ts",
    "functions": [
      "regenerateIds",
      "parseWorkflowJson"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "uuid",
      "@/lib/logs/console/logger",
      "../workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/json/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/lib/workflows/json-sanitizer",
      "@/stores/workflows",
      "../registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/registry/store.ts",
    "functions": [
      "fetchWorkflowsFromDB",
      "resetWorkflowStores",
      "setWorkspaceTransitioning",
      "isWorkspaceInTransition",
      "hasWorkflowsInitiallyLoaded"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/lib/naming",
      "@/stores/constants",
      "@/stores/panel/variables/store",
      "@/stores/workflows/registry/types",
      "@/stores/workflows/registry/utils",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/registry/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/registry/utils.ts",
    "functions": [
      "getNextWorkflowColor"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/subblock/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/blocks/types",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/subblock/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/subblock/utils.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/workflow/store.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/workflow/store.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "reactflow",
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "@/lib/workflows/block-outputs",
      "@/blocks",
      "@/blocks/utils",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/types",
      "@/stores/workflows/workflow/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/workflow/types.ts",
    "functions": [
      "isValidSubflowType"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "reactflow",
      "@/blocks/types",
      "@/stores/workflows/registry/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/workflow/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/stores/workflows/workflow/types",
      "@/stores/workflows/workflow/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/workflow/utils.ts",
    "functions": [
      "convertLoopBlockToLoop",
      "convertParallelBlockToParallel",
      "findChildNodes",
      "findAllDescendantNodes",
      "generateLoopBlocks",
      "generateParallelBlocks"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/yaml/importer.ts",
    "functions": [
      "parseWorkflowYaml",
      "validateBlockTypes",
      "calculateBlockPositions",
      "sortBlocksByParentChildOrder",
      "convertYamlToWorkflow",
      "createSmartIdMapping"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "js-yaml",
      "uuid",
      "@/lib/logs/console/logger",
      "@/blocks",
      "@/stores/workflows/yaml/parsing-utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/yaml/parsing-utils.ts",
    "functions": [
      "parseBlockConnections",
      "generateBlockConnections",
      "validateBlockStructure",
      "cleanConditionInputs",
      "expandConditionInputs",
      "validateBlockReferences",
      "hasNewFormat",
      "parseNewFormatConnections",
      "parseLegacyOutgoingConnections",
      "createEdge",
      "createConditionHandle",
      "extractConditionId"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "uuid",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/stores/workflows/yaml/store.ts",
    "functions": [
      "getSubBlockValues",
      "initializeSubscriptions"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand",
      "zustand/middleware",
      "@/lib/logs/console/logger",
      "../registry/store",
      "../subblock/store",
      "../workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/blog/openai-vs-n8n-vs-sim/openai-n8n-sim.tsx",
    "functions": [
      "OpenAiN8nSim"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/image",
      "@/components/ui/avatar",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/blog/openai-vs-n8n-vs-sim/page.tsx",
    "functions": [
      "Page"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next",
      "./openai-n8n-sim"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/background/background-svg.tsx",
    "functions": [
      "BackgroundSVG"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/background/background.tsx",
    "functions": [
      "Background"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/dynamic",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/footer/footer.tsx",
    "functions": [
      "Footer"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/image",
      "next/link",
      "@/components/icons",
      "@/app/fonts/inter"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/hero.tsx",
    "functions": [
      "Hero"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "reactflow",
      "@/components/icons",
      "@/lib/browser-storage",
      "@/app/fonts/soehne/soehne",
      "./components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/integrations/integrations.tsx",
    "functions": [
      "IntegrationBox",
      "TickerRow",
      "Integrations"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/app/fonts/inter"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/landing-pricing/landing-pricing.tsx",
    "functions": [
      "PricingCard",
      "LandingPricing"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "lucide-react",
      "next/navigation",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/fonts/inter",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/plan-configs"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/landing-templates/landing-templates.tsx",
    "functions": [
      "LandingTemplates"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/fonts/inter",
      "./components/landing-template-preview"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/nav/nav.tsx",
    "functions": [
      "Nav"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/image",
      "next/link",
      "next/navigation",
      "@/components/icons",
      "@/lib/branding/branding",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/app/(landing)/actions/github",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/testimonials/testimonials.tsx",
    "functions": [
      "Testimonials"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/image",
      "@/app/fonts/inter"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/[...all]/route.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "better-auth/next-js",
      "@/lib/auth"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/forget-password/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/forget-password/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/utils.ts",
    "functions": [
      "getUserId",
      "getCredential",
      "getOAuthToken",
      "refreshAccessTokenIfNeeded",
      "refreshTokenIfNeeded"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/oauth/oauth"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/reset-password/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/reset-password/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/socket-token/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/headers",
      "next/server",
      "@/lib/auth"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/billing/portal/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/billing/stripe-client",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/billing/update-cost/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/billing/threshold-billing",
      "@/lib/copilot/utils",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/[identifier]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/[identifier]/route.ts",
    "functions": [
      "POST",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/chat/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/validate/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/api-keys/route.ts",
    "functions": [
      "GET",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth",
      "@/lib/env",
      "@/lib/sim-agent/constants"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/chat/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/chat/route.ts",
    "functions": [
      "POST",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/copilot/auth",
      "@/lib/copilot/config",
      "@/lib/copilot/types",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/sim-agent/constants",
      "@/lib/sim-agent/utils",
      "@/lib/uploads/file-utils",
      "@/lib/uploads/setup",
      "@/lib/uploads/storage-client"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/chats/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/copilot/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/checkpoints/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/checkpoints/route.ts",
    "functions": [
      "POST",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/copilot/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/confirm/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/confirm/route.ts",
    "functions": [
      "updateToolCallStatus",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/copilot/auth",
      "@/lib/logs/console/logger",
      "@/lib/redis"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/execute-copilot-server-tool/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/copilot/auth",
      "@/lib/copilot/tools/server/router",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/feedback/route.ts",
    "functions": [
      "POST",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "next/server",
      "zod",
      "@/lib/copilot/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/methods/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/stats/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/copilot/auth",
      "@/lib/env",
      "@/lib/sim-agent/constants"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/training/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/user-models/route.ts",
    "functions": [
      "GET",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/../../packages/db",
      "@/../../packages/db/schema"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/cron/renew-subscriptions/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth/internal",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/delete/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/delete/route.ts",
    "functions": [
      "POST",
      "handleCloudFileDelete",
      "handleLocalFileDelete",
      "extractCloudKey",
      "OPTIONS"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "fs",
      "fs/promises",
      "path",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/uploads",
      "@/lib/uploads/setup",
      "@/lib/uploads/setup.server",
      "@/app/api/files/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/download/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/uploads",
      "@/lib/uploads/setup",
      "@/lib/urls/utils",
      "@/app/api/files/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/multipart/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/uploads",
      "@/lib/uploads/setup"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/parse/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "path",
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils",
      "@/app/api/files/parse/route"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/parse/route.ts",
    "functions": [
      "POST",
      "parseFileSingle",
      "validateFilePath",
      "handleExternalUrl",
      "handleCloudFile",
      "handleLocalFile",
      "handlePdfBuffer",
      "handleCsvBuffer",
      "handleGenericTextBuffer",
      "handleGenericBuffer",
      "parseBufferAsPdf",
      "getMimeType",
      "prettySize",
      "createPdfFallbackMessage",
      "createPdfFailureMessage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "buffer",
      "crypto",
      "fs/promises",
      "path",
      "binary-extensions",
      "next/server",
      "@/lib/file-parsers",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/uploads",
      "@/lib/uploads/setup.server",
      "@/lib/uploads/setup.server"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/presigned/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/presigned/route.ts",
    "functions": [
      "POST",
      "handleS3PresignedUrl",
      "handleBlobPresignedUrl",
      "OPTIONS"
    ],
    "classes": [
      "PresignedUrlError",
      "StorageConfigError",
      "ValidationError"
    ],
    "exports": {},
    "imports": [
      "@aws-sdk/client-s3",
      "@aws-sdk/s3-request-presigner",
      "next/server",
      "uuid",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/uploads",
      "@/lib/uploads/file-utils",
      "@/lib/uploads/setup",
      "@/lib/uploads/validation",
      "@/app/api/files/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/upload/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/upload/route.ts",
    "functions": [
      "validateFileExtension",
      "POST",
      "OPTIONS"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/uploads",
      "@/lib/uploads/setup.server",
      "@/lib/auth",
      "@/app/api/files/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/folders/[id]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/folders/[id]/route.ts",
    "functions": [
      "PUT",
      "DELETE",
      "deleteFolderRecursively",
      "checkForCircularReference"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/function/execute/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/function/execute/route.ts",
    "functions": [
      "createSecureFetch",
      "loadTypeScriptModule",
      "extractJavaScriptImports",
      "extractEnhancedError",
      "formatE2BError",
      "createUserFriendlyErrorMessage",
      "resolveWorkflowVariables",
      "resolveEnvironmentVariables",
      "resolveTagVariables",
      "resolveCodeVariables",
      "getNestedValue",
      "escapeRegExp",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "vm",
      "next/server",
      "@/lib/env",
      "@/lib/execution/e2b",
      "@/lib/execution/languages",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/guardrails/validate/route.ts",
    "functions": [
      "POST",
      "convertInputToString",
      "executeValidation"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/guardrails/validate_hallucination",
      "@/lib/guardrails/validate_json",
      "@/lib/guardrails/validate_pii",
      "@/lib/guardrails/validate_regex",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/jobs/[jobId]/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@trigger.dev/sdk",
      "next/server",
      "@/lib/api-key/service",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/route.ts",
    "functions": [
      "GET",
      "PUT",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/knowledge/service",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/search/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/search/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/knowledge/consts",
      "@/lib/knowledge/tags/service",
      "@/lib/logs/console/logger",
      "@/lib/tokenization/estimators",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils",
      "@/app/api/knowledge/utils",
      "@/providers/utils",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/search/utils.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "./utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/search/utils.ts",
    "functions": [
      "getDocumentNamesByIds",
      "getTagFilters",
      "getQueryStrategy",
      "executeTagFilterQuery",
      "executeVectorSearchOnIds",
      "handleTagOnlySearch",
      "handleVectorOnlySearch",
      "handleTagAndVectorSearch"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/logs/[id]/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/logs/cleanup/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@aws-sdk/client-s3",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth/internal",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/snapshot/service",
      "@/lib/uploads"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/logs/export/route.ts",
    "functions": [
      "escapeCsv",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/mcp/servers/route.ts",
    "functions": [
      "isUrlBasedTransport"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/mcp/middleware",
      "@/lib/mcp/service",
      "@/lib/mcp/types",
      "@/lib/mcp/url-validator",
      "@/lib/mcp/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/memory/[id]/route.ts",
    "functions": [
      "GET",
      "DELETE",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/organizations/[id]/route.ts",
    "functions": [
      "GET",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/billing/validation/seat-management",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/proxy/image/route.ts",
    "functions": [
      "GET",
      "OPTIONS"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/proxy/tts/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/uploads/storage-client",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/schedules/[id]/route.ts",
    "functions": [
      "DELETE",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/schedules/execute/route.test.ts",
    "functions": [
      "createMockRequest"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/schedules/execute/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@trigger.dev/sdk",
      "drizzle-orm",
      "next/server",
      "@/lib/auth/internal",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/background/schedule-execution"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/templates/[id]/route.ts",
    "functions": [
      "GET",
      "PUT",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/custom/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/custom/route.ts",
    "functions": [
      "GET",
      "POST",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mongodb/utils.ts",
    "functions": [
      "createMongoDBConnection",
      "validateFilter",
      "validatePipeline",
      "sanitizeCollectionName"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "mongodb",
      "@/tools/mongodb/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mysql/utils.ts",
    "functions": [
      "createMySQLConnection",
      "executeQuery",
      "validateQuery",
      "buildInsertQuery",
      "buildUpdateQuery",
      "buildDeleteQuery",
      "validateWhereClause",
      "sanitizeIdentifier",
      "sanitizeSingleIdentifier"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "mysql2/promise"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/postgresql/utils.ts",
    "functions": [
      "createPostgresConnection",
      "executeQuery",
      "validateQuery",
      "sanitizeIdentifier",
      "validateWhereClause",
      "sanitizeSingleIdentifier",
      "executeInsert",
      "executeUpdate",
      "executeDelete"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "postgres",
      "@/tools/postgresql/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/stagehand/utils.ts",
    "functions": [
      "jsonSchemaToZod",
      "ensureZodObject",
      "normalizeUrl"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zod",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/thinking/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/tools/thinking/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/v1/logs/filters.ts",
    "functions": [
      "buildLogFilters",
      "getOrderBy"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db/schema",
      "drizzle-orm"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/v1/logs/meta.ts",
    "functions": [
      "getUserLimits",
      "createApiResponse"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/billing",
      "@/lib/billing/core/subscription",
      "@/lib/billing/core/usage",
      "@/services/queue"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/v1/logs/route.ts",
    "functions": [
      "encodeCursor",
      "decodeCursor",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/v1/logs/filters",
      "@/app/api/v1/logs/meta",
      "@/app/api/v1/middleware"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/[id]/route.ts",
    "functions": [
      "GET",
      "PATCH",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/test/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/route.ts",
    "functions": [
      "GET",
      "DELETE",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/api-key/service",
      "@/lib/auth",
      "@/lib/auth/internal",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/[id]/route.ts",
    "functions": [
      "GET",
      "PATCH",
      "DELETE",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@sim/db",
      "@sim/db/schema",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/invitations/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/invitations/route.ts",
    "functions": [
      "GET",
      "POST",
      "sendInvitationEmail"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@react-email/render",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/components/emails/workspace-invitation",
      "@/lib/auth",
      "@/lib/email/mailer",
      "@/lib/email/utils",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/members/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/yaml/autolayout/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/autolayout"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/error-state/error-state.tsx",
    "functions": [
      "ChatErrorState"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/components/ui/button",
      "@/lib/branding/branding",
      "@/app/(landing)/components/nav/nav",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/header/header.tsx",
    "functions": [
      "ChatHeader"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/image",
      "next/link",
      "@/components/icons",
      "@/lib/branding/branding",
      "@/app/fonts/inter"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/input/input.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "framer-motion",
      "lucide-react",
      "@/components/ui/tooltip",
      "@/app/chat/components/input/voice-input"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/input/voice-input.tsx",
    "functions": [
      "VoiceInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "framer-motion",
      "lucide-react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/loading-state/loading-state.tsx",
    "functions": [
      "ChatLoadingState"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/skeleton"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/message/message.tsx",
    "functions": [
      "EnhancedMarkdownRenderer"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/tooltip",
      "./components/markdown-renderer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/message-container/message-container.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/app/chat/components/message/message"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/voice-interface/voice-interface.tsx",
    "functions": [
      "VoiceInterface"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/chat/components/voice-interface/components/particles"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/knowledge.tsx",
    "functions": [
      "Knowledge"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/tooltip",
      "@/app/workspace/[workspaceId]/knowledge/components",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/hooks/use-knowledge",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/loading.tsx",
    "functions": [
      "KnowledgeLoading"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/app/workspace/[workspaceId]/knowledge/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/page.tsx",
    "functions": [
      "KnowledgePage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/knowledge/knowledge"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/executions-dashboard.tsx",
    "functions": [
      "ExecutionsDashboard"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/app/fonts/soehne/soehne",
      "@/app/workspace/[workspaceId]/logs/components/dashboard/controls",
      "@/app/workspace/[workspaceId]/logs/components/dashboard/kpis",
      "@/app/workspace/[workspaceId]/logs/components/dashboard/workflow-details",
      "@/app/workspace/[workspaceId]/logs/components/dashboard/workflows-list",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/timeline",
      "@/providers/utils",
      "@/stores/logs/filters/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/logs.tsx",
    "functions": [
      "Logs"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/lib/logs/console/logger",
      "@/lib/logs/query-parser",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/logs/components/dashboard/controls",
      "@/app/workspace/[workspaceId]/logs/components/search/search",
      "@/app/workspace/[workspaceId]/logs/components/sidebar/sidebar",
      "@/app/workspace/[workspaceId]/logs/executions-dashboard",
      "@/app/workspace/[workspaceId]/logs/utils/format-date",
      "@/hooks/use-debounce",
      "@/stores/folders/store",
      "@/stores/logs/filters/store",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/page.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/logs/logs"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/providers/providers.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/tooltip",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "./settings-loader"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/providers/settings-loader.tsx",
    "functions": [
      "SettingsLoader"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/auth-client",
      "@/stores/settings/general/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/providers/workspace-permissions-provider.tsx",
    "functions": [
      "WorkspacePermissionsProvider",
      "useWorkspacePermissionsContext",
      "useUserPermissionsContext"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "next/navigation",
      "@/lib/logs/console/logger",
      "@/hooks/use-collaborative-workflow",
      "@/hooks/use-user-permissions",
      "@/hooks/use-workspace-permissions"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/templates/layout.tsx",
    "functions": [
      "TemplatesLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "geist/font/sans"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/templates/page.tsx",
    "functions": [
      "TemplatesPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/auth",
      "@/app/workspace/[workspaceId]/templates/templates",
      "@/app/workspace/[workspaceId]/templates/templates"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/templates/templates.tsx",
    "functions": [
      "Templates"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/input",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/templates/components/navigation-tabs",
      "@/app/workspace/[workspaceId]/templates/components/template-card",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/page.tsx",
    "functions": [
      "WorkflowsPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/components/ui/loading-agent",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/base-tool.ts",
    "functions": [],
    "classes": [
      "BaseClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/manager.ts",
    "functions": [
      "registerClientTool",
      "getClientTool",
      "unregisterClientTool",
      "registerToolStateSync",
      "syncToolState"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/registry.ts",
    "functions": [
      "registerTool",
      "getTool",
      "createExecutionContext",
      "getRegisteredTools"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/client/types",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/types.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/client/base-tool"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/base-tool.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/router.ts",
    "functions": [
      "routeExecution"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/copilot/tools/server/blocks/get-blocks-and-tools",
      "@/lib/copilot/tools/server/blocks/get-blocks-metadata-tool",
      "@/lib/copilot/tools/server/blocks/get-trigger-blocks",
      "@/lib/copilot/tools/server/docs/search-documentation",
      "@/lib/copilot/tools/server/gdrive/list-files",
      "@/lib/copilot/tools/server/gdrive/read-file",
      "@/lib/copilot/tools/server/other/make-api-request",
      "@/lib/copilot/tools/server/other/search-online",
      "@/lib/copilot/tools/server/user/get-environment-variables",
      "@/lib/copilot/tools/server/user/get-oauth-credentials",
      "@/lib/copilot/tools/server/user/set-environment-variables",
      "@/lib/copilot/tools/server/workflow/edit-workflow",
      "@/lib/copilot/tools/server/workflow/get-workflow-console",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/shared/schemas.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zod"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/execution/snapshot/service.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/logs/execution/snapshot/service",
      "@/lib/logs/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/execution/snapshot/service.ts",
    "functions": [],
    "classes": [
      "SnapshotService"
    ],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "uuid",
      "@/lib/logs/console/logger",
      "@/lib/logs/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/execution/trace-spans/trace-spans.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/logs/execution/trace-spans/trace-spans.ts",
    "functions": [
      "isSyntheticWorkflowWrapper",
      "flattenWorkflowChildren",
      "getTraceSpanKey",
      "mergeTraceSpanChildren",
      "buildTraceSpans",
      "groupIterationBlocks",
      "ensureNestedWorkflowsProcessed",
      "stripCustomToolPrefix"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/lib/logs/types",
      "@/executor/consts",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/icon-button.tsx",
    "functions": [
      "IconButton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/landing-templates/components/landing-template-preview.tsx",
    "functions": [
      "LandingTemplatePreview"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/fonts/inter"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/connections/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/connections/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "jwt-decode",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/credentials/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/credentials/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "jwt-decode",
      "next/server",
      "@/lib/auth/hybrid",
      "@/lib/logs/console/logger",
      "@/lib/oauth/oauth",
      "@/lib/oauth/oauth",
      "@/lib/permissions/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/disconnect/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/disconnect/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/token/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/token/route.ts",
    "functions": [
      "POST",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/auth/hybrid",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/sso/providers/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/sso/register/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/webhook/stripe/route.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "better-auth/next-js",
      "@/lib/auth"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/[identifier]/otp/route.ts",
    "functions": [
      "generateOTP",
      "storeOTP",
      "getOTP",
      "deleteOTP",
      "POST",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/components/emails/render-email",
      "@/lib/email/mailer",
      "@/lib/logs/console/logger",
      "@/lib/redis",
      "@/lib/utils",
      "@/app/api/chat/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/manage/[id]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/chat/manage/[id]/route.ts",
    "functions": [
      "GET",
      "PATCH",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/app/api/chat/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/api-keys/generate/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth",
      "@/lib/env",
      "@/lib/sim-agent/constants"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/api-keys/validate/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/copilot/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/chat/update-messages/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/chat/update-messages/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/copilot/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/checkpoints/revert/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/checkpoints/revert/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/copilot/auth",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/tools/mark-complete/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/copilot/auth",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/sim-agent/constants"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/copilot/training/examples/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/env",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/presigned/batch/route.ts",
    "functions": [
      "POST",
      "handleBatchS3PresignedUrls",
      "handleBatchBlobPresignedUrls",
      "OPTIONS"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@aws-sdk/client-s3",
      "@aws-sdk/s3-request-presigner",
      "next/server",
      "uuid",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/uploads",
      "@/lib/uploads/setup",
      "@/lib/uploads/validation",
      "@/app/api/files/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/serve/[...path]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/serve/[...path]/route.ts",
    "functions": [
      "GET",
      "handleLocalFile",
      "downloadKBFile",
      "handleCloudProxy"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "fs/promises",
      "next/server",
      "next/server",
      "@/lib/auth/hybrid",
      "@/lib/logs/console/logger",
      "@/lib/uploads",
      "@/lib/uploads/setup",
      "@/lib/uploads/setup.server",
      "@/app/api/files/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/documents/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/documents/route.ts",
    "functions": [
      "GET",
      "POST",
      "PATCH"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/knowledge/documents/service",
      "@/lib/knowledge/documents/types",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/next-available-slot/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "@/lib/auth",
      "@/lib/knowledge/tags/service",
      "@/lib/logs/console/logger",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/tag-definitions/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/knowledge/consts",
      "@/lib/knowledge/tags/service",
      "@/lib/logs/console/logger",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/tag-usage/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "@/lib/auth",
      "@/lib/knowledge/tags/service",
      "@/lib/logs/console/logger",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/logs/execution/[executionId]/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/mcp/servers/[id]/route.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/mcp/middleware",
      "@/lib/mcp/service",
      "@/lib/mcp/url-validator",
      "@/lib/mcp/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/mcp/servers/test-connection/route.ts",
    "functions": [
      "isUrlBasedTransport",
      "resolveEnvVars"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/environment/utils",
      "@/lib/logs/console/logger",
      "@/lib/mcp/client",
      "@/lib/mcp/middleware",
      "@/lib/mcp/types",
      "@/lib/mcp/url-validator",
      "@/lib/mcp/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/mcp/tools/discover/route.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/mcp/middleware",
      "@/lib/mcp/service",
      "@/lib/mcp/types",
      "@/lib/mcp/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/mcp/tools/execute/route.ts",
    "functions": [
      "hasType",
      "validateToolArguments",
      "transformToolResult"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/mcp/middleware",
      "@/lib/mcp/service",
      "@/lib/mcp/types",
      "@/lib/mcp/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/organizations/[id]/invitations/route.ts",
    "functions": [
      "GET",
      "POST",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/components/emails/render-email",
      "@/lib/auth",
      "@/lib/billing/validation/seat-management",
      "@/lib/email/mailer",
      "@/lib/email/validation",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/organizations/[id]/members/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/components/emails/render-email",
      "@/lib/auth",
      "@/lib/billing/core/usage",
      "@/lib/billing/validation/seat-management",
      "@/lib/email/mailer",
      "@/lib/email/validation",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/organizations/[id]/workspaces/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/providers/ollama/models/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/providers/ollama/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/providers/openrouter/models/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/proxy/tts/stream/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/schedules/[id]/status/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/schedules/[id]/status/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/templates/[id]/star/route.ts",
    "functions": [
      "GET",
      "POST",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "uuid",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/templates/[id]/use/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "uuid",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/confluence/page/route.ts",
    "functions": [
      "POST",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/security/input-validation",
      "@/tools/confluence/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/confluence/pages/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/tools/confluence/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/discord/channels/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/discord/servers/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/drive/file/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/drive/files/route.ts",
    "functions": [
      "escapeForDriveQuery",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/gmail/label/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/gmail/labels/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/google_calendar/calendars/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/jira/issue/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/tools/jira/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/jira/issues/route.ts",
    "functions": [
      "POST",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/tools/jira/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/jira/projects/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/tools/jira/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/jira/update/route.ts",
    "functions": [
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/tools/jira/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/jira/write/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/tools/jira/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/linear/projects/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@linear/sdk",
      "@linear/sdk",
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/linear/teams/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@linear/sdk",
      "@linear/sdk",
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mail/send/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "resend",
      "zod",
      "@/lib/auth/hybrid",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/microsoft_planner/tasks/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/app/api/auth/oauth/utils",
      "@/tools/microsoft_planner/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/microsoft-teams/channels/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/microsoft-teams/chats/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/microsoft-teams/teams/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mongodb/delete/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "../utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mongodb/execute/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "../utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mongodb/insert/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "../utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mongodb/query/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "../utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mongodb/update/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "../utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mysql/delete/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/mysql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mysql/execute/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/mysql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mysql/insert/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/mysql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mysql/query/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/mysql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/mysql/update/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/mysql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/onedrive/folder/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/onedrive/folders/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils",
      "@/tools/onedrive/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/outlook/folders/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/postgresql/delete/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/postgresql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/postgresql/execute/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/postgresql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/postgresql/insert/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/postgresql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/postgresql/query/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/postgresql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/postgresql/update/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/api/tools/postgresql/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/sharepoint/site/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/sharepoint/sites/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils",
      "@/tools/sharepoint/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/slack/channels/route.ts",
    "functions": [
      "POST",
      "fetchSlackChannels"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/credential-access",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/sms/send/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/auth/hybrid",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/sms/service",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/stagehand/agent/route.ts",
    "functions": [
      "getSchemaObject",
      "formatSchemaForInstructions",
      "extractActionDirectives",
      "processSecureActions",
      "attemptDirectLogin",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@browserbasehq/stagehand",
      "next/server",
      "zod",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/app/api/tools/stagehand/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/stagehand/extract/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@browserbasehq/stagehand",
      "next/server",
      "zod",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/app/api/tools/stagehand/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/wealthbox/item/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/wealthbox/items/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/users/me/api-keys/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "nanoid",
      "next/server",
      "@/lib/api-key/auth",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/users/me/profile/route.ts",
    "functions": [
      "PATCH",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/users/me/settings/route.ts",
    "functions": [
      "GET",
      "PATCH"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "nanoid",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/users/me/usage-limits/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/hybrid",
      "@/lib/billing",
      "@/lib/billing/core/subscription",
      "@/lib/billing/core/usage",
      "@/lib/logs/console/logger",
      "@/app/api/workflows/utils",
      "@/services/queue"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/v1/logs/[id]/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/app/api/v1/logs/meta",
      "@/app/api/v1/middleware"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/[id]/test-url/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/lib/webhooks/test-tokens"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/cleanup/idempotency/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/auth/internal",
      "@/lib/idempotency",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/poll/gmail/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "nanoid",
      "next/server",
      "@/lib/auth/internal",
      "@/lib/logs/console/logger",
      "@/lib/redis",
      "@/lib/webhooks/gmail-polling-service"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/poll/outlook/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "nanoid",
      "next/server",
      "@/lib/auth/internal",
      "@/lib/logs/console/logger",
      "@/lib/redis",
      "@/lib/webhooks/outlook-polling-service"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/test/[id]/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/webhooks/processor",
      "@/lib/webhooks/test-tokens"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/trigger/[path]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/webhooks/trigger/[path]/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/webhooks/processor",
      "@/lib/workflows/db-helpers"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/autolayout/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/autolayout",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/deploy/route.ts",
    "functions": [
      "GET",
      "POST",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "uuid",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/deployed/route.ts",
    "functions": [
      "addNoCacheHeaders",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "@/lib/auth/internal",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/deployments/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/duplicate/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils",
      "@/stores/panel/variables/types",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/execute/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/execute/route.ts",
    "functions": [
      "createFilteredResult",
      "resolveOutputIds",
      "executeWorkflow",
      "GET",
      "POST",
      "OPTIONS"
    ],
    "classes": [
      "UsageLimitError"
    ],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "@trigger.dev/sdk",
      "drizzle-orm",
      "next/server",
      "uuid",
      "zod",
      "@/lib/api-key/service",
      "@/lib/auth",
      "@/lib/billing",
      "@/lib/billing/core/subscription",
      "@/lib/env",
      "@/lib/environment/utils",
      "@/lib/execution/files",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/logging-session",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/triggers",
      "@/lib/workflows/utils",
      "@/app/api/workflows/middleware",
      "@/app/api/workflows/utils",
      "@/executor",
      "@/executor/types",
      "@/serializer",
      "@/services/queue",
      "@/stores/workflows/server-utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/log/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/logging-session",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/lib/utils",
      "@/app/api/workflows/middleware",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/log-webhook/route.ts",
    "functions": [
      "GET",
      "POST",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "uuid",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/state/route.ts",
    "functions": [
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/custom-tools-persistence",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils",
      "@/lib/workflows/validation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/stats/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/status/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils",
      "@/app/api/workflows/middleware",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/variables/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/variables/route.ts",
    "functions": [
      "POST",
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/utils",
      "@/stores/panel/variables/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/public/[id]/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/yaml/convert/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/sim-agent/client",
      "@/lib/utils",
      "@/blocks/registry",
      "@/blocks/types",
      "@/blocks/utils",
      "@/stores/workflows/workflow/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/yaml/export/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/sim-agent/client",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/blocks/registry",
      "@/blocks/types",
      "@/blocks/utils",
      "@/stores/workflows/workflow/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/[id]/api-keys/route.ts",
    "functions": [
      "GET",
      "POST",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "nanoid",
      "next/server",
      "zod",
      "@/lib/api-key/auth",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/[id]/environment/route.ts",
    "functions": [
      "GET",
      "PUT",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/[id]/permissions/route.ts",
    "functions": [
      "GET",
      "PATCH"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/invitations/[invitationId]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/invitations/[invitationId]/route.ts",
    "functions": [
      "GET",
      "DELETE",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@react-email/render",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/components/emails/workspace-invitation",
      "@/lib/auth",
      "@/lib/email/mailer",
      "@/lib/email/utils",
      "@/lib/permissions/utils",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/members/[id]/route.ts",
    "functions": [
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/permissions/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/auth/email/email-auth.tsx",
    "functions": [
      "EmailAuth"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/input-otp",
      "@/components/ui/label",
      "@/lib/email/validation",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/(landing)/components/nav/nav",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/auth/password/password-auth.tsx",
    "functions": [
      "PasswordAuth"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/(landing)/components/nav/nav",
      "@/app/fonts/inter",
      "@/app/fonts/soehne/soehne"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/components/markdown-renderer/markdown-renderer.tsx",
    "functions": [
      "MarkdownRenderer"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react-markdown"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/message/components/markdown-renderer.tsx",
    "functions": [
      "LinkWithPreview",
      "MarkdownRenderer"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react-markdown",
      "remark-gfm",
      "@/components/ui/tooltip"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/chat/components/voice-interface/components/particles.tsx",
    "functions": [
      "ParticlesVisualization"
    ],
    "classes": [
      "SimpleBloomComposer"
    ],
    "exports": {},
    "imports": [
      "react",
      "three",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/base.tsx",
    "functions": [
      "getFileIcon",
      "formatFileSize",
      "KnowledgeBase"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "date-fns",
      "lucide-react",
      "next/navigation",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/checkbox",
      "@/components/ui/search-highlight",
      "@/components/ui/tooltip",
      "@/lib/knowledge/documents/types",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/knowledge/[id]/components",
      "@/app/workspace/[workspaceId]/knowledge/components",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/hooks/use-knowledge",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/page.tsx",
    "functions": [
      "KnowledgeBasePage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/knowledge/[id]/base"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/hooks/use-knowledge-upload.ts",
    "functions": [
      "useKnowledgeUpload"
    ],
    "classes": [
      "KnowledgeUploadError",
      "PresignedUrlError",
      "DirectUploadError",
      "ProcessingError"
    ],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/hooks/use-autocomplete.ts",
    "functions": [
      "autocompleteReducer",
      "useAutocomplete"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/utils/format-date.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "date-fns"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/templates/[id]/page.tsx",
    "functions": [
      "TemplatePage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/navigation",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/templates/[id]/template",
      "@/app/workspace/[workspaceId]/templates/templates"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/templates/[id]/template.tsx",
    "functions": [
      "TemplateDetails"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/templates/templates",
      "@/app/workspace/[workspaceId]/templates/templates",
      "@/app/workspace/[workspaceId]/w/components/workflow-preview/workflow-preview",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/templates/components/navigation-tabs.tsx",
    "functions": [
      "NavigationTabs"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/templates/components/template-card.tsx",
    "functions": [
      "TemplateCardSkeleton",
      "TemplateCard"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/blocks/registry"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/layout.tsx",
    "functions": [
      "WorkflowLayout"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/error"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/page.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/w/[workflowId]/workflow"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/utils.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/blocks"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/workflow.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "reactflow",
      "reactflow/dist/style.css",
      "@/lib/logs/console/logger",
      "@/lib/workflows/triggers",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/control-bar",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/diff-controls",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/error/index",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/floating-controls/floating-controls",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/panel",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/subflow-node",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/training-controls/training-controls",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/trigger-list/trigger-list",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/trigger-warning-dialog",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/workflow-block",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-edge/workflow-edge",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks",
      "@/app/workspace/[workspaceId]/w/[workflowId]/utils",
      "@/blocks",
      "@/hooks/use-collaborative-workflow",
      "@/hooks/use-stream-cleanup",
      "@/hooks/use-workspace-permissions",
      "@/stores/copilot/store",
      "@/stores/execution/store",
      "@/stores/settings/general/store",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/hooks/use-auto-scroll.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/hooks/use-keyboard-shortcuts.ts",
    "functions": [
      "isMacPlatform",
      "getKeyboardShortcutText",
      "useKeyboardShortcuts",
      "useGlobalShortcuts"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/blocks/get-blocks-and-tools.ts",
    "functions": [],
    "classes": [
      "GetBlocksAndToolsClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/blocks/get-blocks-metadata.ts",
    "functions": [],
    "classes": [
      "GetBlocksMetadataClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/blocks/get-trigger-blocks.ts",
    "functions": [],
    "classes": [
      "GetTriggerBlocksClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/examples/get-examples-rag.ts",
    "functions": [],
    "classes": [
      "GetExamplesRagClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/examples/get-operations-examples.ts",
    "functions": [],
    "classes": [
      "GetOperationsExamplesClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/examples/get-trigger-examples.ts",
    "functions": [],
    "classes": [
      "GetTriggerExamplesClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/gdrive/list-files.ts",
    "functions": [],
    "classes": [
      "ListGDriveFilesClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/gdrive/read-file.ts",
    "functions": [],
    "classes": [
      "ReadGDriveFileClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/google/gdrive-request-access.ts",
    "functions": [],
    "classes": [
      "GDriveRequestAccessClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/other/checkoff-todo.ts",
    "functions": [],
    "classes": [
      "CheckoffTodoClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/other/make-api-request.ts",
    "functions": [],
    "classes": [
      "MakeApiRequestClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/other/mark-todo-in-progress.ts",
    "functions": [],
    "classes": [
      "MarkTodoInProgressClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/other/oauth-request-access.ts",
    "functions": [],
    "classes": [
      "OAuthRequestAccessClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/other/plan.ts",
    "functions": [],
    "classes": [
      "PlanClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/other/search-documentation.ts",
    "functions": [],
    "classes": [
      "SearchDocumentationClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/other/search-online.ts",
    "functions": [],
    "classes": [
      "SearchOnlineClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/user/get-environment-variables.ts",
    "functions": [],
    "classes": [
      "GetEnvironmentVariablesClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/user/get-oauth-credentials.ts",
    "functions": [],
    "classes": [
      "GetOAuthCredentialsClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/user/set-environment-variables.ts",
    "functions": [],
    "classes": [
      "SetEnvironmentVariablesClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/workflow/edit-workflow.ts",
    "functions": [],
    "classes": [
      "EditWorkflowClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/workflow/get-global-workflow-variables.ts",
    "functions": [],
    "classes": [
      "GetGlobalWorkflowVariablesClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/workflow/get-user-workflow.ts",
    "functions": [],
    "classes": [
      "GetUserWorkflowClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger",
      "@/lib/workflows/json-sanitizer",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/workflow/get-workflow-console.ts",
    "functions": [],
    "classes": [
      "GetWorkflowConsoleClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/workflow/get-workflow-from-name.ts",
    "functions": [],
    "classes": [
      "GetWorkflowFromNameClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger",
      "@/lib/workflows/json-sanitizer",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/workflow/list-user-workflows.ts",
    "functions": [],
    "classes": [
      "ListUserWorkflowsClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/workflow/run-workflow.ts",
    "functions": [],
    "classes": [
      "RunWorkflowClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/lib/workflow-execution-utils",
      "@/stores/execution/store",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/client/workflow/set-global-workflow-variables.ts",
    "functions": [],
    "classes": [
      "SetGlobalWorkflowVariablesClientTool"
    ],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/lib/copilot/tools/client/base-tool",
      "@/lib/logs/console/logger",
      "@/stores/panel/variables/store",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/blocks/get-blocks-and-tools.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger",
      "@/blocks/registry",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/blocks/get-blocks-metadata-tool.ts",
    "functions": [
      "processSubBlock",
      "resolveAuthType",
      "resolveSubblockOptions",
      "removeNullish",
      "normalizeCondition",
      "splitParametersByOperation",
      "computeBlockLevelInputs",
      "computeOperationLevelInputs",
      "resolveOperationIds",
      "resolveToolIdForOperation"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "fs",
      "path",
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/copilot/tools/shared/schemas",
      "@/lib/logs/console/logger",
      "@/blocks/registry",
      "@/blocks/types",
      "@/blocks/types",
      "@/tools/registry",
      "@/triggers"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/blocks/get-trigger-blocks.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "zod",
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger",
      "@/blocks/registry",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/docs/search-documentation.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/gdrive/list-files.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/gdrive/read-file.ts",
    "functions": [
      "extractIdAndTypeFromUrl"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger",
      "@/app/api/auth/oauth/utils",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/other/make-api-request.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger",
      "@/tools",
      "@/tools/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/other/search-online.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/user/get-environment-variables.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/copilot/auth/permissions",
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/environment/utils",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/user/get-oauth-credentials.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "jwt-decode",
      "@/lib/copilot/auth/permissions",
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/user/set-environment-variables.ts",
    "functions": [
      "normalizeVariables"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "zod",
      "@/lib/copilot/auth/permissions",
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/workflow/edit-workflow.ts",
    "functions": [
      "topologicalSortInserts",
      "createBlockFromParams",
      "normalizeTools",
      "normalizeResponseFormat",
      "addConnectionsAsEdges",
      "applyOperationsToWorkflowState",
      "getCurrentWorkflowStateFromDb"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger",
      "@/lib/workflows/block-outputs",
      "@/lib/workflows/custom-tools-persistence",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/validation",
      "@/blocks/registry",
      "@/blocks/utils",
      "@/stores/workflows/workflow/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/lib/copilot/tools/server/workflow/get-workflow-console.ts",
    "functions": [
      "extractBlockExecutionsFromTraceSpans",
      "normalizeErrorMessage",
      "extractErrorFromExecutionData",
      "extractErrorFromTraceSpans",
      "deriveExecutionErrorSummary"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/copilot/tools/server/base-tool",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/dot-pattern.tsx",
    "functions": [
      "DotPattern"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/landing-canvas.tsx",
    "functions": [
      "LandingCanvas"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "reactflow",
      "reactflow",
      "./dot-pattern",
      "./landing-block/landing-block",
      "./landing-flow"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/landing-flow.tsx",
    "functions": [
      "LandingFlow"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "reactflow",
      "reactflow/dist/style.css",
      "./landing-block/landing-loop-node",
      "./landing-block/landing-node",
      "./landing-canvas",
      "./landing-edge/landing-edge"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/microsoft/file/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/microsoft/files/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/wealthbox/item/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/security/input-validation",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/auth/oauth/wealthbox/items/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/files/execution/[executionId]/[fileId]/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/workflows/execution-file-storage",
      "@/lib/workflows/execution-files-server",
      "@/executor/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/documents/[documentId]/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/documents/[documentId]/route.ts",
    "functions": [
      "GET",
      "PUT",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/knowledge/documents/service",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/tag-definitions/[tagId]/route.ts",
    "functions": [
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "@/lib/auth",
      "@/lib/knowledge/tags/service",
      "@/lib/logs/console/logger",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/mcp/servers/[id]/refresh/route.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/mcp/middleware",
      "@/lib/mcp/service",
      "@/lib/mcp/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/organizations/[id]/invitations/[invitationId]/route.ts",
    "functions": [
      "GET",
      "PUT"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/billing/stripe-client",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/organizations/[id]/members/[memberId]/route.ts",
    "functions": [
      "GET",
      "PUT",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/billing/core/usage",
      "@/lib/billing/stripe-client",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/tools/firecrawl/crawl/[jobId]/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/users/me/api-keys/[id]/route.ts",
    "functions": [
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/users/me/settings/unsubscribe/route.ts",
    "functions": [
      "GET",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/email/mailer",
      "@/lib/email/unsubscribe",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/v1/logs/executions/[executionId]/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/app/api/v1/logs/meta",
      "@/app/api/v1/middleware"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/chat/status/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/deployments/[version]/route.ts",
    "functions": [
      "GET",
      "PATCH"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/log-webhook/[webhookId]/route.ts",
    "functions": [
      "PUT",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/log-webhook/test/route.ts",
    "functions": [
      "generateSignature",
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "uuid",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/[id]/api-keys/[keyId]/route.ts",
    "functions": [
      "PUT",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workspaces/[id]/metrics/executions/route.ts",
    "functions": [
      "GET"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/document.tsx",
    "functions": [
      "getStatusBadgeStyles",
      "truncateContent",
      "Document"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/components",
      "@/app/workspace/[workspaceId]/knowledge/[id]/components",
      "@/app/workspace/[workspaceId]/knowledge/components",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/hooks/use-knowledge",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/page.tsx",
    "functions": [
      "DocumentChunksPage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/document"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/base-overview/base-overview.tsx",
    "functions": [
      "BaseOverview"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/link",
      "next/navigation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/create-modal/create-modal.tsx",
    "functions": [
      "CreateModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@hookform/resolvers/zod",
      "lucide-react",
      "next/navigation",
      "react-hook-form",
      "zod",
      "@/components/ui/alert",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/progress",
      "@/components/ui/textarea",
      "@/lib/logs/console/logger",
      "@/lib/uploads/validation",
      "@/app/workspace/[workspaceId]/knowledge/components",
      "@/app/workspace/[workspaceId]/knowledge/hooks/use-knowledge-upload",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/document-tag-entry/document-tag-entry.tsx",
    "functions": [
      "DocumentTagEntry"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/knowledge/consts",
      "@/lib/logs/console/logger",
      "@/hooks/use-knowledge-base-tag-definitions",
      "@/hooks/use-next-available-slot",
      "@/hooks/use-tag-definitions"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/empty-state-card/empty-state-card.tsx",
    "functions": [
      "EmptyStateCard"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/icons/document-icons.tsx",
    "functions": [
      "getDocumentIcon"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/knowledge-header/knowledge-header.tsx",
    "functions": [
      "KnowledgeHeader"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "next/link",
      "@/components/ui/button",
      "@/components/ui/dropdown-menu",
      "@/app/workspace/[workspaceId]/knowledge/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/primary-button/primary-button.tsx",
    "functions": [
      "PrimaryButton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/button",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/search-input/search-input.tsx",
    "functions": [
      "SearchInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/skeletons/knowledge-base-card-skeleton.tsx",
    "functions": [
      "KnowledgeBaseCardSkeleton",
      "KnowledgeBaseCardSkeletonGrid"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/skeletons/table-skeleton.tsx",
    "functions": [
      "DocumentTableRowSkeleton",
      "ChunkTableRowSkeleton",
      "DocumentTableSkeleton",
      "ChunkTableSkeleton"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/tag-input/tag-input.tsx",
    "functions": [
      "TagInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/collapsible",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/lib/knowledge/consts",
      "@/hooks/use-knowledge-base-tag-definitions"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/components/workspace-selector/workspace-selector.tsx",
    "functions": [
      "WorkspaceSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/dropdown-menu",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/dashboard/controls.tsx",
    "functions": [
      "Controls"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/fonts/soehne/soehne",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/timeline"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/dashboard/kpis.tsx",
    "functions": [
      "KPIs"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/dashboard/line-chart.tsx",
    "functions": [
      "LineChart"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/tooltip",
      "../../utils/format-date"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/dashboard/status-bar.tsx",
    "functions": [
      "StatusBar"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/dashboard/utils.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/dashboard/workflow-details.tsx",
    "functions": [
      "WorkflowDetails"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/logs/components/dashboard/line-chart",
      "@/app/workspace/[workspaceId]/logs/components/dashboard/utils",
      "@/app/workspace/[workspaceId]/logs/utils/format-date",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/dashboard/workflows-list.tsx",
    "functions": [
      "WorkflowsList"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/scroll-area",
      "@/app/workspace/[workspaceId]/logs/components/dashboard/status-bar",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/filters.tsx",
    "functions": [
      "Filters"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui",
      "@/lib/environment",
      "@/app/workspace/[workspaceId]/logs/components/filters/components",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/frozen-canvas/frozen-canvas-modal.tsx",
    "functions": [
      "FrozenCanvasModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/logs/components/frozen-canvas/frozen-canvas"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/frozen-canvas/frozen-canvas.tsx",
    "functions": [
      "ExpandableDataSection",
      "formatExecutionData",
      "getCurrentIterationData",
      "PinnedLogs",
      "FrozenCanvas"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/badge",
      "@/components/ui/card",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/components/workflow-preview/workflow-preview",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/frozen-canvas/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/search/search.tsx",
    "functions": [
      "AutocompleteSearch"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/lib/logs/query-parser",
      "@/lib/logs/search-suggestions",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/logs/hooks/use-autocomplete"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/sidebar/sidebar.tsx",
    "functions": [
      "Sidebar"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/copy-button",
      "@/components/ui/scroll-area",
      "@/components/ui/tooltip",
      "@/lib/billing/constants",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/logs/components/frozen-canvas/frozen-canvas-modal",
      "@/app/workspace/[workspaceId]/logs/components/sidebar/components/file-download",
      "@/app/workspace/[workspaceId]/logs/components/sidebar/components/markdown-renderer",
      "@/app/workspace/[workspaceId]/logs/components/tool-calls/tool-calls-display",
      "@/app/workspace/[workspaceId]/logs/components/trace-spans/trace-spans",
      "@/app/workspace/[workspaceId]/logs/utils/format-date",
      "@/providers/utils",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/tool-calls/tool-calls-display.tsx",
    "functions": [
      "ToolCallsDisplay",
      "ToolCallItem",
      "isValidDate",
      "formatDateWithMilliseconds"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/copy-button",
      "@/lib/utils",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/trace-spans/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/trace-spans/trace-spans.tsx",
    "functions": [
      "TraceSpans"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/app/workspace/[workspaceId]/logs/components/trace-spans",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/trace-spans/utils.ts",
    "functions": [
      "getSpanKey",
      "mergeTraceSpanChildren",
      "normalizeChildWorkflowSpan",
      "transformBlockData",
      "formatDurationDisplay"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/utils",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/diff-controls.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/lib/logs/console/logger",
      "@/stores/copilot/store",
      "@/stores/workflow-diff",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/trigger-warning-dialog.tsx",
    "functions": [
      "TriggerWarningDialog"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/alert-dialog"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/hooks/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes.ts",
    "functions": [
      "useAccessibleReferencePrefixes"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "zustand/shallow",
      "@/lib/block-path-calculator",
      "@/lib/workflows/references",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-block-connections.ts",
    "functions": [
      "parseResponseFormatSafely",
      "extractFieldsFromSchema",
      "useBlockConnections"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "zustand/shallow",
      "@/lib/block-path-calculator",
      "@/lib/logs/console/logger",
      "@/lib/workflows/block-outputs",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-current-workflow.ts",
    "functions": [
      "useCurrentWorkflow"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "reactflow",
      "zustand/shallow",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/types",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-presence.ts",
    "functions": [
      "usePresence"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/contexts/socket-context"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-wand.ts",
    "functions": [
      "buildContextInfo",
      "useWand"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-workflow-execution.ts",
    "functions": [
      "isRecord",
      "sanitizeMessage",
      "normalizeErrorMessage",
      "isExecutionResult",
      "extractExecutionResult",
      "useWorkflowExecution"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "uuid",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/lib/tokenization",
      "@/lib/workflows/triggers",
      "@/blocks/types",
      "@/executor",
      "@/executor/types",
      "@/serializer",
      "@/serializer/types",
      "@/stores/execution/store",
      "@/stores/panel/console/store",
      "@/stores/panel/variables/store",
      "@/stores/settings/environment/store",
      "@/stores/settings/general/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/utils",
      "./use-current-workflow"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/lib/workflow-execution-utils.ts",
    "functions": [
      "getWorkflowExecutionContext",
      "executeWorkflowWithLogging",
      "persistExecutionLogs",
      "executeWorkflowWithFullLogging"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "uuid",
      "@/lib/logs/console/logger",
      "@/lib/logs/execution/trace-spans/trace-spans",
      "@/blocks/types",
      "@/executor",
      "@/executor/types",
      "@/serializer",
      "@/serializer/types",
      "@/stores/execution/store",
      "@/stores/panel/variables/store",
      "@/stores/settings/environment/store",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/utils/auto-layout.ts",
    "functions": [
      "applyAutoLayoutToWorkflow",
      "applyAutoLayoutAndUpdateStore",
      "applyAutoLayoutToBlocks"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/search-modal/search-modal.tsx",
    "functions": [
      "SearchModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-dialog",
      "@radix-ui/react-visually-hidden",
      "lucide-react",
      "next/navigation",
      "@/components/ui/dialog",
      "@/components/ui/input",
      "@/lib/branding/branding",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/hooks/use-keyboard-shortcuts",
      "@/blocks",
      "./hooks/use-search-navigation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/sidebar.tsx",
    "functions": [
      "Sidebar"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui",
      "@/lib/auth-client",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/naming",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/app/workspace/[workspaceId]/w/components/search-modal/search-modal",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/workspace-selector/components/invite-modal/invite-modal",
      "@/app/workspace/[workspaceId]/w/hooks/use-auto-scroll",
      "@/app/workspace/[workspaceId]/w/hooks/use-keyboard-shortcuts",
      "@/hooks/use-knowledge",
      "@/stores/subscription/store",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/registry/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/workflow-preview/workflow-preview.tsx",
    "functions": [
      "WorkflowPreview"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lodash",
      "reactflow",
      "reactflow/dist/style.css",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/subflow-node",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/workflow-block",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-edge/workflow-edge",
      "@/blocks",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/landing-block/landing-block.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "./tag"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/landing-block/landing-loop-node.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "./loop-block"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/landing-block/landing-node.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "reactflow",
      "./landing-block"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/landing-block/loop-block.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/landing-block/tag.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/(landing)/components/hero/components/landing-canvas/landing-edge/landing-edge.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "reactflow"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/documents/[documentId]/chunks/route.ts",
    "functions": [
      "GET",
      "POST",
      "PATCH"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/knowledge/chunks/service",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/api/auth/oauth/utils",
      "@/app/api/knowledge/utils",
      "@/providers/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/documents/[documentId]/tag-definitions/route.ts",
    "functions": [
      "GET",
      "POST",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/knowledge/consts",
      "@/lib/knowledge/tags/service",
      "@/lib/knowledge/tags/types",
      "@/lib/logs/console/logger",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/users/me/subscription/[id]/transfer/route.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/api/__test-utils__/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/users/me/subscription/[id]/transfer/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "@sim/db/schema",
      "drizzle-orm",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/deployments/[version]/activate/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/workflows/[id]/deployments/[version]/revert/route.ts",
    "functions": [
      "POST"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@sim/db",
      "drizzle-orm",
      "next/server",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/lib/workflows/utils",
      "@/app/api/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/components/document-loading.tsx",
    "functions": [
      "DocumentLoading"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/app/workspace/[workspaceId]/knowledge/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/components/action-bar/action-bar.tsx",
    "functions": [
      "ActionBar"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "framer-motion",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/components/knowledge-base-loading/knowledge-base-loading.tsx",
    "functions": [
      "KnowledgeBaseLoading"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/app/workspace/[workspaceId]/knowledge/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/components/upload-modal/upload-modal.tsx",
    "functions": [
      "UploadModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/label",
      "@/components/ui/progress",
      "@/lib/logs/console/logger",
      "@/lib/uploads/validation",
      "@/app/workspace/[workspaceId]/knowledge/components",
      "@/app/workspace/[workspaceId]/knowledge/hooks/use-knowledge-upload"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/components/filter-section.tsx",
    "functions": [
      "FilterSection"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/components/folder.tsx",
    "functions": [
      "FolderFilter"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/dropdown-menu",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/shared",
      "@/stores/folders/store",
      "@/stores/logs/filters/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/components/level.tsx",
    "functions": [
      "Level"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/dropdown-menu",
      "@/stores/logs/filters/store",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/components/shared.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/components/timeline.tsx",
    "functions": [
      "Timeline"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/dropdown-menu",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/shared",
      "@/stores/logs/filters/store",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/components/trigger.tsx",
    "functions": [
      "Trigger"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/dropdown-menu",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/shared",
      "@/stores/logs/filters/store",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/filters/components/workflow.tsx",
    "functions": [
      "Workflow"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/dropdown-menu",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/shared",
      "@/stores/logs/filters/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/sidebar/components/file-download.tsx",
    "functions": [
      "FileDownload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/sidebar/components/markdown-renderer.tsx",
    "functions": [
      "LinkWithPreview",
      "LogMarkdownRenderer"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react-markdown",
      "remark-gfm",
      "@/components/ui/tooltip"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/trace-spans/components/block-data-display.tsx",
    "functions": [
      "BlockDataDisplay"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/app/workspace/[workspaceId]/logs/components/trace-spans/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/trace-spans/components/collapsible-input-output.tsx",
    "functions": [
      "CollapsibleInputOutput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/app/workspace/[workspaceId]/logs/components/trace-spans",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/logs/components/trace-spans/components/trace-span-item.tsx",
    "functions": [
      "TraceSpanItem"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/logs/components/trace-spans",
      "@/blocks/registry",
      "@/providers/utils",
      "@/stores/logs/filters/types",
      "@/tools/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/control-bar.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/control-bar.tsx",
    "functions": [
      "ControlBar"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui",
      "@/lib/auth-client",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-workflow-execution",
      "@/app/workspace/[workspaceId]/w/hooks/use-keyboard-shortcuts",
      "@/stores/folders/store",
      "@/stores/operation-queue/store",
      "@/stores/panel/store",
      "@/stores/settings/general/store",
      "@/stores/subscription/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/error/index.tsx",
    "functions": [
      "ErrorUI",
      "NextError",
      "NextGlobalError"
    ],
    "classes": [
      "ErrorBoundary"
    ],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/card",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/control-bar",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/panel"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/floating-controls/floating-controls.tsx",
    "functions": [
      "FloatingControls"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "reactflow",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/auth-client",
      "@/lib/utils",
      "@/hooks/use-collaborative-workflow",
      "@/stores/settings/general/store",
      "@/stores/undo-redo",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/panel.tsx",
    "functions": [
      "Panel"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/dropdown-menu",
      "@/components/ui/scroll-area",
      "@/components/ui/tooltip",
      "@/lib/browser-storage",
      "@/lib/logs/console/logger",
      "@/stores/copilot/store",
      "@/stores/panel/chat/store",
      "@/stores/panel/console/store",
      "@/stores/panel/store",
      "@/stores/workflows/registry/store",
      "./components/chat/chat",
      "./components/console/console",
      "./components/copilot/copilot",
      "./components/variables/variables"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/skeleton-loading/skeleton-loading.tsx",
    "functions": [
      "SkeletonLoading",
      "SkeletonPanelWrapper"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/skeleton"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/subflow-node.test.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/subflow-node"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/subflow-node.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "reactflow",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/card",
      "@/lib/utils",
      "@/lib/workflows/diff/types",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/components/iteration-badges/iteration-badges",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks",
      "@/hooks/use-collaborative-workflow"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/training-controls/training-controls.tsx",
    "functions": [
      "TrainingControls"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/env",
      "@/stores/copilot-training/store",
      "@/stores/settings/general/store",
      "./training-floating-button",
      "./training-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/training-controls/training-floating-button.tsx",
    "functions": [
      "TrainingFloatingButton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/stores/copilot-training/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/training-controls/training-modal.tsx",
    "functions": [
      "TrainingModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/checkbox",
      "@/components/ui/dialog",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/scroll-area",
      "@/components/ui/tabs",
      "@/components/ui/textarea",
      "@/lib/utils",
      "@/lib/workflows/json-sanitizer",
      "@/lib/workflows/training/compute-edit-sequence",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-current-workflow",
      "@/stores/copilot-training/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/trigger-list/trigger-list.tsx",
    "functions": [
      "TriggerList"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/input",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/trigger-utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/wand-prompt-bar/wand-prompt-bar.tsx",
    "functions": [
      "WandPromptBar"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/workflow-block.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "reactflow",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/card",
      "@/components/ui/tooltip",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/schedules/utils",
      "@/lib/utils",
      "@/lib/workflows/diff/types",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/blocks/types",
      "@/hooks/use-collaborative-workflow",
      "@/stores/execution/store",
      "@/stores/workflow-diff",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store",
      "../../hooks",
      "./components/action-bar/action-bar",
      "./components/connection-blocks/connection-blocks",
      "./components/sub-block/hooks/use-sub-block-value",
      "./components/sub-block/sub-block"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-edge/workflow-edge.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "reactflow",
      "@/lib/workflows/diff/types",
      "@/stores/workflow-diff"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-text-editor/workflow-applier.ts",
    "functions": [
      "applyWorkflowDiff",
      "previewWorkflowDiff"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-text-editor/workflow-exporter.ts",
    "functions": [
      "getSubBlockValues",
      "generateFullWorkflowData",
      "exportWorkflow",
      "parseWorkflowContent",
      "convertBetweenFormats"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/logs/console/logger",
      "@/stores/workflows/json/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store",
      "./workflow-text-editor"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-text-editor/workflow-text-editor-modal.tsx",
    "functions": [
      "WorkflowTextEditorModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-text-editor/workflow-applier",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-text-editor/workflow-exporter",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-text-editor/workflow-text-editor",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-text-editor/workflow-text-editor.tsx",
    "functions": [
      "WorkflowTextEditor"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/alert",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "../workflow-block/components/sub-block/components/tool-input/components/code-editor/code-editor"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/search-modal/hooks/use-search-navigation.ts",
    "functions": [
      "useSearchNavigation"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/api/knowledge/[id]/documents/[documentId]/chunks/[chunkId]/route.ts",
    "functions": [
      "GET",
      "PUT",
      "DELETE"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "crypto",
      "next/server",
      "zod",
      "@/lib/auth",
      "@/lib/knowledge/chunks/service",
      "@/lib/logs/console/logger",
      "@/app/api/knowledge/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/components/create-chunk-modal/create-chunk-modal.tsx",
    "functions": [
      "CreateChunkModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/label",
      "@/components/ui/textarea",
      "@/lib/logs/console/logger",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/components/delete-chunk-modal/delete-chunk-modal.tsx",
    "functions": [
      "DeleteChunkModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/alert-dialog",
      "@/lib/logs/console/logger",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/knowledge/[id]/[documentId]/components/edit-chunk-modal/edit-chunk-modal.tsx",
    "functions": [
      "EditChunkModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/label",
      "@/components/ui/textarea",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/loop/loop-config.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/parallel/parallel-config.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/create-menu/create-menu.tsx",
    "functions": [
      "CreateMenu"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/naming",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/stores/folders/store",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/json/importer",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/floating-navigation/floating-navigation.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/navigation-item/navigation-item",
      "@/app/workspace/[workspaceId]/w/hooks/use-keyboard-shortcuts"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/folder-tree/folder-tree.tsx",
    "functions": [
      "FolderSection",
      "useDragHandlers",
      "FolderTree"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "clsx",
      "next/navigation",
      "@/components/ui/skeleton",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/folder-tree/components/folder-item",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/folder-tree/components/workflow-item",
      "@/stores/folders/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/registry/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/help-modal/help-modal.tsx",
    "functions": [
      "HelpModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@hookform/resolvers/zod",
      "browser-image-compression",
      "lucide-react",
      "next/image",
      "react-hook-form",
      "zod",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/select",
      "@/components/ui/textarea",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/keyboard-shortcut/keyboard-shortcut.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/knowledge-base-tags/knowledge-base-tags.tsx",
    "functions": [
      "KnowledgeBaseTags"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/components/ui/alert-dialog",
      "@/components/ui/scroll-area",
      "@/lib/knowledge/consts",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/hooks/use-knowledge-base-tag-definitions",
      "./components/document-list"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/knowledge-tags/knowledge-tags.tsx",
    "functions": [
      "KnowledgeTags"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/components/ui/scroll-area",
      "@/lib/knowledge/consts",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/knowledge/components/document-tag-entry/document-tag-entry",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/hooks/use-knowledge-base-tag-definitions",
      "@/hooks/use-next-available-slot",
      "@/hooks/use-tag-definitions",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/logs-filters/logs-filters.tsx",
    "functions": [
      "LogsFilters"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/scroll-area",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/filter-section",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/folder",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/level",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/timeline",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/trigger",
      "@/app/workspace/[workspaceId]/logs/components/filters/components/workflow",
      "@/stores/logs/filters/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/navigation-item/navigation-item.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/settings-modal.tsx",
    "functions": [
      "SettingsModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components",
      "@/stores/organization",
      "@/stores/settings/general/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/subscription-modal/subscription-modal.tsx",
    "functions": [
      "SubscriptionModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/lib/subscription/upgrade",
      "@/lib/utils",
      "@/stores/organization",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/toolbar/toolbar.tsx",
    "functions": [
      "Toolbar"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/input",
      "@/components/ui/scroll-area",
      "@/components/ui/tabs",
      "@/lib/workflows/trigger-utils",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/toolbar/components/toolbar-block/toolbar-block",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/toolbar/components/toolbar-loop-block/toolbar-loop-block",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/toolbar/components/toolbar-parallel-block/toolbar-parallel-block",
      "@/hooks/use-user-permissions"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/usage-indicator/usage-indicator.tsx",
    "functions": [
      "UsageIndicator"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui",
      "@/lib/utils",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/workflow-context-menu/workflow-context-menu.tsx",
    "functions": [
      "WorkflowContextMenu"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/dropdown-menu",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/workflow-list/workflow-list.tsx",
    "functions": [
      "WorkflowItem",
      "WorkflowList"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "clsx",
      "next/link",
      "next/navigation",
      "@/components/ui/skeleton",
      "@/lib/auth-client",
      "@/stores/workflows/registry/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/workspace-header/workspace-header.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/skeleton",
      "@/components/ui/tooltip",
      "@/lib/auth-client"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/workspace-selector/workspace-selector.tsx",
    "functions": [
      "WorkspaceSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/scroll-area",
      "@/components/ui/skeleton",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/workspace-selector/components/invite-modal/invite-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/deploy-modal.tsx",
    "functions": [
      "DeployModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/db-helpers",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/chat-deploy",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deployment-controls/components/deployed-workflow-modal",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deployment-controls/deployment-controls.test.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deployment-controls/deployment-controls.tsx",
    "functions": [
      "DeploymentControls"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components",
      "@/hooks/use-user-permissions",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/export-controls/export-controls.tsx",
    "functions": [
      "ExportControls"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/stores/workflows/json/store",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/template-modal/template-modal.tsx",
    "functions": [
      "TemplateModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@hookform/resolvers/zod",
      "lucide-react",
      "react-hook-form",
      "zod",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/color-picker",
      "@/components/ui/dialog",
      "@/components/ui/form",
      "@/components/ui/input",
      "@/components/ui/popover",
      "@/components/ui/select",
      "@/components/ui/skeleton",
      "@/components/ui/textarea",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/state-builder",
      "@/app/workspace/[workspaceId]/templates/templates"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/user-avatar-stack/user-avatar-stack.tsx",
    "functions": [
      "UserAvatarStack"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/user-avatar-stack/components/connection-status/connection-status",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/user-avatar-stack/components/user-avatar/user-avatar",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-presence",
      "@/hooks/use-collaborative-workflow"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/webhook-settings/webhook-settings.tsx",
    "functions": [
      "WebhookSettings"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/stores/logs/filters/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/chat/chat.tsx",
    "functions": [
      "Chat"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/scroll-area",
      "@/lib/logs/console/logger",
      "@/lib/response-format",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/chat/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-workflow-execution",
      "@/executor/types",
      "@/stores/execution/store",
      "@/stores/panel/chat/store",
      "@/stores/panel/console/store",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/console.tsx",
    "functions": [
      "Console"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/scroll-area",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components",
      "@/stores/panel/console/store",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/copilot.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/loading-agent",
      "@/components/ui/scroll-area",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/user-input/user-input",
      "@/stores/copilot/preview-store",
      "@/stores/copilot/store",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/variables/variables.tsx",
    "functions": [
      "Variables"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "prismjs",
      "prismjs/components/prism-javascript",
      "prismjs/themes/prism.css",
      "react-simple-code-editor",
      "@/components/ui",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/hooks/use-collaborative-workflow",
      "@/stores/panel/variables/store",
      "@/stores/panel/variables/types",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/components/iteration-badges/iteration-badges.test.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "vitest"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/components/iteration-badges/iteration-badges.tsx",
    "functions": [
      "IterationBadges"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "prismjs",
      "react-simple-code-editor",
      "@/components/ui/badge",
      "@/components/ui/input",
      "@/components/ui/popover",
      "@/components/ui/tag-dropdown",
      "@/lib/utils",
      "@/hooks/use-collaborative-workflow",
      "@/stores/workflows/workflow/store",
      "prismjs/components/prism-javascript",
      "prismjs/themes/prism.css"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/action-bar/action-bar.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/hooks/use-collaborative-workflow",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/connection-blocks/connection-blocks.tsx",
    "functions": [
      "ConnectionBlocks"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/card",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-block-connections",
      "@/blocks"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/sub-block.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/utils",
      "@/lib/workflows/diff/types",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components",
      "@/blocks/types",
      "./components/document-tag-entry/document-tag-entry",
      "./components/e2b-switch",
      "./components/knowledge-tag-filters/knowledge-tag-filters"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/folder-tree/components/folder-item.tsx",
    "functions": [
      "FolderItem"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "clsx",
      "lucide-react",
      "next/navigation",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/stores/folders/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/folder-tree/components/workflow-item.tsx",
    "functions": [
      "lightenColor",
      "WorkflowItem"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "clsx",
      "lucide-react",
      "next/link",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/stores/folders/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/registry/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/knowledge-base-tags/components/document-list.tsx",
    "functions": [
      "DocumentList"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/knowledge/components/icons/document-icons"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deployment-controls/components/deployed-workflow-card.tsx",
    "functions": [
      "DeployedWorkflowCard"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/card",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/components/workflow-preview/workflow-preview",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deployment-controls/components/deployed-workflow-modal.tsx",
    "functions": [
      "DeployedWorkflowModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deployment-controls/components/deployed-workflow-card",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/utils",
      "@/stores/workflows/workflow/store",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/chat/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/checkbox-list.tsx",
    "functions": [
      "CheckboxList"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/checkbox",
      "@/components/ui/label",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/code.tsx",
    "functions": [
      "Code"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "next/navigation",
      "prismjs",
      "prismjs/components/prism-javascript",
      "prismjs/themes/prism.css",
      "prismjs/components/prism-python",
      "react-simple-code-editor",
      "@/components/ui/button",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/tag-dropdown",
      "@/lib/execution/languages",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/lib/workflows/references",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/wand-prompt-bar/wand-prompt-bar",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-wand",
      "@/blocks/types",
      "@/hooks/use-collaborative-workflow",
      "@/hooks/use-tag-selection",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/combobox.tsx",
    "functions": [
      "ComboBox"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "reactflow",
      "@/components/ui/button",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/tag-dropdown",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/blocks/types",
      "@/hooks/use-tag-selection"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/condition-input.tsx",
    "functions": [
      "ConditionInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "next/navigation",
      "prismjs",
      "prismjs/components/prism-javascript",
      "prismjs/themes/prism.css",
      "react-simple-code-editor",
      "reactflow",
      "@/components/ui/button",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/tag-dropdown",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/hooks/use-tag-selection",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/dropdown.tsx",
    "functions": [
      "Dropdown"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/executor/handlers/response/response-handler"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/e2b-switch.tsx",
    "functions": [
      "E2BSwitch"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui",
      "@/components/ui/switch",
      "@/lib/env",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/eval-input.tsx",
    "functions": [
      "EvalInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/tooltip",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-upload.tsx",
    "functions": [
      "FileUpload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/progress",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/grouped-checkbox-list.tsx",
    "functions": [
      "GroupedCheckboxList"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/checkbox",
      "@/components/ui/dialog",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/long-input.tsx",
    "functions": [
      "LongInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "reactflow",
      "@/components/ui/button",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/formatted-text",
      "@/components/ui/tag-dropdown",
      "@/components/ui/textarea",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/wand-prompt-bar/wand-prompt-bar",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-wand",
      "@/blocks/types",
      "@/hooks/use-tag-selection"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/short-input.tsx",
    "functions": [
      "ShortInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "reactflow",
      "@/components/ui/button",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/tag-dropdown",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/wand-prompt-bar/wand-prompt-bar",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-wand",
      "@/blocks/types",
      "@/hooks/use-tag-selection"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/slider-input.tsx",
    "functions": [
      "SliderInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/slider",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/switch.tsx",
    "functions": [
      "Switch"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/label",
      "@/components/ui/switch",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/table.tsx",
    "functions": [
      "Table"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/tag-dropdown",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/time-input.tsx",
    "functions": [
      "TimeInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/popover",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-depends-on-gate.ts",
    "functions": [
      "useDependsOnGate"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/blocks/types",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-foreign-credential.ts",
    "functions": [
      "useForeignCredential"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value.ts",
    "functions": [
      "useSubBlockValue"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lodash",
      "@/lib/logs/console/logger",
      "@/hooks/use-collaborative-workflow",
      "@/providers/utils",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/account/account.tsx",
    "functions": [
      "Account"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/image",
      "next/navigation",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/skeleton",
      "@/lib/auth-client",
      "@/lib/branding/branding",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/account/hooks/use-profile-picture-upload",
      "@/stores"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/api-keys/api-keys.tsx",
    "functions": [
      "ApiKeyDisplay",
      "ApiKeys",
      "ApiKeySkeleton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/skeleton",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/copilot/copilot.tsx",
    "functions": [
      "Copilot",
      "CopilotKeySkeleton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/stores/copilot/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/credentials/credentials.tsx",
    "functions": [
      "Credentials",
      "ConnectionSkeleton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/skeleton",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/lib/oauth/oauth",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/environment/environment.tsx",
    "functions": [
      "EnvironmentVariables"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/skeleton",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/stores/settings/environment/store",
      "@/stores/settings/environment/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/general/general.tsx",
    "functions": [
      "General"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/label",
      "@/components/ui/select",
      "@/components/ui/skeleton",
      "@/components/ui/switch",
      "@/components/ui/tooltip",
      "@/lib/env",
      "@/stores/settings/general/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/mcp/mcp.tsx",
    "functions": [
      "MCP",
      "McpServerSkeleton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/formatted-text",
      "@/lib/logs/console/logger",
      "@/lib/mcp/types",
      "@/hooks/use-mcp-server-test",
      "@/hooks/use-mcp-tools",
      "@/stores/mcp-servers/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/privacy/privacy.tsx",
    "functions": [
      "Privacy"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/label",
      "@/components/ui/skeleton",
      "@/components/ui/switch",
      "@/components/ui/tooltip",
      "@/stores/settings/general/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/settings-navigation/settings-navigation.tsx",
    "functions": [
      "SettingsNavigation"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/lib/auth-client",
      "@/lib/env",
      "@/lib/environment",
      "@/lib/utils",
      "@/stores/organization",
      "@/stores/settings/general/store",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/shared/usage-header.tsx",
    "functions": [
      "UsageHeader"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/sso/sso.tsx",
    "functions": [
      "SSO",
      "SsoSkeleton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/components/ui/skeleton",
      "@/lib/auth-client",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/stores/organization"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/plan-configs.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "./components/plan-card"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/subscription-permissions.ts",
    "functions": [
      "getSubscriptionPermissions",
      "getVisiblePlans"
    ],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/subscription.tsx",
    "functions": [
      "SubscriptionSkeleton",
      "Subscription",
      "BillingUsageNotificationsToggle"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui",
      "@/lib/auth-client",
      "@/lib/subscription/upgrade",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/shared/usage-header",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/plan-configs",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/subscription-permissions",
      "@/stores/organization",
      "@/stores/settings/general/store",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/team-management.tsx",
    "functions": [
      "TeamManagement"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui",
      "@/lib/auth-client",
      "@/lib/billing/constants",
      "@/lib/billing/subscriptions/utils",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components",
      "@/stores/organization",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/toolbar/components/toolbar-block/toolbar-block.tsx",
    "functions": [
      "ToolbarBlock"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/toolbar/components/toolbar-loop-block/toolbar-loop-block.tsx",
    "functions": [
      "LoopToolbarItem"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/loop/loop-config"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/toolbar/components/toolbar-parallel-block/toolbar-parallel-block.tsx",
    "functions": [
      "ParallelToolbarItem"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/subflows/parallel/parallel-config"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/workspace-selector/components/invite-modal/invite-modal.tsx",
    "functions": [
      "InviteModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/skeleton",
      "@/components/ui/tooltip",
      "@/lib/auth-client",
      "@/lib/email/validation",
      "@/lib/logs/console/logger",
      "@/lib/permissions/utils",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider",
      "@/hooks/use-workspace-permissions",
      "@/stores/constants"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/chat-deploy.tsx",
    "functions": [
      "ChatDeploy",
      "LoadingSkeleton"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/components/auth-selector",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/components/identifier-input",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/components/success-view",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-chat-deployment",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-chat-form",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/chat/components/output-select/output-select"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/deploy-form/deploy-form.tsx",
    "functions": [
      "DeployForm"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@hookform/resolvers/zod",
      "lucide-react",
      "next/navigation",
      "react-hook-form",
      "zod",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/form",
      "@/components/ui/input",
      "@/components/ui/select",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/deployment-info/deployment-info.tsx",
    "functions": [
      "DeploymentInfo"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/deployment-info/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deployment-controls/components/deployed-workflow-modal",
      "@/stores/workflows/workflow/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/image-selector/image-selector.tsx",
    "functions": [
      "ImageSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/label",
      "@/lib/logs/console/logger",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/user-avatar-stack/components/connection-status/connection-status.tsx",
    "functions": [
      "ConnectionStatus"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/app/workspace/[workspaceId]/providers/workspace-permissions-provider"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/user-avatar-stack/components/user-avatar/user-avatar.tsx",
    "functions": [
      "generateGradient",
      "UserAvatar"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/tooltip"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/chat/components/chat-file-upload/chat-file-upload.tsx",
    "functions": [
      "ChatFileUpload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/chat/components/chat-message/chat-message.tsx",
    "functions": [
      "ChatMessage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/chat/components/output-select/output-select.tsx",
    "functions": [
      "OutputSelect"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "react-dom",
      "@/lib/response-format",
      "@/lib/utils",
      "@/blocks",
      "@/stores/workflow-diff/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components/code-display/code-display.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "prismjs",
      "prismjs/components/prism-javascript",
      "prismjs/themes/prism.css"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components/console-entry/console-entry.tsx",
    "functions": [
      "ConsoleEntry"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "date-fns",
      "lucide-react",
      "next/image",
      "@/components/ui/button",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components",
      "@/blocks",
      "@/stores/panel/console/types",
      "@/stores/settings/general/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components/json-view/json-view.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/button",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/checkpoint-panel/checkpoint-panel.tsx",
    "functions": [
      "CheckpointPanel"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "date-fns",
      "lucide-react",
      "@/components/ui",
      "@/stores/copilot/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/context-usage-pill/context-usage-pill.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/copilot-message/copilot-message.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/lib/copilot/inline-tool-call",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/copilot-message/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/copilot-message/components/markdown-renderer",
      "@/stores/copilot/preview-store",
      "@/stores/copilot/store",
      "@/stores/copilot/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/todo-list/todo-list.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/user-input/user-input.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui",
      "@/lib/auth-client",
      "@/lib/environment",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/stores/copilot/store",
      "@/stores/copilot/types",
      "@/stores/workflows/workflow/store",
      "../context-usage-pill/context-usage-pill"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/welcome/welcome.tsx",
    "functions": [
      "CopilotWelcome"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/channel-selector/channel-selector-input.tsx",
    "functions": [
      "ChannelSelectorInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/components/ui/tooltip",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/channel-selector/components/slack-channel-selector",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-depends-on-gate",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-foreign-credential",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/credential-selector.tsx",
    "functions": [
      "CredentialSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types",
      "@/hooks/use-collaborative-workflow",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/document-selector/document-selector.tsx",
    "functions": [
      "DocumentSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-depends-on-gate",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/document-tag-entry/document-tag-entry.tsx",
    "functions": [
      "DocumentTagEntry"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/tag-dropdown",
      "@/lib/knowledge/consts",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/blocks/types",
      "@/hooks/use-knowledge-base-tag-definitions",
      "@/hooks/use-tag-selection"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/file-selector-input.tsx",
    "functions": [
      "FileSelectorInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "next/navigation",
      "@/components/ui/tooltip",
      "@/lib/env",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-depends-on-gate",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-foreign-credential",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types",
      "@/hooks/use-collaborative-workflow",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/folder-selector/folder-selector.tsx",
    "functions": [
      "FolderSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/input-mapping/input-mapping.tsx",
    "functions": [
      "isInputTriggerBlock",
      "isStarterBlock",
      "isInputFormatField",
      "InputMapping",
      "InputMappingField"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/tag-dropdown",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/knowledge-base-selector/knowledge-base-selector.tsx",
    "functions": [
      "KnowledgeBaseSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types",
      "@/stores/knowledge/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/knowledge-tag-filters/knowledge-tag-filters.tsx",
    "functions": [
      "KnowledgeTagFilters"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/tag-dropdown",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/blocks/types",
      "@/hooks/use-knowledge-base-tag-definitions",
      "@/hooks/use-tag-selection",
      "../../hooks/use-sub-block-value"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/mcp-dynamic-args/mcp-dynamic-args.tsx",
    "functions": [
      "McpDynamicArgs"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "next/navigation",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/select",
      "@/components/ui/slider",
      "@/components/ui/switch",
      "@/components/ui/textarea",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/hooks/use-mcp-tools",
      "@/tools/params"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/mcp-server-modal/mcp-server-selector.tsx",
    "functions": [
      "McpServerSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types",
      "@/stores/mcp-servers/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/mcp-server-modal/mcp-tool-selector.tsx",
    "functions": [
      "McpToolSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types",
      "@/hooks/use-mcp-tools"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/project-selector/project-selector-input.tsx",
    "functions": [
      "ProjectSelectorInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/tooltip",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/project-selector/components/jira-project-selector",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/project-selector/components/linear-project-selector",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/project-selector/components/linear-team-selector",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-depends-on-gate",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-foreign-credential",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types",
      "@/hooks/use-collaborative-workflow",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/response/response-format.tsx",
    "functions": [
      "ResponseFormat"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/starter/input-format"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/schedule/schedule-config.tsx",
    "functions": [
      "ScheduleConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/lib/logs/console/logger",
      "@/lib/schedules/utils",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/schedule/components/schedule-modal",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/stores/workflows",
      "@/stores/workflows/registry/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/starter/input-format.tsx",
    "functions": [
      "FieldFormat",
      "InputFormat",
      "ResponseFormat"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/dropdown-menu",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/select",
      "@/components/ui/tag-dropdown",
      "@/components/ui/textarea",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/tool-input.tsx",
    "functions": [
      "GenericSyncWrapper",
      "FileSelectorSyncWrapper",
      "TableSyncWrapper",
      "TimeInputSyncWrapper",
      "SliderInputSyncWrapper",
      "CheckboxListSyncWrapper",
      "CodeSyncWrapper",
      "ComboboxSyncWrapper",
      "FileUploadSyncWrapper",
      "ChannelSelectorSyncWrapper",
      "ToolInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/popover",
      "@/components/ui/select",
      "@/components/ui/switch",
      "@/components/ui/toggle",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/lib/oauth/oauth",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/custom-tool-modal/custom-tool-modal",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/mcp-server-modal/mcp-server-modal",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/mcp-tools-list",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/tool-command/tool-command",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/tool-credential-selector",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks",
      "@/hooks/use-mcp-tools",
      "@/providers/utils",
      "@/stores/custom-tools/store",
      "@/stores/workflows/subblock/store",
      "@/stores/workflows/workflow/store",
      "@/tools/params"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/trigger-config/trigger-config.tsx",
    "functions": [
      "TriggerConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/stores/workflows/subblock/store",
      "@/triggers",
      "./components/trigger-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/webhook.tsx",
    "functions": [
      "WebhookConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/icons",
      "@/components/ui/button",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/stores/workflows/subblock/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/account/hooks/use-profile-picture-upload.ts",
    "functions": [
      "useProfilePictureUpload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/components/auth-selector.tsx",
    "functions": [
      "AuthSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-chat-form"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/components/identifier-input.tsx",
    "functions": [
      "IdentifierInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-identifier-validation"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/components/success-view.tsx",
    "functions": [
      "SuccessView"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui",
      "@/lib/urls/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "./use-chat-deployment",
      "./use-chat-form",
      "./use-image-upload"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-chat-deployment.ts",
    "functions": [
      "useChatDeployment"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "zod",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-chat-form",
      "@/stores/panel/chat/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-chat-form.ts",
    "functions": [
      "useChatForm"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-identifier-validation.ts",
    "functions": [
      "useIdentifierValidation"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/chat-deploy/hooks/use-image-upload.ts",
    "functions": [
      "useImageUpload"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/deployment-info/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/copilot-message/components/file-display.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/user-input/user-input"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/copilot-message/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/copilot-message/components/markdown-renderer.tsx",
    "functions": [
      "LinkWithPreview",
      "CopilotMarkdownRenderer"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "react-markdown",
      "remark-gfm",
      "@/components/ui/tooltip"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/copilot-message/components/smooth-streaming.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "./markdown-renderer"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/copilot-message/components/thinking-block.tsx",
    "functions": [
      "ThinkingBlock"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/copilot/components/user-input/components/copilot-slider.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@radix-ui/react-slider",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/channel-selector/components/slack-channel-selector.tsx",
    "functions": [
      "SlackChannelSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal.tsx",
    "functions": [
      "getScopeDescription",
      "OAuthRequiredModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/lib/oauth"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components/confluence-file-selector.tsx",
    "functions": [
      "ConfluenceFileSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components/google-calendar-selector.tsx",
    "functions": [
      "GoogleCalendarSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components/google-drive-picker.tsx",
    "functions": [
      "GoogleDrivePicker"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "react-google-drive-picker",
      "@/components/icons",
      "@/components/ui/button",
      "@/lib/env",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components/jira-issue-selector.tsx",
    "functions": [
      "JiraIssueSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components/microsoft-file-selector.tsx",
    "functions": [
      "MicrosoftFileSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal",
      "@/tools/microsoft_planner/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components/teams-message-selector.tsx",
    "functions": [
      "TeamsMessageSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/file-selector/components/wealthbox-file-selector.tsx",
    "functions": [
      "WealthboxFileSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/folder-selector/components/folder-selector-input.tsx",
    "functions": [
      "FolderSelectorInput"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/folder-selector/folder-selector",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-depends-on-gate",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-foreign-credential",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/blocks/types",
      "@/hooks/use-collaborative-workflow",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/project-selector/components/jira-project-selector.tsx",
    "functions": [
      "JiraProjectSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/project-selector/components/linear-project-selector.tsx",
    "functions": [
      "LinearProjectSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/project-selector/components/linear-team-selector.tsx",
    "functions": [
      "LinearTeamSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/schedule/components/schedule-modal.tsx",
    "functions": [
      "ScheduleModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/hooks/use-sub-block-value",
      "@/stores/workflows/subblock/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/mcp-tools-list.tsx",
    "functions": [
      "McpToolsList"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "./tool-command/tool-command"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/tool-credential-selector.tsx",
    "functions": [
      "ToolCredentialSelector"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/popover",
      "@/lib/logs/console/logger",
      "@/lib/oauth",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/credential-selector/components/oauth-required-modal",
      "@/stores/workflows/registry/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/trigger-config/components/trigger-config-section.tsx",
    "functions": [
      "TriggerConfigSection"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/command",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/popover",
      "@/components/ui/select",
      "@/components/ui/switch",
      "@/components/ui/tooltip",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/triggers/types",
      "../../credential-selector/credential-selector"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/trigger-config/components/trigger-instructions.tsx",
    "functions": [
      "TriggerInstructions"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components",
      "@/triggers/types"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/trigger-config/components/trigger-modal.tsx",
    "functions": [
      "TriggerModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/select",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/stores/workflows/subblock/store",
      "@/triggers",
      "@/triggers/types",
      "../../credential-selector/credential-selector",
      "./trigger-config-section",
      "./trigger-instructions"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/webhook-modal.tsx",
    "functions": [
      "WebhookModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/webhook"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components/cancel-subscription/cancel-subscription.tsx",
    "functions": [
      "CancelSubscription"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/lib/utils",
      "@/stores/organization",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components/cancel-subscription/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components/plan-card/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components/plan-card/plan-card.tsx",
    "functions": [
      "PlanCard"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components/usage-limit/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components/usage-limit/usage-limit.tsx",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components/member-invitation-card/member-invitation-card.tsx",
    "functions": [
      "ButtonSkeleton",
      "MemberInvitationCard"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/alert",
      "@/components/ui/badge",
      "@/components/ui/button",
      "@/components/ui/checkbox",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/lib/email/validation",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components/no-organization-view/no-organization-view.tsx",
    "functions": [
      "NoOrganizationView"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/alert",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/input",
      "@/components/ui/label"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components/remove-member-dialog/remove-member-dialog.tsx",
    "functions": [
      "RemoveMemberDialog"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/button",
      "@/components/ui/dialog"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components/team-members/team-members.tsx",
    "functions": [
      "TeamMembers"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/stores/organization"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components/team-seats/team-seats.tsx",
    "functions": [
      "TeamSeats"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/label",
      "@/components/ui/select",
      "@/components/ui/tooltip",
      "@/lib/billing/constants",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components/team-seats-overview/team-seats-overview.tsx",
    "functions": [
      "TeamSeatsSkeleton",
      "TeamSeatsOverview"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/progress",
      "@/components/ui/skeleton",
      "@/lib/billing/constants",
      "@/lib/billing/subscriptions/utils",
      "@/lib/env"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/team-management/components/team-usage/team-usage.tsx",
    "functions": [
      "TeamUsage"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/alert",
      "@/components/ui/skeleton",
      "@/lib/auth-client",
      "@/lib/logs/console/logger",
      "@/lib/urls/utils",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/shared/usage-header",
      "@/app/workspace/[workspaceId]/w/components/sidebar/components/settings-modal/components/subscription/components",
      "@/stores/organization",
      "@/stores/subscription/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/deployment-info/components/api-endpoint/api-endpoint.tsx",
    "functions": [
      "ApiEndpoint"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/copy-button",
      "@/components/ui/label"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/deployment-info/components/api-key/api-key.tsx",
    "functions": [
      "ApiKey"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/label"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/deployment-info/components/deploy-status/deploy-status.tsx",
    "functions": [
      "DeployStatus"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/control-bar/components/deploy-modal/components/deployment-info/components/example-command/example-command.tsx",
    "functions": [
      "ExampleCommand"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/copy-button",
      "@/components/ui/dropdown-menu",
      "@/components/ui/label",
      "@/lib/env",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/chat/components/output-select/output-select"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/code-editor/code-editor.tsx",
    "functions": [
      "CodeEditor"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "prismjs",
      "prismjs/components/prism-javascript",
      "prismjs/components/prism-json",
      "prismjs/themes/prism.css",
      "lucide-react",
      "react-simple-code-editor",
      "@/components/ui/button",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/custom-tool-modal/custom-tool-modal.tsx",
    "functions": [
      "CustomToolModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/alert-dialog",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/label",
      "@/components/ui/tag-dropdown",
      "@/components/ui/tooltip",
      "@/lib/logs/console/logger",
      "@/lib/utils",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/wand-prompt-bar/wand-prompt-bar",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/code-editor/code-editor",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-wand",
      "@/stores/custom-tools/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/mcp-server-modal/mcp-server-modal.tsx",
    "functions": [
      "McpServerModal"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "next/navigation",
      "@/components/ui/button",
      "@/components/ui/dialog",
      "@/components/ui/env-var-dropdown",
      "@/components/ui/formatted-text",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/select",
      "@/lib/logs/console/logger",
      "@/lib/mcp/types",
      "@/app/workspace/[workspaceId]/w/[workflowId]/hooks/use-accessible-reference-prefixes",
      "@/hooks/use-mcp-server-test",
      "@/stores/mcp-servers/store"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/tool-input/components/tool-command/tool-command.tsx",
    "functions": [
      "Command",
      "CommandInput",
      "CommandList",
      "CommandEmpty",
      "CommandGroup",
      "CommandItem",
      "CommandSeparator"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "react",
      "lucide-react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/airtable.tsx",
    "functions": [
      "AirtableConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/generic.tsx",
    "functions": [
      "GenericConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/github.tsx",
    "functions": [
      "GithubConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/select",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/gmail.tsx",
    "functions": [
      "GmailConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/microsoftteams.tsx",
    "functions": [
      "MicrosoftTeamsConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/outlook.tsx",
    "functions": [
      "OutlookConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/icons",
      "@/components/ui",
      "@/lib/logs/console/logger",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/slack.tsx",
    "functions": [
      "SlackConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/icons",
      "@/components/ui",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/panel/components/console/components",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/stripe.tsx",
    "functions": [
      "StripeConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/alert",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/telegram.tsx",
    "functions": [
      "TelegramConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/providers/whatsapp.tsx",
    "functions": [
      "WhatsAppConfig"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui",
      "@/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/config-field.tsx",
    "functions": [
      "ConfigField"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/label",
      "@/components/ui/tooltip"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/config-section.tsx",
    "functions": [
      "ConfigSection"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/confirmation.tsx",
    "functions": [
      "DeleteConfirmDialog",
      "UnsavedChangesDialog"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "@/components/ui/alert-dialog"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/copyable.tsx",
    "functions": [
      "CopyableField"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/index.ts",
    "functions": [],
    "classes": [],
    "exports": {},
    "imports": []
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/instructions-section.tsx",
    "functions": [
      "InstructionsSection"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/test-result.tsx",
    "functions": [
      "TestResultDisplay"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/notice",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/webhook-config-field.tsx",
    "functions": [
      "WebhookConfigField"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "react",
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/tooltip",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/webhook-footer.tsx",
    "functions": [
      "WebhookDialogFooter"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/lib/utils"
    ]
  },
  {
    "filePath": "U:/sim/apps/sim/app/workspace/[workspaceId]/w/[workflowId]/components/workflow-block/components/sub-block/components/webhook/components/ui/webhook-url.tsx",
    "functions": [
      "WebhookUrlField"
    ],
    "classes": [],
    "exports": {},
    "imports": [
      "lucide-react",
      "@/components/ui/button",
      "@/components/ui/input",
      "@/components/ui/label",
      "@/components/ui/tooltip",
      "@/lib/utils"
    ]
  }
]
